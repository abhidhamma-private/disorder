{"version":3,"sources":["Styles/GlobalStyles.js","Styles/Theme.js","Components/Input.js","Components/BlackOutLineButton.js","Components/MainDescription.js","Components/Brand.js","Routes/Auth/AuthPresenter.js","Hooks/useInput.js","Routes/Auth/AuthQueries.js","Routes/Auth/index.js","Routes/Auth/AuthContainer.js","Components/Icons.js","Components/Loader.js","Components/FatText.js","Components/Avatar.js","Routes/Post/PostPresenter.js","fragments.js","Routes/Post/PostQueries.js","Routes/Post/index.js","Routes/Post/PostContainer.js","Components/Tab.js","Components/Write/WriteQuries.js","Components/Write/WritePresenter.js","sharedQueries.js","Components/Write/index.js","Components/Write/WriteContainer.js","Components/Header.js","Components/Timeline.js","Routes/Feed.js","Components/Life.js","Routes/Alarm/AlarmPresenter.js","util/base64.js","Routes/Alarm/AlarmQueries.js","Routes/Diary/DiaryQuries.js","Routes/Alarm/index.js","Routes/Alarm/AlarmContainer.js","Routes/Story/StoryPresenter.js","Routes/Story/StoryQuries.js","Routes/Story/StoryContainer.js","Routes/Story/index.js","Routes/Etc.js","Routes/Me/MePresenter.js","Routes/Me/MeQueries.js","Routes/Me/index.js","Routes/Me/MeConainer.js","Components/FollowButton/FollowButtonQuries.js","Components/FollowButton/FollowButtonPresenter.js","Components/FollowButton/index.js","Components/FollowButton/FollowButtonContainer.js","Components/UserCard.js","Components/SquarePost.js","Routes/Search/SrearchPresenter.js","Routes/Search/SrearchQueries.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/WhiteOutLineButton.js","Components/Progress.js","Components/Survey.js","Components/SurveyDescription.js","Components/Text.js","Components/SelectQuestions.js","Routes/Diary/DiaryPresenter.js","Routes/Diary/index.js","Routes/Diary/DiaryContainer.js","Styles/CustomTheme.js","Routes/Story/StoryCSS.js","Routes/Theme/ThemeContext.js","Components/ThemeExample.js","Routes/Theme/ThemeCSS.js","Routes/Theme/ThemePresenter.js","Routes/Theme/ThemeQueries.js","Routes/Theme/ThemeContainer.js","Routes/Theme/index.js","Components/ModelDescription.js","Routes/SingleQuestion/index.js","Routes/SingleQuestion/SingleQuestion.js","Components/Router.js","Components/App.js","Apollo/LocalState.js","Apollo/Client.js","serviceWorker.js","index.js","assets/image/19.jpg","assets/image/3.jpeg","assets/image/MessengerRGB.svg","assets/image/Search.svg","assets/image/life.gif","assets/image/1.jpg","assets/image/2.jpg","assets/image/24.jpg","assets/image/12.jpg","assets/image/6.jpg"],"names":["createGlobalStyle","reset","props","theme","bgColor","fontColor","blueColor","whiteColor","darkGreyColor","lightGreyColor","redColor","darkBlueColor","boxBorder","borderRadius","borderColor","whiteBox","primaryColor","primaryColorInverted","activeColor","buttonColor","dimgreyColor","removeInputStyle","INDIGO","DEEPORANGE","AMBER","PURPLE","BLUE","TEAL","WORMPINK","FACEBLUE","notMyChatGrey","myChatGrey","Container","styled","input","Input","placeholder","required","value","onChange","onKeyPress","type","className","button","Wrapper","div","BlackOutLineButton","text","onClick","width","style","TextWrapper","Pre","pre","Brand","MainImageWraper","MainImage","img","FormWrapper","Box","StateChanger","Link","span","Form","action","userName","setAction","onSubmit","secret","src","mainImage","defaultValue","useState","setValue","e","target","LOG_IN","gql","CREATE_ACCOUNT","CONFIRM_SECRET","LOCAL_LOG_IN","AuthContainer","console","log","useInput","email","useMutation","variables","requestSecretMutation","createAccountMutation","confirmSecretMutation","localLogInMutation","AuthPresenter","a","async","preventDefault","data","requestSecret","toast","success","error","setTimeout","token","createAccount","undefined","message","confirmSecret","Error","HeartEmpty","xmlns","height","fill","viewBox","d","HeartFull","Logo","fillRule","clipRule","CommentFull","WhiteBackArrow","transform","BlackBackArrow","AddUser","aria-hidden","data-icon","focusable","Survey","WhiteRestart","BlackRestart","Camera","Dance","Check","FeedTeam","MeUser","ETC","StoryMessage","DiaryRead","AlarmSound","Success","position","top","Animation","keyframes","Loader","size","Text","FatText","Avatar","AvatarText","color","background","Post","ThumbnailWraper","Thumbnail","Contents","CoverLetter","Caption","Info","DateWrapper","LikeCountWrapper","LikeWrapper","Dot","Content","Comments","Comment","CommentInfo","Textarea","TextareaAutosize","AvatarWrapper","files","user","avatar","createdAt","title","caption","isLiked","likeCount","newComment","toggleLike","currentItem","comments","selfComments","key","id","url","moment","format","length","map","comment","POST_FRAGMENT","TOGGLE_LIKE","ADD_COMMENT","PostContainer","isLikedS","setIsLiked","likeCountS","setLikeCount","setCurrentItem","setSelfComments","postId","toggleLikeMutation","addCommentMutation","useEffect","totalFiles","PostPresenter","event","which","addComment","Tab","NavLink","SvgWrapper","i","React","memo","exact","to","FEED_QUERY","UPLOAD","form","SearchInput","SurveyWrapper","label","UploadInput","upload","onWriteSubmit","think","myData","history","useHistory","push","multiple","READ_MYDATA","WriteContainer","fileUrl","setFileUrl","refetchQueries","query","postUploadMutation","useQuery","loading","WritePresenter","readMyData","file","formData","FormData","append","axios","post","headers","path","autoClose","info","Header","LogoWrapper","Empty","Search","Massenger","SMWrapper","SearchLogo","alt","MassengerLogo","Timeline","TimelineTail","TimlineCircle","TimelineItem","TimelineItemsWrapper","Type","Behavior","Evaluation","Good","Score","diariesArr","location","useLocation","diary","content","good","score","question","behavior","pathname","diarytype","diaryid","disabled","DIARY_QUERY","PostList","TimelineWrapper","myDataLoading","pollInterval","postsData","postsLoading","diariesData","diariesLoading","posts","seeFeed","diaries","readAllDiary","diariesAndPosts","sort","Write","feed","__typename","Life","life","Alarm","AlarmText","ContinueButtonWapper","SwitchWrapper","Title","TitleText","PushInputWrapper","sendPushMutation","isSubscribed","updateSubscribe","myQuestionData","checked","onColor","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","getQuestionsOfMe","urlB64ToUint8Array","base64String","base64","repeat","replace","rawData","window","atob","outputArray","Uint8Array","charCodeAt","SEND_PUSH","GET_ALLDIARYQUESTION","GET_QUESTIONSOFME","UPDATE_MYQUESTION","CREATE_MYDIARY","AlarmContainer","pushInput","setIsSubscribed","endpoint","auth","p256dh","subscriptionForSend","setSubscriptionForSend","myQuestionLoading","navigator","serviceWorker","ready","then","registration","pushManager","getSubscription","subscription","subscriptionToString","JSON","stringify","subscriptionToJSON","parse","keys","result","p256d","applicationServerKey","AlarmPresenter","unsubscribe","subscribe","userVisibleOnly","ChatHandlerWrapper","BackArrowWrapper","RestartWrapper","ScrollAble","ChatWrapper","MyChatText","NotMyChatText","MyBox","NotMyBoxWrapper","NotMyBox","DateWapper","DateText","DateTail","InputWrapper","Emoji","StyledInput","Send","SendText","chatData","description","setDescription","mutation","chatting","Date","chat","userid","writer","getChatting","newChat","CREATE_MYCHAT","StoryContainer","chatLoading","subscribeToMore","document","updateQuery","prev","subscriptionData","StoryPresenter","Row","client","useApolloClient","writeData","isLoggedIn","localStorage","clear","myDiaries","READ_MYDIARY","UPDATE_MYDIARY","MeContainer","myDiaryData","myDiaryLoading","updateMyDiary","MePresenter","readMyDiary","catch","FOLLOW","UNFOLLOW","AddUserWrapper","isFollowing","FollowButtonContainer","isFollowingS","setIsFollowing","followMutation","unfollowMutation","FollowButtonPresenter","Card","LinkInCard","FollowWrapper","UserCard","isSelf","FollowButton","Overlay","bg","Number","NumberText","SquarePost","commentCount","SearchInputWrapper","ContentsWrapper","UserSection","PostSection","WhiteBox","StartSection","INDEGO","EmptySection","SearchPresenter","searchTerm","search","onSearchSubmit","goBack","searchUser","searchPost","SEARCH","SearchContainer","withRouter","term","split","skip","WhiteOutLineButton","Progress","Item","setDiary","element","Question","Description","Answer","OutLineButtonWrapper","TinyText","SurveyHandlerWrapper","Counter","myQuestion","setSurveyCount","surveyCount","createDiary","isPushQuestion","singleQuestion","totalSurvey","currentSurveyCount","currentQuestion","questionId","SelectQuestionWrapper","SelectSection","ElementBox","ElementBoxText","children","StartSectionDescription","ToModelDescription","allQuestion","updateQuestion","border","filter","emotion","updateMyQuestion","myQuestionRefetch","SurveyDescription","isPushQUestion","DiaryContainer","refetch","allQuestionData","allQuestionLoading","createMyDiary","DiaryPresenter","surveyLength","getAllQuestion","name","ThemeContext","createContext","ThemeAction","reducer","state","createMyColor","setColor","DecriptionBox","ThemeHandlerWrapper","ArrowWrapper","TabWrapper","useContext","dispatch","customColor","MyName","activeClassName","ThemeWrapper","ThemeItem","CheckWrapper","CustomTheme","ThemeExample","CREATE_MYCOLOR","themeInitialState","ThemeContainer","useReducer","onCompleted","useMemo","Provider","ThemePresenter","TabTitleText","TabTitle","count","setCount","mainImage0","mainImage1","mainImage2","mainImage3","mainImage4","contents","SingleQuestion","useParams","find","LoggedInRoutes","component","Feed","Diary","Story","Me","Etc","Theme","App","ModelDescription","LoggedOutRoutes","Auth","from","AppRouter","IS_LOGGEDIN","DefaultStyle","loginCheckLoading","slice","GlobalStyles","Router","POSITION","BOTTOM_LEFT","resolvers","Mutation","logUserIn","_","cache","setItem","logUserOut","__","removeItem","currentConfig","uri","ws","httpLink","createHttpLink","authLink","setContext","Authorization","getItem","sbclient","SubscriptionClient","reconnect","wsLink","WebSocketLink","InMemoryCache","loggedInCheck","Boolean","link","getMainDefinition","kind","operation","concat","ApolloClient","swRegistration","isLocalhost","hostname","match","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.20ea2815.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\nexport default createGlobalStyle`\n    ${reset};\n    * {\n        font-family:\"KakaoL\";\n        box-sizing:border-box;\n        margin:0;\n        padding:0;\n    }\n    body {\n        margin:0;\n        background-color:${props => props.theme.bgColor};\n        color:${props => props.theme.fontColor};\n        font-size:14px;\n    }\n    a {\n        color:${props => props.theme.blueColor};\n        text-decoration:none;\n    }\n    input:focus{\n        outline:none;\n    }\n\n`;\n","export default {\n  bgColor: '#AEB4BB',\n  whiteColor: '#FFFFFF',\n  // blackColor: '#262626',\n  fontColor: '#4B4C4F',\n  darkGreyColor: '#999',\n  lightGreyColor: '#AEB4BB',\n  redColor: '#ED4956',\n  blueColor: '#3B5998',\n  darkBlueColor: '#003569',\n  boxBorder: '1px solid #e6e6e6',\n  borderRadius: '4px',\n  borderColor: '#dadde1',\n  whiteBox: `border:1px solid #dadde1;\n              border-radius:15px;\n              background-color:white;\n              width:95%;\n              height:95%;\n            `,\n\n  primaryColor: '#184fa2',\n  //primaryColor: '#3B5998',\n  // primaryColor: '#65676B',\n  primaryColorInverted: '#ff9d76',\n  //activeColor: '#3B5998', //진한파랑\n  activeColor: '#636469',\n  buttonColor: '#626367',\n\n  dimgreyColor: '#626367',\n  //dimgreyColor: '#677B8C',\n  //search 글쓰기\n  //lightGreyColor: '#E5E6EB',\n  removeInputStyle: `-webkit-appearance:none;\n                     -moz-appearance:none;\n                     -ms-appearance:none;\n                     -o-appearance:none;\n                     appearance:none;\n                     outline:none;\n                     border:none;\n                     background-image:none;\n                     background-color:transparent;\n                     box-shadow: none;\n                     cursor:none;\n                     color: transparent;\n                     text-shadow: 0 0 0 #4B4C4F;\n                     box-sizing:border-box;\n                     `,\n  //사용자정의테마색\n  INDIGO: '#3f51b5',\n  DEEPORANGE: '#ff5722',\n  AMBER: '#ffc107',\n  PURPLE: '#9c27b0',\n  BLUE: '#2196f3',\n  TEAL: '#009688',\n  WORMPINK: '#ffc9a2',\n  FACEBLUE: '#3B5998',\n\n  //chat\n  notMyChatGrey: '#A6A6A6',\n  myChatGrey: '#F5F5F5',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.input`\n  border: 0;\n  border: ${props => props.theme.boxBorder};\n  border-radius: ${props => props.theme.borderRadius};\n  background-color: ${props => props.theme.whiteColor};\n  height: 5vh;\n  font-size: 12px;\n  padding: 0px 15px;\n`;\n\nconst Input = ({\n  placeholder,\n  required = true,\n  value,\n  onChange,\n  onKeyPress,\n  type = 'text',\n  className,\n}) => (\n  <Container\n    className={className}\n    placeholder={placeholder}\n    required={required}\n    value={value}\n    onKeyPress={onKeyPress}\n    onChange={onChange}\n    type={type}\n  />\n);\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.button`\n  width: 100%;\n  height: 100%;\n  border: 0;\n  border-radius: ${props => props.theme.borderRadius};\n  color: ${props => props.theme.buttonColor};\n  font-weight: 600;\n  background-color: transparent;\n  border: 1.5px solid ${props => props.theme.buttonColor};\n  text-align: center;\n  font-size: 1rem;\n`;\nconst Wrapper = styled.div`\n  width: 40vw;\n  height: 5vh;\n`;\nconst BlackOutLineButton = ({ text, onClick, width = '40vw' }) => (\n  <Wrapper style={{ width: width }}>\n    <Container onClick={onClick}>{text}</Container>\n  </Wrapper>\n);\n\nBlackOutLineButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default BlackOutLineButton;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TextWrapper = styled.div`\r\n  display: grid;\r\n  min-width: 380px;\r\n  font-size: 1rem;\r\n  line-height: 1rem;\r\n  align-self: end;\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n  display: grid;\r\n  justify-self: center;\r\n  font-family: 'NanumB';\r\n`;\r\n\r\nexport default () => (\r\n  <TextWrapper>\r\n    {/* prettier-ignore */}\r\n    <Pre>\r\n{`\r\n인간의 괴로움은 보편적이고\r\n\r\n마음의 평화를 만들어내는법을 \r\n아는사람은 드뭅니다. \r\n\r\n왜그런지는 수수께끼이며 이 앱은 \r\n그 수수께끼에 대한것입니다.\r\n`}\r\n    </Pre>\r\n  </TextWrapper>\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n  display: grid;\r\n  cursor: pointer;\r\n  font-family: 'Brand';\r\n  font-size: 8vw;\r\n  color: ${props => props.theme.dimgreyColor};\r\n  font-weight: 800;\r\n  text-align: end;\r\n`;\r\n\r\nexport default () => <Brand>DISORDER</Brand>;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport Input from '../../Components/Input';\nimport BlackOutLineButton from '../../Components/BlackOutLineButton';\nimport Description from '../../Components/MainDescription';\nimport Brand from '../../Components/Brand';\nimport mainImage from '../../assets/image/3.jpeg';\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-template-rows: 10vh 25vh 30vh 40vh;\n  background: white;\n`;\n\nconst MainImageWraper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: block;\n  max-width: 500px;\n`;\n\nconst MainImage = styled.img`\n  background: #dee2e6;\n  -o-object-fit: cover;\n  object-fit: cover;\n  display: block;\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  bottom: 5vh;\n  width: 100%;\n  height: auto;\n`;\nconst FormWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Box = styled.div`\n  ${props => props.theme.whiteBox}\n  border-radius:0px;\n  width: 100%;\n  max-width: 350px;\n`;\n\nconst StateChanger = styled(Box)`\n  text-align: center;\n  padding: 20px 0px;\n`;\n\nconst Link = styled.span`\n  color: ${props => props.theme.activeColor};\n  cursor: pointer;\n`;\n\nconst Form = styled(Box)`\n  padding: 40px;\n  padding-bottom: 30px;\n  margin-bottom: 15px;\n  form {\n    width: 100%;\n    input {\n      width: 100%;\n      &:not(:last-child) {\n        margin-bottom: 7px;\n      }\n    }\n    button {\n      margin-top: 10px;\n    }\n  }\n`;\n\nexport default ({ action, userName, setAction, onSubmit, secret }) => {\n  return (\n    <Wrapper>\n      <Brand />\n      <MainImageWraper>\n        <MainImage src={mainImage} />\n      </MainImageWraper>\n      <Description />\n      <FormWrapper>\n        <Form>\n          {action === 'logIn' && (\n            <form onSubmit={onSubmit}>\n              <Input placeholder={'닉네임'} {...userName} />\n              <BlackOutLineButton text={'로그인'} />\n            </form>\n          )}\n          {action === 'signUp' && (\n            <form onSubmit={onSubmit}>\n              <Input placeholder={'닉네임'} {...userName} />\n              <BlackOutLineButton text={'입장하기'} />\n            </form>\n          )}\n          {action === 'confirm' && (\n            <form onSubmit={onSubmit}>\n              <Input placeholder=\"키를 입력해주세요\" required {...secret} />\n              <BlackOutLineButton text={'확인'} />\n            </form>\n          )}\n        </Form>\n\n        {action !== 'confirm' && (\n          <StateChanger>\n            {action === 'logIn' ? (\n              <>\n                아직 회원이 아니세요?{' '}\n                <Link onClick={() => setAction('signUp')}>회원가입</Link>\n              </>\n            ) : (\n              <>\n                계정이 있으세요?{' '}\n                <Link onClick={() => setAction('logIn')}>로그인</Link>\n              </>\n            )}\n          </StateChanger>\n        )}\n      </FormWrapper>\n    </Wrapper>\n  );\n};\n","import { useState } from 'react';\n\nexport default defaultValue => {\n  const [value, setValue] = useState(defaultValue);\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e;\n    setValue(value);\n  };\n\n  return { value, onChange, setValue };\n};\n","import { gql } from 'apollo-boost';\n\nexport const LOG_IN = gql`\n  mutation requestSecret($email: String!) {\n    requestSecret(email: $email)\n  }\n`;\n\nexport const CREATE_ACCOUNT = gql`\n  mutation createAccount($userName: String!) {\n    createAccount(userName: $userName)\n  }\n`;\n\nexport const CONFIRM_SECRET = gql`\n  mutation confirmSecret($secret: String!, $email: String!) {\n    confirmSecret(secret: $secret, email: $email)\n  }\n`;\n\nexport const LOCAL_LOG_IN = gql`\n  mutation logUserIn($token: String!) {\n    logUserIn(token: $token) @client\n  }\n`;\n\nexport const GET_TOKEN = gql`\n  mutation getToken($userName: String!) {\n    getToken(userName: $userName)\n  }\n`;\n","import AuthContainer from './AuthContainer';\nexport default AuthContainer;\n","import React, { useState } from 'react';\nimport AuthPresenter from './AuthPresenter';\nimport useInput from '../../Hooks/useInput';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n  LOG_IN,\n  CREATE_ACCOUNT,\n  CONFIRM_SECRET,\n  LOCAL_LOG_IN,\n} from './AuthQueries';\nimport { toast } from 'react-toastify';\n\nexport default () => {\n  console.log('auth');\n  const [action, setAction] = useState('signUp');\n  const userName = useInput('');\n  const secret = useInput('');\n  const email = useInput('');\n  const [requestSecretMutation] = useMutation(LOG_IN, {\n    variables: { email: email.value },\n  });\n  const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\n    variables: {\n      userName: userName.value,\n    },\n  });\n  const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\n    variables: {\n      email: email.value,\n      secret: secret.value,\n    },\n  });\n  const [localLogInMutation] = useMutation(LOCAL_LOG_IN);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (action === 'logIn') {\n      if (email.value !== '') {\n        try {\n          const {\n            data: { requestSecret },\n          } = await requestSecretMutation();\n          if (!requestSecret) {\n            toast.error('아직 계정이 없습니다., 하나만들어야해요.');\n            setTimeout(() => setAction('signUp'), 3000);\n          } else {\n            toast.success('이메일에 전송된 키를 확인하세요');\n            setAction('confirm');\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        toast.error('에러');\n      }\n    } else if (action === 'signUp') {\n      if (userName.value !== '') {\n        try {\n          const {\n            data: { createAccount: token },\n          } = await createAccountMutation();\n\n          toast.success('계정이 만들어졌어요!');\n          if (token !== '' && token !== undefined) {\n            setTimeout(() => {\n              localLogInMutation({ variables: { token } });\n            }, 2000);\n          }\n        } catch (e) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error('다 작성해주셔야합니다');\n      }\n    } else if (action === 'confirm') {\n      if (secret.value !== '') {\n        try {\n          const {\n            data: { confirmSecret: token },\n          } = await confirmSecretMutation();\n          if (token !== '' && token !== undefined) {\n            localLogInMutation({ variables: { token } });\n          } else {\n            throw Error();\n          }\n        } catch {\n          toast.error('인증키가 올바르지 않습니다 다시확인해주세요.');\n        }\n      }\n    }\n  };\n\n  return (\n    <AuthPresenter\n      setAction={setAction}\n      action={action}\n      userName={userName}\n      onSubmit={onSubmit}\n    />\n  );\n};\n","import React from 'react';\r\n\r\nexport const Compass = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 5.999l-5.621 2.986c-.899-.104-1.806.191-2.474.859-.662.663-.95 1.561-.862 2.428l-3.043 5.728 5.724-3.042c.884.089 1.772-.205 2.432-.865.634-.634.969-1.524.859-2.473l2.985-5.621zm-5.97 7.22c-.689 0-1.25-.559-1.25-1.249-.001-.691.559-1.251 1.25-1.25.69 0 1.25.56 1.25 1.25-.001.689-.56 1.249-1.25 1.249z\" />\r\n  </svg>\r\n);\r\n\r\nexport const HeartEmpty = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    fill=\"#626367\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 9.229c.234-1.12 1.547-6.229 5.382-6.229 2.22 0 4.618 1.551 4.618 5.003 0 3.907-3.627 8.47-10 12.629-6.373-4.159-10-8.722-10-12.629 0-3.484 2.369-5.005 4.577-5.005 3.923 0 5.145 5.126 5.423 6.231zm-12-1.226c0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-7.962-9.648-9.028-12-3.737-2.338-5.262-12-4.27-12 3.737z\" />\r\n  </svg>\r\n);\r\n\r\nexport const HeartFull = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    fill=\"red\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 4.435c-1.989-5.399-12-4.597-12 3.568 0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-8.118-10-8.999-12-3.568z\" />\r\n  </svg>\r\n);\r\n\r\nexport const User = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 2c2.757 0 5 2.243 5 5.001 0 2.756-2.243 5-5 5s-5-2.244-5-5c0-2.758 2.243-5.001 5-5.001zm0-2c-3.866 0-7 3.134-7 7.001 0 3.865 3.134 7 7 7s7-3.135 7-7c0-3.867-3.134-7.001-7-7.001zm6.369 13.353c-.497.498-1.057.931-1.658 1.302 2.872 1.874 4.378 5.083 4.972 7.346h-19.387c.572-2.29 2.058-5.503 4.973-7.358-.603-.374-1.162-.811-1.658-1.312-4.258 3.072-5.611 8.506-5.611 10.669h24c0-2.142-1.44-7.557-5.631-10.647z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Comment = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 3c5.514 0 10 3.476 10 7.747 0 4.272-4.48 7.748-9.986 7.748-.62 0-1.092-.046-1.759-.097-1 .776-1.774 1.403-3.485 1.962.26-1.383-.113-2.259-.514-3.259-2.383-1.505-4.256-3.411-4.256-6.354 0-4.271 4.486-7.747 10-7.747zm0-2c-6.627 0-12 4.363-12 9.747 0 3.13 1.816 5.916 4.641 7.699.867 2.167-1.084 4.008-3.143 4.502 3.085.266 6.776-.481 9.374-2.497 7.08.54 13.128-3.988 13.128-9.704 0-5.384-5.373-9.747-12-9.747z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Logo = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fillRule=\"evenodd\"\r\n    clipRule=\"evenodd\">\r\n    <path d=\"M19.205 17.646c-.865.18-1.771.07-2.573-.323-.953-.466-1.682-1.291-2.026-2.295-.791-2.305-1.405-5.566-1.975-8.837l5.675-1.947c1.525 2.958 3.087 5.915 3.867 8.188.344 1.003.276 2.102-.19 3.055-.392.802-1.039 1.446-1.832 1.834l1.215 3.542c.29.814 1.322.926 2.392.809l.242.705-4.729 1.623-.261-.759c.903-.478 1.688-1.214 1.41-2.053l-1.215-3.542zm-15.356-.325c-.793-.388-1.44-1.032-1.832-1.834-.466-.953-.534-2.052-.19-3.055.78-2.273 2.342-5.23 3.867-8.188l5.675 1.947c-.57 3.271-1.184 6.532-1.975 8.837-.344 1.004-1.073 1.829-2.026 2.295-.802.393-1.708.503-2.573.323l-1.205 3.512c-.278.839.507 1.575 1.41 2.053l-.271.789-4.729-1.623.252-.735c1.07.118 2.102.005 2.392-.808l1.205-3.513zm14.901-2.821c.414 0 .75.336.75.75s-.336.75-.75.75-.75-.336-.75-.75.336-.75.75-.75zm-15-1c.414 0 .75.336.75.75s-.336.75-.75.75-.75-.336-.75-.75.336-.75.75-.75zm2.5-1.5c.414 0 .75.336.75.75s-.336.75-.75.75-.75-.336-.75-.75.336-.75.75-.75zm11.75-.107c.414 0 .75.336.75.75s-.336.75-.75.75-.75-.336-.75-.75.336-.75.75-.75zm1.939-1.893c-.663-1.525-1.441-3.012-2.178-4.512l-3.917 1.344c.214 1.059.41 2.121.636 3.168h5.459zm-10.419 0c.226-1.047.422-2.109.636-3.168l-3.917-1.344c-.737 1.5-1.515 2.987-2.178 4.512h5.459zm4.915-6.015l1.642-2.79c.141-.238.061-.545-.177-.685-.238-.139-.544-.062-.684.177l-1.643 2.79c-.14.238-.06.545.177.685.08.047.167.069.254.069.171 0 .338-.088.431-.246zm-4.552.246c-.171 0-.337-.088-.431-.246l-1.643-2.79c-.14-.238-.061-.545.177-.685s.544-.061.685.177l1.643 2.79c.14.238.061.545-.177.685-.08.047-.167.069-.254.069zm2.621-.708v-3.023c0-.277-.224-.5-.5-.5s-.5.223-.5.5v3.023c0 .276.224.5.5.5s.5-.224.5-.5z\" />\r\n  </svg>\r\n);\r\n\r\nexport const CommentFull = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 1c-6.627 0-12 4.364-12 9.749 0 3.131 1.817 5.917 4.64 7.7.868 2.167-1.083 4.008-3.142 4.503 2.271.195 6.311-.121 9.374-2.498 7.095.538 13.128-3.997 13.128-9.705 0-5.385-5.373-9.749-12-9.749z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Woman = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    x=\"-24px\"\r\n    y=\"10px\"\r\n    viewBox=\"0 0 26 24\">\r\n    <path d=\"M17.5 12.5c0 .828-.56 1.5-1.25 1.5s-1.25-.672-1.25-1.5.56-1.5 1.25-1.5 1.25.672 1.25 1.5zm-7.75-1.5c-.69 0-1.25.672-1.25 1.5s.56 1.5 1.25 1.5 1.25-.672 1.25-1.5-.56-1.5-1.25-1.5zm3.25 8.354c2.235 0 3-2.354 3-2.354h-6s.847 2.354 3 2.354zm13 3.639c-2.653 1.714-5.418 1.254-6.842-1.488-1.672 1.505-3.706 2.487-6.158 2.487-2.53 0-4.517-.91-6.184-2.445-1.431 2.702-4.178 3.15-6.816 1.446 4.375-1.75-2.729-11.813 4.104-19.375 2.282-2.525 5.472-3.618 8.896-3.618s6.614 1.093 8.896 3.618c6.833 7.562-.271 17.625 4.104 19.375zm-5.668-6.111c.122-.202.312-.354.535-.43 2.447-.828 2.554-4.361 1.554-5.012-.235-.152-.531-.115-.672-.053-.664.295-1.406-.194-1.406-.914 0-.471-.034-1.001-.096-1.473h-10.101c-.813-1.021-.771-2.945-.396-4.57-.903.982-1.693 3.249-1.875 4.57h-2.121c-.062.472-.096 1.002-.096 1.473 0 .72-.742 1.209-1.406.914-.141-.062-.436-.1-.672.053-1 .651-.893 4.184 1.554 5.012.224.076.413.228.535.43 1.709 2.829 4.015 5.111 7.332 5.111 3.316 0 5.623-2.283 7.331-5.111z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Man = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"26\"\r\n    viewBox=\"0 0 24 26\">\r\n    <path d=\"M16.5 14.5c0 .828-.56 1.5-1.25 1.5s-1.25-.672-1.25-1.5.56-1.5 1.25-1.5 1.25.672 1.25 1.5zm-7.75-1.5c-.69 0-1.25.672-1.25 1.5s.56 1.5 1.25 1.5 1.25-.672 1.25-1.5-.56-1.5-1.25-1.5zm3.25 8.354c2.235 0 3-2.354 3-2.354h-6s.847 2.354 3 2.354zm12-6.041c0 1.765-.985 3.991-3.138 4.906-2.025 3.233-4.824 5.781-8.862 5.781-3.826 0-6.837-2.548-8.862-5.781-2.153-.916-3.138-3.142-3.138-4.906 0-2.053.862-3.8 2.71-3.964.852-9.099 8.57-8.408 9.837-10.849.323.559.477 1.571-.02 2.286.873-.045 2.344-1.304 2.755-2.552.754.366 1.033 1.577.656 2.354.542-.103 2.187-1.15 3.062-2.588.688 1.563.026 3.563-.708 4.771l-.012.001c1.796 1.707 2.781 4.129 3.01 6.576 1.859.165 2.71 1.917 2.71 3.965zm-2.58-1.866c-.235-.152-.531-.115-.672-.053-.56.25-1.214-.062-1.372-.66l-.001.016c-.333-2.604-1.125-4.854-2.611-5.565-6.427 7.009-10.82-.914-11.94 3.529-.101.582-.166 1.172-.166 1.766 0 .719-.743 1.209-1.406.914-.14-.062-.437-.1-.672.053-1 .651-.894 4.184 1.554 5.012.224.076.413.228.535.43 2.447 4.053 5.225 5.111 7.331 5.111 3.288 0 5.615-2.269 7.332-5.111.122-.202.312-.354.535-.43 2.447-.828 2.553-4.361 1.553-5.012z\" />\r\n  </svg>\r\n);\r\n\r\nexport const WhiteBackArrow = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1rem\"\r\n    height=\"1rem\"\r\n    viewBox=\"0 0 24 24\"\r\n    transform=\"rotate(180)\"\r\n    fill=\"white\">\r\n    <path d=\"M13.025 1l-2.847 2.828 6.176 6.176h-16.354v3.992h16.354l-6.176 6.176 2.847 2.828 10.975-11z\" />\r\n  </svg>\r\n);\r\n\r\nexport const BlackBackArrow = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1rem\"\r\n    height=\"1rem\"\r\n    viewBox=\"0 0 24 24\"\r\n    transform=\"rotate(180)\"\r\n    fill=\"dimgray\">\r\n    <path d=\"M13.025 1l-2.847 2.828 6.176 6.176h-16.354v3.992h16.354l-6.176 6.176 2.847 2.828 10.975-11z\" />\r\n  </svg>\r\n);\r\n\r\nexport const AddUser = () => (\r\n  <svg\r\n    aria-hidden=\"true\"\r\n    data-icon=\"user-add\"\r\n    fill=\"#626367\"\r\n    focusable=\"false\"\r\n    height=\"2rem\"\r\n    viewBox=\"64 64 896 896\"\r\n    width=\"2rem\">\r\n    <path d=\"M678.3 642.4c24.2-13 51.9-20.4 81.4-20.4h.1c3 0 4.4-3.6 2.2-5.6a371.67 371.67 0 0 0-103.7-65.8c-.4-.2-.8-.3-1.2-.5C719.2 505 759.6 431.7 759.6 349c0-137-110.8-248-247.5-248S264.7 212 264.7 349c0 82.7 40.4 156 102.6 201.1-.4.2-.8.3-1.2.5-44.7 18.9-84.8 46-119.3 80.6a373.42 373.42 0 0 0-80.4 119.5A373.6 373.6 0 0 0 137 888.8a8 8 0 0 0 8 8.2h59.9c4.3 0 7.9-3.5 8-7.8 2-77.2 32.9-149.5 87.6-204.3C357 628.2 432.2 597 512.2 597c56.7 0 111.1 15.7 158 45.1a8.1 8.1 0 0 0 8.1.3zM512.2 521c-45.8 0-88.9-17.9-121.4-50.4A171.2 171.2 0 0 1 340.5 349c0-45.9 17.9-89.1 50.3-121.6S466.3 177 512.2 177s88.9 17.9 121.4 50.4A171.2 171.2 0 0 1 683.9 349c0 45.9-17.9 89.1-50.3 121.6C601.1 503.1 558 521 512.2 521zM880 759h-84v-84c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v84h-84c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h84v84c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-84h84c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Survey = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"#626367\">\r\n    <path d=\"M13 17h4v1h-4v-1zm0-1h4v-1h-4v1zm9-14v22h-20v-22h3c1.23 0 2.181-1.084 3-2h8c.82.916 1.771 2 3 2h3zm-11 1c0 .552.448 1 1 1 .553 0 1-.448 1-1s-.447-1-1-1c-.552 0-1 .448-1 1zm9 1h-4l-2 2h-3.897l-2.103-2h-4v18h16v-18zm-7 9h4v-1h-4v1zm0-2h4v-1h-4v1zm-6.5.077l.386-.355c.449.218.735.383 1.241.745.952-1.081 1.58-1.627 2.748-2.355l.125.288c-.963.841-1.669 1.777-2.686 3.6-.626-.738-1.044-1.208-1.814-1.923zm.098 5l.386-.355c.449.218.735.383 1.241.745.952-1.081 1.58-1.627 2.748-2.355l.125.289c-.963.841-1.669 1.777-2.686 3.6-.627-.739-1.045-1.209-1.814-1.924z\" />\r\n  </svg>\r\n);\r\n\r\nexport const WhiteRestart = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1.3rem\"\r\n    height=\"1.3rem\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"white\">\r\n    <path d=\"M13.5 2c-5.629 0-10.212 4.436-10.475 10h-3.025l4.537 5.917 4.463-5.917h-2.975c.26-3.902 3.508-7 7.475-7 4.136 0 7.5 3.364 7.5 7.5s-3.364 7.5-7.5 7.5c-2.381 0-4.502-1.119-5.876-2.854l-1.847 2.449c1.919 2.088 4.664 3.405 7.723 3.405 5.798 0 10.5-4.702 10.5-10.5s-4.702-10.5-10.5-10.5z\" />\r\n  </svg>\r\n);\r\n\r\nexport const BlackRestart = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1.3rem\"\r\n    height=\"1.3rem\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"#626367\">\r\n    <path d=\"M13.5 2c-5.629 0-10.212 4.436-10.475 10h-3.025l4.537 5.917 4.463-5.917h-2.975c.26-3.902 3.508-7 7.475-7 4.136 0 7.5 3.364 7.5 7.5s-3.364 7.5-7.5 7.5c-2.381 0-4.502-1.119-5.876-2.854l-1.847 2.449c1.919 2.088 4.664 3.405 7.723 3.405 5.798 0 10.5-4.702 10.5-10.5s-4.702-10.5-10.5-10.5z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Camera = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"#626367\">\r\n    <path d=\"M5 4h-3v-1h3v1zm8 6c-1.654 0-3 1.346-3 3s1.346 3 3 3 3-1.346 3-3-1.346-3-3-3zm11-5v17h-24v-17h5.93c.669 0 1.293-.334 1.664-.891l1.406-2.109h8l1.406 2.109c.371.557.995.891 1.664.891h3.93zm-19 4c0-.552-.447-1-1-1s-1 .448-1 1 .447 1 1 1 1-.448 1-1zm13 4c0-2.761-2.239-5-5-5s-5 2.239-5 5 2.239 5 5 5 5-2.239 5-5z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Dance = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"white\">\r\n    <path\r\n      height=\"24\"\r\n      width=\"24\"\r\n      d=\"M18.028 24h-.018c-.268 0-.49-.213-.499-.483-.05-1.462.19-2.847 2.265-3.08.795-.089.858-.367.996-.977.229-1.008.607-1.922 2.701-2.032.285-.02.512.197.526.473.014.276-.197.512-.473.526-1.512.079-1.618.547-1.778 1.254-.152.667-.359 1.581-1.861 1.751-1.016.113-1.432.423-1.377 2.051.01.276-.207.507-.482.517zm-8.342-18.714c.241.213.53.366.842.444l3.566.896c.3.076.617.051.903-.07 1.082-.461 3.862-1.684 5.062-2.155.76-.299 1.268.63.655 1.097-1.39 1.062-5.714 4.086-5.714 4.086l-.862 3.648s1.785 1.86 2.544 2.7c.423.469.696.919.421 1.595-.481 1.181-1.457 3.477-1.908 4.547-.255.605-1.164.453-1.015-.322.217-1.128.781-4.016.781-4.016l-3.558-1.62s-.253 5.953-.327 7.296c-.019.341-.253.589-.582.588-.249-.001-.508-.173-.612-.596-.534-2.178-2.142-8.99-2.142-8.99-.209-.837-.329-1.53-.053-2.564l.915-3.85s-2.726-3.984-3.709-5.476c-.402-.611.356-1.18.808-.78l3.985 3.542zm-7.178 8.489l-.853.511 2.708 4.524c-1.788.306-2.917 1.904-2.048 3.356.537.897 1.753 1.106 2.622.586 1.034-.619 1.774-1.952.979-3.284l-3.408-5.693zm17.721-5.193l.904 1.669 1.867.344-1.308 1.376.249 1.882-1.712-.819-1.713.819.25-1.882-1.309-1.376 1.867-.344.905-1.669zm-17.298-2.935l-2.934 2.935 2.934 2.935 2.935-2.935-2.935-2.935zm9.055-5.398c1.36-.626 2.972-.03 3.597 1.33.626 1.36.03 2.972-1.33 3.598-1.36.625-2.972.029-3.598-1.331-.625-1.36-.029-2.972 1.331-3.597z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const Check = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"white\">\r\n    <path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\" />\r\n  </svg>\r\n);\r\nexport const FeedTeam = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"#626367\"\r\n    viewBox=\"0 0 1024 1024\">\r\n    <path d=\"M824.2 699.9a301.55 301.55 0 0 0-86.4-60.4C783.1 602.8 812 546.8 812 484c0-110.8-92.4-201.7-203.2-200-109.1 1.7-197 90.6-197 200 0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 0 0-86.4 60.4C345 754.6 314 826.8 312 903.8a8 8 0 0 0 8 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5A226.62 226.62 0 0 1 612 684c60.9 0 118.2 23.7 161.3 66.8C814.5 792 838 846.3 840 904.3c.1 4.3 3.7 7.7 8 7.7h56a8 8 0 0 0 8-8.2c-2-77-33-149.2-87.8-203.9zM612 612c-34.2 0-66.4-13.3-90.5-37.5a126.86 126.86 0 0 1-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4 0 34.2-13.3 66.3-37.5 90.5A127.3 127.3 0 0 1 612 612zM361.5 510.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 0 1-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.9-1.7-203.3 89.2-203.3 199.9 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 0 0 8 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.9-1 6.5-4.7 6-8.7z\" />\r\n  </svg>\r\n);\r\n\r\nexport const MeUser = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"#626367\"\r\n    viewBox=\"0 0 1024 1024\">\r\n    <path d=\"M858.5 763.6a374 374 0 0 0-80.6-119.5 375.63 375.63 0 0 0-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 0 0-80.6 119.5A371.7 371.7 0 0 0 136 901.8a8 8 0 0 0 8 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 0 0 8-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" />\r\n  </svg>\r\n);\r\n\r\nexport const ETC = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"#626367\"\r\n    viewBox=\"0 0 1024 1024\">\r\n    <path d=\"M904 160H120c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8zm0 624H120c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8zm0-312H120c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8z\" />\r\n  </svg>\r\n);\r\nexport const StoryMessage = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"#626367\"\r\n    viewBox=\"0 0 1024 1024\">\r\n    <path d=\"M464 512a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm200 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm-400 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm661.2-173.6c-22.6-53.7-55-101.9-96.3-143.3a444.35 444.35 0 0 0-143.3-96.3C630.6 75.7 572.2 64 512 64h-2c-60.6.3-119.3 12.3-174.5 35.9a445.35 445.35 0 0 0-142 96.5c-40.9 41.3-73 89.3-95.2 142.8-23 55.4-34.6 114.3-34.3 174.9A449.4 449.4 0 0 0 112 714v152a46 46 0 0 0 46 46h152.1A449.4 449.4 0 0 0 510 960h2.1c59.9 0 118-11.6 172.7-34.3a444.48 444.48 0 0 0 142.8-95.2c41.3-40.9 73.8-88.7 96.5-142 23.6-55.2 35.6-113.9 35.9-174.5.3-60.9-11.5-120-34.8-175.6zm-151.1 438C704 845.8 611 884 512 884h-1.7c-60.3-.3-120.2-15.3-173.1-43.5l-8.4-4.5H188V695.2l-4.5-8.4C155.3 633.9 140.3 574 140 513.7c-.4-99.7 37.7-193.3 107.6-263.8 69.8-70.5 163.1-109.5 262.8-109.9h1.7c50 0 98.5 9.7 144.2 28.9 44.6 18.7 84.6 45.6 119 80 34.3 34.3 61.3 74.4 80 119 19.4 46.2 29.1 95.2 28.9 145.8-.6 99.6-39.7 192.9-110.1 262.7z\" />\r\n  </svg>\r\n);\r\nexport const DiaryRead = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"#626367\"\r\n    viewBox=\"0 0 1024 1024\">\r\n    <path d=\"M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 0 0 324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z\" />\r\n  </svg>\r\n);\r\nexport const AlarmSound = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"#626367\"\r\n    viewBox=\"0 0 1024 1024\">\r\n    <path d=\"M625.9 115c-5.9 0-11.9 1.6-17.4 5.3L254 352H90c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16h164l354.5 231.7c5.5 3.6 11.6 5.3 17.4 5.3 16.7 0 32.1-13.3 32.1-32.1V147.1c0-18.8-15.4-32.1-32.1-32.1zM586 803L293.4 611.7l-18-11.7H146V424h129.4l17.9-11.7L586 221v582zm348-327H806c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16h128c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16zm-41.9 261.8l-110.3-63.7a15.9 15.9 0 0 0-21.7 5.9l-19.9 34.5c-4.4 7.6-1.8 17.4 5.8 21.8L856.3 800a15.9 15.9 0 0 0 21.7-5.9l19.9-34.5c4.4-7.6 1.7-17.4-5.8-21.8zM760 344a15.9 15.9 0 0 0 21.7 5.9L892 286.2c7.6-4.4 10.2-14.2 5.8-21.8L878 230a15.9 15.9 0 0 0-21.7-5.9L746 287.8a15.99 15.99 0 0 0-5.8 21.8L760 344z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Success = () => (\r\n  <svg\r\n    height=\"100%\"\r\n    width=\"100%\"\r\n    viewBox=\"-2 -5 17 21\"\r\n    style={{ position: 'absolute', top: 0 }}>\r\n    <path\r\n      d=\"M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0\"\r\n      fill=\"#fff\"\r\n      fillRule=\"evenodd\"></path>\r\n  </svg>\r\n);\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Logo } from './Icons';\r\nconst Animation = keyframes`\r\n    0%{\r\n        opacity:0\r\n    }\r\n    50%{\r\n        opacity:1\r\n    }\r\n    100%{\r\n        opacity:0;\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  animation: ${Animation} 1s linear infinite;\r\n  width: 100%;\r\n  height: 86vh;\r\n  text-align: center;\r\n`;\r\n\r\nexport default () => (\r\n  <>\r\n    <Loader>\r\n      <Logo size={36} />\r\n    </Loader>\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Text = styled.span`\r\n  font-weight: 600;\r\n`;\r\n\r\nconst FatText = ({ text, className }) => (\r\n  <Text className={className}>{text}</Text>\r\n);\r\n\r\nFatText.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FatText;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Avatar = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  height: 85%;\r\n  width: 85%;\r\n  border-radius: 100px;\r\n  background: ${props => props.theme.dimgreyColor};\r\n`;\r\n\r\nexport const AvatarText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\n\r\nexport default ({ color, text }) => {\r\n  return (\r\n    <Avatar style={{ background: color }}>\r\n      <AvatarText>{text}</AvatarText>\r\n    </Avatar>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport { HeartFull, HeartEmpty } from '../../Components/Icons';\r\nimport FatText from '../../Components/FatText';\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\nimport Avatar from '../../Components/Avatar';\r\nconst Post = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 11fr 9fr;\r\n  grid-template-columns: 1fr;\r\n  height: 78vh;\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\n\r\nconst ThumbnailWraper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  display: block;\r\n  min-height: 45vh;\r\n`;\r\n\r\nconst Thumbnail = styled.img`\r\n  background: #dee2e6;\r\n  -o-object-fit: cover;\r\n  object-fit: cover;\r\n  display: block;\r\n  border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px;\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-rows: 1.5fr 3fr;\r\n  grid-template-columns: 1fr;\r\n  box-shadow: 0 -4px 16px rgba(0, 0, 0, 0.05);\r\n  padding: 1rem 1rem;\r\n  padding-top: 0.5rem;\r\n  font-size: 18px;\r\n  min-height: 33vh;\r\n`;\r\n\r\nconst CoverLetter = styled.div`\r\n  border-bottom: 1px solid #e9ecef;\r\n  display: grid;\r\n`;\r\n\r\n// const UserName = styled.div`\r\n//   font-weight: 900;\r\n//   color: #fa983a;\r\n//   align-self: end;\r\n//   justify-self: start;\r\n// `;\r\n\r\nconst Caption = styled.div`\r\n  margin-top: 5px;\r\n  font-weight: 900;\r\n  font-size: 25px;\r\n  align-self: start;\r\n  justify-self: start;\r\n  max-width: 70vw;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: grid;\r\n  color: #8aa6c1;\r\n  grid-template-columns: 3.5fr 0.1fr 3fr 0.5fr;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\nconst DateWrapper = styled.div``;\r\n\r\nconst LikeCountWrapper = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: end;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst LikeWrapper = styled.div`\r\n  cursor: pointer;\r\n`;\r\nconst Dot = styled.span`\r\n  &::before {\r\n    color: #8aa6c1;\r\n    padding-left: 0.5rem;\r\n    padding-right: 0.5rem;\r\n    font-weight: 900;\r\n    content: '';\r\n  }\r\n`;\r\nconst Content = styled.div`\r\n  display: grid;\r\n  grid-auto-columns: 2fr 2fr;\r\n  -webkit-box-orient: vertical;\r\n  text-align-last: center;\r\n  margin-top: 0.07vh;\r\n  line-height: 1.5rem;\r\n  height: 100%;\r\n  word-break: break-all;\r\n  color: #4c657d;\r\n  overflow-y: hidden;\r\n  -webkit-line-clamp: 3;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n  :last-child {\r\n    align-items: end;\r\n  }\r\n`;\r\n\r\n// const Title = styled.div`\r\n//   display: grid;\r\n//   min-height: 10vh;\r\n//   border-bottom: 1px solid #e9ecef;\r\n// `;\r\n\r\nconst Comments = styled.div`\r\n  display: grid;\r\n  margin-top: 5px;\r\n  max-height: 12vh;\r\n  overflow-y: hidden;\r\n  word-break: break-all;\r\n  color: #4c657d;\r\n  -webkit-line-clamp: 3;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst Comment = styled.div`\r\n  margin-bottom: 5px;\r\n  span {\r\n    margin-right: 5px;\r\n  }\r\n  overflow-y: hidden;\r\n  word-break: break-all;\r\n  color: #4c657d;\r\n  -webkit-line-clamp: 3;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst CommentInfo = styled.div`\r\n  display: grid;\r\n  align-self: start;\r\n  justify-self: start;\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n  margin-top: 5px;\r\n  border: 1px solid #e9ecef;\r\n  min-height: 5vh;\r\n  width: 100%;\r\n  resize: none;\r\n  font-size: 14px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst AvatarWrapper = styled.div`\r\n  position: absolute;\r\n  display: grid;\r\n  justify-self: flex-end;\r\n  z-index: 1;\r\n  width: 4.5rem;\r\n  height: 4.5rem;\r\n  border-radius: 50%;\r\n  background: white;\r\n  top: -2rem;\r\n  right: 1rem;\r\n`;\r\nexport default ({\r\n  files,\r\n  user: { userName, avatar },\r\n  title,\r\n  createdAt,\r\n  caption,\r\n  isLiked,\r\n  likeCount,\r\n  newComment,\r\n  currentItem,\r\n  toggleLike,\r\n  onKeyPress,\r\n  comments,\r\n  selfComments,\r\n}) => (\r\n  <>\r\n    <Post>\r\n      <ThumbnailWraper>\r\n        <Thumbnail\r\n          key={files[0].id}\r\n          src={`https://boongyee.com/${files[0].url}`}\r\n        />\r\n      </ThumbnailWraper>\r\n      {/* <TimelineWrapper>\r\n        <Me />\r\n      </TimelineWrapper> */}\r\n      <Contents>\r\n        <AvatarWrapper>\r\n          <Avatar color={avatar} text={userName} />\r\n        </AvatarWrapper>\r\n        <CoverLetter>\r\n          {/* <UserName>{userName}</UserName> */}\r\n          <Caption>{caption}</Caption>\r\n          <Info>\r\n            <DateWrapper>\r\n              {moment(createdAt).format('YYYY년 MM월 DD일')}\r\n            </DateWrapper>\r\n            <Dot />\r\n            <LikeCountWrapper>\r\n              {likeCount === 1\r\n                ? '1개의 응원'\r\n                : `${likeCount ? `${likeCount}개의 응원` : ''}`}\r\n            </LikeCountWrapper>\r\n\r\n            <LikeWrapper onClick={toggleLike}>\r\n              {isLiked ? <HeartFull /> : <HeartEmpty />}\r\n            </LikeWrapper>\r\n          </Info>\r\n        </CoverLetter>\r\n        <Content>\r\n          {/* <Title>{title}</Title> */}\r\n          {comments.length !== 0 ? (\r\n            <Comments>\r\n              <CommentInfo>최근댓글</CommentInfo>\r\n              {comments.map(comment => (\r\n                <Comment key={comment.id}>\r\n                  <FatText text={comment.user.userName} />\r\n                  {comment.text}\r\n                </Comment>\r\n              ))}\r\n              {selfComments.map(comment => (\r\n                <Comment key={comment.id}>\r\n                  <FatText text={comment.user.userName} />\r\n                  {comment.text}\r\n                </Comment>\r\n              ))}\r\n            </Comments>\r\n          ) : (\r\n            <CommentInfo>최근댓글이 없어요</CommentInfo>\r\n          )}\r\n          <Textarea\r\n            onKeyPress={onKeyPress}\r\n            placeholder={'응원해주기'}\r\n            value={newComment.value}\r\n            onChange={newComment.onChange}\r\n          />\r\n        </Content>\r\n      </Contents>\r\n    </Post>\r\n  </>\r\n);\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const POST_FRAGMENT = gql`\r\n  fragment PostParts on Post {\r\n    id\r\n    title\r\n    caption\r\n    user {\r\n      id\r\n      avatar\r\n      userName\r\n    }\r\n    files {\r\n      id\r\n      url\r\n    }\r\n    likeCount\r\n    isLiked\r\n    comments {\r\n      id\r\n      text\r\n      user {\r\n        id\r\n        userName\r\n      }\r\n    }\r\n    createdAt\r\n  }\r\n`;\r\n\r\n// export const USER_FRAGMENT = gql`\r\n//   fragment UserParts on User {\r\n//     id\r\n//     avatar\r\n//     userName\r\n//     isFollowing\r\n//     isSelf\r\n//     followingCount\r\n//     followersCount\r\n//     postsCount\r\n//     posts {\r\n//       ...PostParts\r\n//     }\r\n//   }\r\n// `;\r\n","import { gql } from 'apollo-boost';\r\nimport { POST_FRAGMENT } from '../../fragments';\r\nexport const TOGGLE_LIKE = gql`\r\n  mutation toggelLike($postId: String!) {\r\n    toggleLike(postId: $postId)\r\n  }\r\n`;\r\n\r\nexport const ADD_COMMENT = gql`\r\n  mutation addComment($postId: String!, $text: String!) {\r\n    addComment(postId: $postId, text: $text) {\r\n      id\r\n      text\r\n      user {\r\n        userName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const POST_SUBSCRIPTION = gql`\r\n  subscription onPostAdded {\r\n    postAdded {\r\n      ...PostParts\r\n    }\r\n  }\r\n  ${POST_FRAGMENT}\r\n`;\r\n","import PostContainer from './PostContainer';\r\nexport default PostContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useInput from '../../Hooks/useInput';\r\nimport PostPresenter from './PostPresenter';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { TOGGLE_LIKE, ADD_COMMENT } from './PostQueries';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst PostContainer = ({\r\n  id,\r\n  user,\r\n  files,\r\n  likeCount,\r\n  comments,\r\n  createdAt,\r\n  caption,\r\n  title,\r\n  isLiked,\r\n}) => {\r\n  const [isLikedS, setIsLiked] = useState(isLiked);\r\n  const [likeCountS, setLikeCount] = useState(likeCount);\r\n  const [currentItem, setCurrentItem] = useState(0);\r\n  const [selfComments, setSelfComments] = useState([]);\r\n  const comment = useInput('');\r\n  const [toggleLikeMutation] = useMutation(TOGGLE_LIKE, {\r\n    variables: { postId: id },\r\n  });\r\n  const [addCommentMutation] = useMutation(ADD_COMMENT, {\r\n    variables: { postId: id, text: comment.value },\r\n  });\r\n  useEffect(() => {\r\n    const totalFiles = files.length;\r\n    if (currentItem === totalFiles - 1) {\r\n      setCurrentItem(0);\r\n    } else {\r\n      setCurrentItem(currentItem + 1);\r\n    }\r\n  }, [currentItem, files]);\r\n\r\n  const toggleLike = () => {\r\n    try {\r\n      toggleLikeMutation();\r\n      if (isLikedS === true) {\r\n        setIsLiked(false);\r\n        setLikeCount(likeCountS - 1);\r\n      } else {\r\n        setIsLiked(true);\r\n        setLikeCount(likeCountS + 1);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const onKeyPress = async event => {\r\n    const { which } = event;\r\n    if (which === 13) {\r\n      event.preventDefault();\r\n      try {\r\n        const {\r\n          data: { addComment },\r\n        } = await addCommentMutation();\r\n        setSelfComments([...selfComments, addComment]);\r\n        comment.setValue('');\r\n      } catch (e) {\r\n        console.log(e);\r\n        toast.error(e);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <PostPresenter\r\n      isLiked={isLikedS}\r\n      user={user}\r\n      files={files}\r\n      onKeyPress={onKeyPress}\r\n      likeCount={likeCountS}\r\n      title={title}\r\n      caption={caption}\r\n      createdAt={createdAt}\r\n      currentItem={currentItem}\r\n      toggleLike={toggleLike}\r\n      newComment={comment}\r\n      comments={comments}\r\n      setIsLiked={setIsLiked}\r\n      setLikeCount={setLikeCount}\r\n      selfComments={selfComments}\r\n    />\r\n  );\r\n};\r\n\r\nPostContainer.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    userName: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  files: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  likeCount: PropTypes.number.isRequired,\r\n  isLiked: PropTypes.bool.isRequired,\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        userName: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    })\r\n  ).isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  createdAt: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PostContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  FeedTeam,\r\n  DiaryRead,\r\n  AlarmSound,\r\n  MeUser,\r\n  StoryMessage,\r\n  ETC,\r\n} from '../Components/Icons';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  background: ${props => props.theme.whiteColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst Tab = styled(NavLink)`\r\n  z-index: 10;\r\n  display: grid;\r\n  > i {\r\n    display: grid;\r\n  }\r\n\r\n  i > svg {\r\n    width: 50%;\r\n    height: 50%;\r\n    align-self: center;\r\n    justify-self: center;\r\n    color: ${props => props.theme.dimgreyColor};\r\n  }\r\n\r\n  &.active {\r\n    & {\r\n      border-bottom: 0.5vh solid ${props => props.theme.activeColor};\r\n    }\r\n    > i > svg {\r\n      color: ${props => props.theme.activeColor};\r\n    }\r\n  }\r\n`;\r\nconst SvgWrapper = styled.i``;\r\nexport default React.memo(() => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Tab exact to={'/disorder/'}>\r\n          <SvgWrapper>\r\n            <FeedTeam />\r\n          </SvgWrapper>\r\n        </Tab>\r\n        <Tab exact to={'/diary'}>\r\n          <SvgWrapper>\r\n            <DiaryRead />\r\n          </SvgWrapper>\r\n        </Tab>\r\n        <Tab exact to={'/alarm'}>\r\n          <SvgWrapper>\r\n            <AlarmSound />\r\n          </SvgWrapper>\r\n        </Tab>\r\n        <Tab exact to={'/story'}>\r\n          <SvgWrapper>\r\n            <StoryMessage />\r\n          </SvgWrapper>\r\n        </Tab>\r\n        <Tab exact to={'/me'}>\r\n          <SvgWrapper>\r\n            <MeUser />\r\n          </SvgWrapper>\r\n        </Tab>\r\n        <Tab exact to={'/etc'}>\r\n          <SvgWrapper>\r\n            <ETC />\r\n          </SvgWrapper>\r\n        </Tab>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n});\r\n// function menuToggle(event) {\r\n//   //1.각 tab에게 active 클래스를 없애준다.\r\n//   document\r\n//     .querySelectorAll('div > a')\r\n//     .forEach(a => (a.className = a.className.replace(' active', '')));\r\n\r\n//   //2.클릭한 컴포넌트에 active클래스를 추가한다.\r\n//   if (\r\n//     !document\r\n//       .querySelector(`a[href=\"${event.currentTarget.getAttribute('href')}\"]`)\r\n//       .className.includes('active')\r\n//   ) {\r\n//     if (event.currentTarget.getAttribute('href') === '/feed') {\r\n//       document\r\n//         .querySelector('div > div > div:first-child')\r\n//         .setAttribute(\r\n//           'style',\r\n//           'display: grid;grid-template-columns: 3fr 3fr 1fr 1fr;'\r\n//         );\r\n//       document\r\n//         .querySelector('div > div')\r\n//         .setAttribute(\r\n//           'style',\r\n//           'grid-template-rows: minmax(7vh, 1fr) minmax(7vh, 1fr);'\r\n//         );\r\n//     } else {\r\n//       document\r\n//         .querySelector('div > div > div:first-child')\r\n//         .setAttribute('style', 'display:none');\r\n//       document\r\n//         .querySelector('div > div')\r\n//         .setAttribute('style', 'grid-template-rows: minmax(7vh, 1fr);');\r\n//     }\r\n//     document.querySelector(\r\n//       `a[href=\"${event.currentTarget.getAttribute('href')}\"]`\r\n//     ).className += ' active';\r\n//   }\r\n// }\r\n","import { gql } from 'apollo-boost';\r\nimport { POST_FRAGMENT } from '../../fragments';\r\nexport const FEED_QUERY = gql`\r\n  {\r\n    seeFeed {\r\n      ...PostParts\r\n    }\r\n  }\r\n  ${POST_FRAGMENT}\r\n`;\r\n\r\nexport const UPLOAD = gql`\r\n  mutation upload($caption: String!, $files: [String!]!, $title: String) {\r\n    upload(caption: $caption, files: $files, title: $title) {\r\n      id\r\n      caption\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Avatar from '../Avatar';\r\nimport Input from '../Input';\r\nimport { Survey, Camera } from '../Icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.form`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  grid-template-columns: 8.1vh 5fr 1fr 1fr;\r\n  background: white;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst SearchInput = styled(Input)`\r\n  display: grid;\r\n  background-color: ${props => props.theme.whiteColor};\r\n  color: ${props => props.theme.dimgreyColor};\r\n  padding: 7px;\r\n  padding-left: 0.7rem;\r\n  font-size: 18px;\r\n  border-radius: 16px;\r\n  height: auto;\r\n  width: 95%;\r\n  &::placeholder {\r\n    text-align: center;\r\n    padding-bottom: 5px;\r\n    opacity: 0.8;\r\n    font-weight: 200;\r\n    color: ${props => props.theme.dimgreyColor};\r\n  }\r\n`;\r\nconst SurveyWrapper = styled.label`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nconst UploadInput = styled.input`\r\n  display: none;\r\n`;\r\nexport default ({\r\n  upload,\r\n  onWriteSubmit,\r\n  think,\r\n  myData: { avatar, userName },\r\n}) => {\r\n  let history = useHistory();\r\n  const godiary = () => history.push('/diary');\r\n  return (\r\n    <Wrapper onSubmit={onWriteSubmit}>\r\n      <Avatar color={avatar} text={userName} />\r\n\r\n      <SearchInput\r\n        placeholder=\"무슨 생각이 떠올랐나요?\"\r\n        value={think.value}\r\n        onChange={think.onChange}\r\n      />\r\n      <SurveyWrapper onClick={godiary}>\r\n        <Survey />\r\n      </SurveyWrapper>\r\n      <SurveyWrapper>\r\n        <Camera />\r\n        <UploadInput type=\"file\" onChange={upload} multiple />\r\n      </SurveyWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const READ_MYDATA = gql`\r\n  query readMyData {\r\n    readMyData {\r\n      id\r\n      userName\r\n      avatar\r\n    }\r\n  }\r\n`;\r\n","import WriteContainer from './WriteContainer';\r\nexport default WriteContainer;\r\n","import React, { useState } from 'react';\r\nimport { FEED_QUERY, UPLOAD } from './WriteQuries';\r\nimport useInput from '../../Hooks/useInput';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport WritePresenter from './WritePresenter';\r\nimport { READ_MYDATA } from '../../sharedQueries';\r\nimport Loader from 'Components/Loader';\r\n\r\nexport default () => {\r\n  const [fileUrl, setFileUrl] = useState('');\r\n  const think = useInput('');\r\n  const [postUploadMutation] = useMutation(UPLOAD, {\r\n    refetchQueries: () => [{ query: FEED_QUERY }],\r\n  });\r\n  const { data, loading } = useQuery(READ_MYDATA);\r\n\r\n  const upload = async event => {\r\n    console.log('upload');\r\n    const file = event.target.files[0];\r\n    console.log('file : ', file);\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      const {\r\n        data: { path },\r\n      } = await axios.post('https://boongyee.com/api/upload', formData, {\r\n        headers: {\r\n          'content-type': 'multipart/form-data',\r\n        },\r\n      });\r\n      if (path === undefined) {\r\n        console.log('path:undefined');\r\n        setFileUrl('upLoadFail');\r\n      } else {\r\n        console.log('path');\r\n        setFileUrl(path);\r\n        toast.success(\r\n          `파일이 첨부되었어요! \"무슨생각이 떠올랐나요?\" 란에 \r\n    제목을 작성하고 포스트를 게시해 보세요.`,\r\n          { autoClose: 5000 }\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.log('upload fail : ', e);\r\n      setFileUrl('upLoadFail');\r\n    }\r\n  };\r\n\r\n  const onWriteSubmit = async event => {\r\n    event.preventDefault();\r\n    console.log('서브밋');\r\n    console.log(fileUrl === '');\r\n    if (fileUrl === '' || fileUrl === 'upLoadFail') {\r\n      toast.info('첨부된 파일이없어 랜덤한 이미지로 작성됩니다.');\r\n    } else {\r\n    }\r\n\r\n    console.log(fileUrl);\r\n    await postUploadMutation({\r\n      variables: {\r\n        title: '치료적일기',\r\n        caption: think.value,\r\n        files: [fileUrl],\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <WritePresenter\r\n          myData={data.readMyData}\r\n          upload={upload}\r\n          onWriteSubmit={onWriteSubmit}\r\n          think={think}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MassengerLogo from '../assets/image/MessengerRGB.svg';\r\nimport SearchLogo from '../assets/image/Search.svg';\r\nimport Brand from '../Components/Brand';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 3fr 1fr 1fr;\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\n\r\nconst LogoWrapper = styled(Link)`\r\n  display: grid;\r\n  align-items: center;\r\n`;\r\n\r\nconst Empty = styled.div``;\r\n\r\nconst Search = styled.img`\r\n  max-width: 55%;\r\n  height: auto;\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\n\r\nconst Massenger = styled.img`\r\n  max-width: 55%;\r\n  height: auto;\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\n\r\nconst SMWrapper = styled(Link)`\r\n  width: 5vh;\r\n  height: 5vh;\r\n  display: grid;\r\n  border-radius: 50%;\r\n  background: lightgrey;\r\n  align-self: center;\r\n  justify-self: start;\r\n`;\r\n\r\nexport default () => (\r\n  <Header>\r\n    <LogoWrapper to=\"/\">\r\n      <Brand />\r\n    </LogoWrapper>\r\n    <Empty />\r\n    <SMWrapper to=\"/search\">\r\n      <Search src={SearchLogo} alt=\"\" />\r\n    </SMWrapper>\r\n    <SMWrapper to=\"/story\">\r\n      <Massenger src={MassengerLogo} alt=\"\" />\r\n    </SMWrapper>\r\n  </Header>\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n//import TextareaAutosize from 'react-autosize-textarea/lib';\r\nimport useInput from 'Hooks/useInput';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Timeline = styled.div`\r\n  display: grid;\r\n  grid-column: 100%;\r\n  grid-auto-rows: 17vh;\r\n`;\r\nconst TimelineTail = styled.div`\r\n  position: absolute;\r\n  height: calc(100% - 2vw);\r\n  left: 2vw;\r\n  top: 3vw;\r\n  border-left: 2vw solid ${props => props.theme.lightGreyColor};\r\n`;\r\n\r\nconst TimlineCircle = styled.div`\r\n  position: absolute;\r\n  width: 6vw;\r\n  height: 6vw;\r\n  background-color: ${props => props.theme.activeColor};\r\n  border-radius: 100px;\r\n  top: 0.5vw;\r\n`;\r\n\r\nconst TimelineItem = styled.div`\r\n  position: relative;\r\n`;\r\nconst TimelineItemsWrapper = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-left: 7vw;\r\n  grid-template-areas:\r\n    'type behavior behavior'\r\n    'content content content'\r\n    'content content content'\r\n    'evaluation evaluation evaluation'\r\n    'evaluation evaluation evaluation';\r\n`;\r\nconst Type = styled.div`\r\n  font-family: 'KakaoB';\r\n  align-self: start;\r\n  justify-self: start;\r\n  font-size: 5vw;\r\n  grid-area: type;\r\n  padding-top: 0.5vw;\r\n`;\r\nconst Content = styled.input`\r\n  font-size: 5vw;\r\n  padding-top: 1vw;\r\n  grid-area: content;\r\n  overflow-y: hidden;\r\n  -webkit-line-clamp: 2;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n  cursor: none;\r\n  &:focus {\r\n    outline: none !important;\r\n    border-radius: 1vh;\r\n    /* box-shadow: 0 0 10px ${props => props.theme.activeColor}; */\r\n    border: 2.5px solid ${props => props.theme.activeColor};\r\n  }\r\n  resize: none;\r\n  ${props => props.theme.removeInputStyle}\r\n`;\r\nconst Behavior = styled.div`\r\n  display: grid;\r\n  align-self: start;\r\n  justify-self: end;\r\n  font-size: 4vw;\r\n  border: 3px solid ${props => props.theme.activeColor};\r\n  border-radius: 30px;\r\n  padding: 1vw;\r\n  grid-area: behavior;\r\n`;\r\nconst Evaluation = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: start;\r\n  justify-items: start;\r\n  grid-area: evaluation;\r\n`;\r\nconst Good = styled.input`\r\n  font-family: 'KakaoL';\r\n  width: 10vh;\r\n  font-weight: 900;\r\n  &:focus {\r\n    outline: none !important;\r\n    border-radius: 1vh;\r\n    border: 2.5px solid ${props => props.theme.activeColor};\r\n  }\r\n  ${props => props.theme.removeInputStyle}\r\n`;\r\nconst Score = styled.input`\r\n  font-family: 'KakaoL';\r\n  font-weight: 900;\r\n  width: 100%;\r\n  &:focus {\r\n    outline: none !important;\r\n    border-radius: 1vh;\r\n    border: 2.5px solid ${props => props.theme.activeColor};\r\n  }\r\n  ${props => props.theme.removeInputStyle}\r\n`;\r\n\r\nconst Empty = styled.div`\r\n  display: grid;\r\n`;\r\n\r\nexport default ({ diariesArr, onKeyPress }) => {\r\n  let location = useLocation();\r\n  // const TimelineAction = {\r\n  //   CREATE_DIARYSTATE: 'CREATE_DIARYSTATE',\r\n  //     SET_ACTION: 'SET_ACTION',\r\n  //     COUNT_SURVEY: 'COUNT_SURVEY',\r\n  //     INIT_DIARY: 'INIT_DIARY',\r\n  //     CREATE_MYDIARY: 'CREATE_MYDIARY',\r\n  //     UPDATE_MYQUESTION: 'UPDATE_MYQUESTION',\r\n  //     REFETCH_MYQUESTION: 'REFETCH_MYQUESTION',\r\n  //     GET_QUESTIONSOFME: 'GET_QUESTIONSOFME',\r\n  //     SET_MANY: 'SET_MANY',\r\n  //     SET_DIARYCONTENT: 'SET_DIARYCONTENT',\r\n  //     SET_DIARYQUESTION: 'SET_DIARYQUESTION',\r\n  //   };\r\n  // const reducer = (state, action) => {\r\n  //   switch(action.type) {\r\n  //     case TimelineAction.CREATE_DIARYSTATE:\r\n  //       return {\r\n  //         ...state,[action.id]:{\r\n  //           content:a,\r\n  //         }\r\n  //       };\r\n  //     default:\r\n  //       return state;\r\n  //   }\r\n  // }\r\n\r\n  // const [state, dispatch]\r\n  //  = useReducer(reducer,{});\r\n\r\n  // const content = useInput();\r\n  // const good = useInput();\r\n  // const score = useInput();\r\n\r\n  return (\r\n    <Timeline>\r\n      {diariesArr ? (\r\n        diariesArr.map(diary => {\r\n          const content = useInput();\r\n          const good = useInput();\r\n          const score = useInput();\r\n          return (\r\n            <TimelineItem key={diary.id}>\r\n              <TimelineTail />\r\n              <TimlineCircle />\r\n              <TimelineItemsWrapper>\r\n                <Type>{diary.question.type}</Type>\r\n                <Behavior>{diary.question.behavior ? '행동' : '생각'}</Behavior>\r\n                {location.pathname === '/me' ? (\r\n                  <>\r\n                    <Content\r\n                      diarytype={'content'}\r\n                      diaryid={diary.id}\r\n                      defaultValue={diary.content}\r\n                      value={content.value}\r\n                      onChange={content.onChange}\r\n                      onKeyPress={event =>\r\n                        onKeyPress(event, diary.id, 'content', content.value)\r\n                      }\r\n                      // onBlur={event =>\r\n                      //   onKeyPress(event, diary.id, 'content', content.value)\r\n                      // }\r\n                    />\r\n                    <Evaluation>\r\n                      <Good\r\n                        diarytype={'good'}\r\n                        diaryid={diary.id}\r\n                        defaultValue={`${diary.good ? '긍정적' : '부정적'}느낌`}\r\n                        value={good.value}\r\n                        onChange={good.onChange}\r\n                      />\r\n\r\n                      <Score\r\n                        diarytype={'score'}\r\n                        diaryid={diary.id}\r\n                        // style={\r\n                        //   diary.good ? { color: '#00695C' } : { color: '#FF5722' }\r\n                        // }\r\n                        defaultValue={diary.score}\r\n                        value={score.value}\r\n                        onChange={score.onChange}></Score>\r\n                    </Evaluation>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Content defaultValue={diary.content} disabled />\r\n                    <Evaluation>\r\n                      <Good\r\n                        defaultValue={`${diary.good ? '긍정적' : '부정적'}느낌`}\r\n                        disabled\r\n                      />\r\n\r\n                      <Score defaultValue={diary.score} disabled />\r\n                    </Evaluation>\r\n                  </>\r\n                )}\r\n              </TimelineItemsWrapper>\r\n            </TimelineItem>\r\n          );\r\n        })\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </Timeline>\r\n  );\r\n};\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport Loader from '../Components/Loader';\nimport Post from '../Routes/Post';\nimport Tab from '../Components/Tab';\nimport Write from '../Components/Write';\nimport Header from '../Components/Header';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { READ_MYDATA } from '../sharedQueries';\nimport Timeline from 'Components/Timeline';\n\nconst FEED_QUERY = gql`\n  {\n    seeFeed {\n      id\n      title\n      caption\n      user {\n        id\n        avatar\n        userName\n      }\n      files {\n        id\n        url\n      }\n      likeCount\n      isLiked\n      comments {\n        id\n        text\n        user {\n          id\n          userName\n        }\n      }\n      createdAt\n    }\n  }\n`;\n\nconst DIARY_QUERY = gql`\n  {\n    readAllDiary {\n      id\n      content\n      good\n      score\n      user {\n        id\n      }\n      question {\n        id\n        type\n        behavior\n      }\n      createdAt\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: 7vh 7vh 8vh;\n`;\n\nconst PostList = styled.div`\n  display: grid;\n  justify-content: center;\n  grid-gap: 1px;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  text-align: center;\n`;\n\nconst TimelineWrapper = styled.div`\n  display: grid;\n  height: 100%;\n  background: white;\n  padding: 10vw;\n  padding-top: 0;\n  padding-bottom: 0;\n`;\nexport default () => {\n  console.log('feed');\n  let location = useLocation();\n  let history = useHistory();\n\n  const { data: readMyData, loading: myDataLoading } = useQuery(READ_MYDATA);\n  const { data: postsData, loading: postsLoading } = useQuery(FEED_QUERY, {\n    pollInterval: 5000,\n  });\n  const { data: diariesData, loading: diariesLoading } = useQuery(DIARY_QUERY, {\n    pollInterval: 5000,\n  });\n  if (postsLoading || myDataLoading || diariesLoading) {\n    return <Loader />;\n  }\n\n  const posts = postsData.seeFeed;\n  const diaries = diariesData.readAllDiary;\n  const diariesAndPosts = [...posts, ...diaries].sort((posts, diaries) =>\n    posts.createdAt > diaries.createdAt ? -1 : 1\n  );\n\n  return (\n    <>\n      {readMyData &&\n        readMyData.readMyData &&\n        (readMyData.readMyData.avatar === 'avatar.png'\n          ? history.push('/theme')\n          : '')}\n      <Wrapper>\n        <Header />\n        <Tab />\n        <Write />\n        <PostList>\n          {!(postsLoading || diariesLoading) &&\n            postsData &&\n            diariesData &&\n            postsData.seeFeed &&\n            diariesData.readAllDiary &&\n            diariesAndPosts.map(feed =>\n              feed.__typename === 'Post' ? (\n                <Post\n                  key={feed.id}\n                  id={feed.id}\n                  title={feed.title}\n                  caption={feed.caption}\n                  user={feed.user}\n                  files={feed.files}\n                  likeCount={feed.likeCount}\n                  isLiked={feed.isLiked}\n                  comments={feed.comments}\n                  createdAt={feed.createdAt}\n                />\n              ) : (\n                <TimelineWrapper key={feed.id}>\n                  <Timeline diariesArr={[feed]} />\n                </TimelineWrapper>\n              )\n            )}\n        </PostList>\n      </Wrapper>\n    </>\n  );\n};\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport life from '../assets/image/life.gif';\r\n\r\nconst Life = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  align-self: end;\r\n`;\r\n\r\nexport default () => <Life src={life} alt=\"\" />;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tab from '../../Components/Tab';\r\nimport Life from 'Components/Life';\r\nimport Switch from 'react-switch';\r\nimport { Success } from '../../Components/Icons';\r\nimport Input from 'Components/Input';\r\nimport BlackOutLineButton from 'Components/BlackOutLineButton';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh 7vh 7vh 7vh 7vh 7vh 7vh 7vh 7vh;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Alarm = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 6fr 4fr;\r\n  background: white;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n  font-size: 1rem;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst AlarmText = styled.div`\r\n  display: grid;\r\n\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\nconst ContinueButtonWapper = styled.div`\r\n  justify-self: center;\r\n`;\r\nconst Empty = styled.div``;\r\nconst SwitchWrapper = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n`;\r\nconst Title = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 4fr 2fr;\r\n  background: ${props => props.theme.activeColor};\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst TitleText = styled.div`\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  color: white;\r\n`;\r\nconst PushInputWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  height: 7vh;\r\n  width: 100%;\r\n  background: white;\r\n`;\r\n\r\nexport default ({\r\n  sendPushMutation,\r\n  isSubscribed,\r\n  updateSubscribe,\r\n  myQuestionData,\r\n}) => {\r\n  let history = useHistory();\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Tab />\r\n        <Title>\r\n          <Empty />\r\n          <TitleText>알람</TitleText>\r\n          <SwitchWrapper>\r\n            <Switch\r\n              onChange={updateSubscribe}\r\n              checked={isSubscribed}\r\n              onColor=\"#07C50E\"\r\n              uncheckedIcon={false}\r\n              checkedIcon={false}\r\n              boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n              activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n              // eslint-disable-next-line\r\n              checkedIcon={<Success />}\r\n            />\r\n          </SwitchWrapper>\r\n        </Title>\r\n        {myQuestionData.getQuestionsOfMe.map(question => (\r\n          <Alarm key={question.id}>\r\n            <AlarmText>{question.type}</AlarmText>\r\n            <ContinueButtonWapper>\r\n              <BlackOutLineButton\r\n                width={'30vw'}\r\n                onClick={() => history.push(`/singlequestion${question.id}`)}\r\n                text={'지금 작성하기'}\r\n              />\r\n            </ContinueButtonWapper>\r\n          </Alarm>\r\n        ))}\r\n\r\n        <PushInputWrapper>\r\n          <BlackOutLineButton\r\n            width={'80vw'}\r\n            text=\"하루중 가장 기억에 남았던 일이 무엇인가요?\"\r\n            onClick={async () => await sendPushMutation()}\r\n          />\r\n        </PushInputWrapper>\r\n        <PushInputWrapper>\r\n          <Life />\r\n        </PushInputWrapper>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n","/* eslint-disable */\r\nconst urlB64ToUint8Array = base64String => {\r\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n  const base64 = (base64String + padding)\r\n    .replace(/\\-/g, '+')\r\n    .replace(/_/g, '/');\r\n\r\n  const rawData = window.atob(base64);\r\n  const outputArray = new Uint8Array(rawData.length);\r\n\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i);\r\n  }\r\n  return outputArray;\r\n};\r\nexport default urlB64ToUint8Array;\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const SEND_PUSH = gql`\r\n  # mutation sendPush($endpoint: String, $p256dh: String, $auth: String) {\r\n  #   sendPush(endpoint: $endpoint, p256dh: $p256dh, auth: $auth)\r\n  # }\r\n  mutation sendPush(\r\n    $endpoint: String!\r\n    $auth: String!\r\n    $p256d: String!\r\n    $message: String!\r\n  ) {\r\n    sendPush(endpoint: $endpoint, auth: $auth, p256d: $p256d, message: $message)\r\n  }\r\n`;\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const GET_ALLDIARYQUESTION = gql`\r\n  query getAllQuestion {\r\n    getAllQuestion {\r\n      id\r\n      type\r\n      description\r\n      question\r\n      behavior\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_QUESTIONSOFME = gql`\r\n  query getQuestionsOfMe {\r\n    getQuestionsOfMe {\r\n      id\r\n      type\r\n      description\r\n      question\r\n      behavior\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_MYQUESTION = gql`\r\n  mutation updateMyQuestion($question: String!) {\r\n    updateMyQuestion(question: $question)\r\n  }\r\n`;\r\n\r\nexport const CREATE_MYDIARY = gql`\r\n  mutation createMyDiary(\r\n    $content: String\r\n    $good: Boolean\r\n    $score: Int\r\n    $questionId: String\r\n  ) {\r\n    createMyDiary(\r\n      content: $content\r\n      good: $good\r\n      score: $score\r\n      questionId: $questionId\r\n    )\r\n  }\r\n`;\r\n","import AlarmContainer from './AlarmContainer';\r\nexport default AlarmContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport AlarmPresenter from './AlarmPresenter';\r\nimport urlB64ToUint8Array from 'util/base64';\r\nimport useInput from 'Hooks/useInput';\r\n// import webpush from 'web-push';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { SEND_PUSH } from './AlarmQueries';\r\nimport { GET_QUESTIONSOFME } from 'Routes/Diary/DiaryQuries';\r\nimport Loader from 'Components/Loader';\r\n//import toast from 'react-toastify';\r\n\r\nexport default () => {\r\n  const pushInput = useInput('');\r\n  const [isSubscribed, setIsSubscribed] = useState(false);\r\n  const [subscriptionForSend, setSubscriptionForSend] = useState({\r\n    endpoint: '',\r\n    auth: '',\r\n    p256dh: '',\r\n  });\r\n  const { data: myQuestionData, loading: myQuestionLoading } = useQuery(\r\n    GET_QUESTIONSOFME\r\n  );\r\n  useEffect(() => {\r\n    navigator.serviceWorker.ready\r\n      .then(registration =>\r\n        registration.pushManager.getSubscription().then(subscription => {\r\n          if (subscription !== null) {\r\n            const subscriptionToString = JSON.stringify(subscription);\r\n            console.log('subscriptionToString : ', subscriptionToString);\r\n            const subscriptionToJSON = JSON.parse(subscriptionToString);\r\n            console.log('subscriptionToJSON : ', subscriptionToJSON);\r\n            //console.log('subscriptionToJSONkyes : ', subscriptionToJSON.keys);\r\n            setSubscriptionForSend({\r\n              endpoint: subscriptionToJSON.endpoint,\r\n              auth: subscriptionToJSON.keys.auth,\r\n              p256dh: subscriptionToJSON.keys.p256dh,\r\n            });\r\n          }\r\n          return !(subscription === null);\r\n        })\r\n      )\r\n      .then(result => {\r\n        if (typeof result === undefined) {\r\n        } else {\r\n          setIsSubscribed(result);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  //console.log('subscription : ', subscriptionForSend);\r\n  const [sendPushMutation] = useMutation(SEND_PUSH, {\r\n    variables: {\r\n      endpoint: subscriptionForSend.endpoint,\r\n      auth: subscriptionForSend.auth,\r\n      p256d: subscriptionForSend.p256dh,\r\n      message: pushInput.value,\r\n    },\r\n  });\r\n  //console.log('isSubscribed : ', isSubscribed);\r\n\r\n  const applicationServerKey = urlB64ToUint8Array(\r\n    'BJOsTa5vJrAqQ7gSvPp-4RxSQAsmp32_xm3m-umN751YNxW8BCu1166_33r0LXIxTHb_0KrYIqKGDTAe10WR5UA'\r\n  );\r\n  const subscribeUser = () => {\r\n    //console.log('subscribeUser');\r\n    return navigator.serviceWorker.ready.then(registration =>\r\n      registration.pushManager\r\n        .subscribe({\r\n          userVisibleOnly: true,\r\n          applicationServerKey: applicationServerKey,\r\n        })\r\n        .then(subscription => {\r\n          const subscriptionToString = JSON.stringify(subscription);\r\n          //console.log('subscriptionToString : ', subscriptionToString);\r\n          const subscriptionToJSON = JSON.parse(subscriptionToString);\r\n          console.log('subscriptionToJSON : ', subscriptionToJSON);\r\n          //console.log('subscriptionToJSONkyes : ', subscriptionToJSON.keys);\r\n          setSubscriptionForSend({\r\n            endpoint: subscriptionToJSON.endpoint,\r\n            auth: subscriptionToJSON.keys.auth,\r\n            p256dh: subscriptionToJSON.keys.p256dh,\r\n          });\r\n          console.log('구독완료');\r\n          //console.log('User is subscribed. subscription : ', subscription);\r\n          setIsSubscribed(true);\r\n          //updateSubscriptionOnServer(subscription);\r\n        })\r\n    );\r\n  };\r\n\r\n  const unsubscribeUser = () => {\r\n    //console.log('unsubscribeUser');\r\n    //서비스워커가 준비된 상태인지 확인\r\n    return navigator.serviceWorker.ready.then(registration =>\r\n      //섭스크립션 정보 얻기\r\n      registration.pushManager.getSubscription().then(subscription => {\r\n        if (subscription) {\r\n          //구독중이라면 구독취소\r\n          console.log('구독취소');\r\n          subscription.unsubscribe();\r\n          setIsSubscribed(false);\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const updateSubscribe = async () => {\r\n    if (isSubscribed) {\r\n      await unsubscribeUser();\r\n    } else {\r\n      await subscribeUser();\r\n    }\r\n  };\r\n\r\n  // const sendPush = async () => {\r\n  //   const vapidKeys = webpush.generateVAPIDKeys();\r\n\r\n  //   await webpush.setGCMAPIKey(\r\n  //     'AAAANiqBhss:APA91bE3gamSqbcI3UErhK8wO-QlHwfefPsHiG8O5QQv1fU5GqKvEHOCT3vYD3iXY9R_ByxTTOw6qazWLxaxlLX64WnbyoOeLMGkWCgLpSOhQRlaLG86hoKDIX85sQY0iwKgHe0TICNE'\r\n  //   );\r\n  //   await webpush.setVapidDetails(\r\n  //     'mailto:abhidhamma91@gmail.com',\r\n  //     vapidKeys.publicKey,\r\n  //     vapidKeys.privateKey\r\n  //   );\r\n  //   await webpush\r\n  //     .sendNotification(subscription)\r\n  //     .then(() => {\r\n  //       console.log(\r\n  //         'Push Application Server - Notification sent to ' +\r\n  //           subscription.endpoint\r\n  //       );\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(error);\r\n  //     });\r\n  // };\r\n\r\n  if (myQuestionLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <AlarmPresenter\r\n      isSubscribed={isSubscribed}\r\n      updateSubscribe={updateSubscribe}\r\n      pushInput={pushInput}\r\n      sendPushMutation={sendPushMutation}\r\n      myQuestionData={myQuestionData}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Dance, WhiteBackArrow, WhiteRestart } from '../../Components/Icons';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Input from '../../Components/Input';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  background: white;\r\n  grid-template-rows: 8vh 84vh 8vh;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\nexport const Title = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  color: white;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const TitleText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\nexport const ChatHandlerWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 4fr 3fr;\r\n  height: 7vh;\r\n  justify-items: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  background-color: ${props => props.theme.activeColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nexport const BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\n\r\nexport const RestartWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\n\r\nexport const ScrollAble = styled.div`\r\n  display: block;\r\n  overflow-y: scroll;\r\n  transform: rotate(180deg);\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ChatWrapper = styled.div`\r\n  display: grid;\r\n  transform: rotate(180deg);\r\n  grid-gap: 1vh;\r\n  background: white;\r\n  padding: 2vw;\r\n  margin-bottom: 1vh;\r\n  align-content: end;\r\n  align-self: end;\r\n`;\r\n\r\nexport const MyChatText = styled.div`\r\n  display: grid;\r\n  padding: 2vw;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: black;\r\n`;\r\n\r\nexport const NotMyChatText = styled.div`\r\n  display: grid;\r\n  padding: 2vw;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\n\r\nexport const MyBox = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: end;\r\n  background: ${props => props.theme.myChatGrey};\r\n  border-radius: 13px;\r\n`;\r\n\r\nexport const NotMyBoxWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 1vh;\r\n  grid-auto-rows: 15vw;\r\n  grid-template-columns: 15vw minmax(0, 60vw);\r\n  height: 100%;\r\n`;\r\n\r\nexport const NotMyBox = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: start;\r\n  background: ${props => props.theme.notMyChatGrey};\r\n  border-radius: 13px;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  height: 85%;\r\n  width: 85%;\r\n  border-radius: 20px;\r\n  background: ${props => props.theme.dimgreyColor};\r\n`;\r\n\r\nexport const AvatarText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\n\r\nexport const DateWapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 3fr 3fr;\r\n  margin-bottom: 10vw;\r\n`;\r\nexport const DateText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 3vw;\r\n  color: dimgrey;\r\n`;\r\nexport const DateTail = styled.div`\r\n  border-bottom: 0.5vw solid #dee2e6;\r\n  margin-bottom: 0.4vw;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: grid;\r\n  height: 8vh;\r\n  align-self: end;\r\n  grid-template-columns: 1fr 1fr 6fr 1fr;\r\n`;\r\nexport const Emoji = styled.div`\r\n  display: grid;\r\n  width: 8vh;\r\n  height: 8vh;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background: ${props => props.theme.activeColor};\r\n`;\r\n\r\nexport const SvgWrapper = styled.div`\r\n  display: grid;\r\n`;\r\nexport const Empty = styled.div`\r\n  display: grid;\r\n  background: white;\r\n`;\r\nexport const StyledInput = styled(Input)`\r\n  display: grid;\r\n  height: 100%;\r\n  font-size: 1.5rem;\r\n  padding: 0;\r\n  outline: none;\r\n  border: none;\r\n`;\r\nexport const Send = styled.div`\r\n  display: grid;\r\n  width: 8vh;\r\n  height: 8vh;\r\n  background: ${props => props.theme.activeColor};\r\n`;\r\n\r\nexport const SendText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\n\r\nexport default ({\r\n  chatData,\r\n  description,\r\n  setDescription,\r\n  mutation,\r\n  onKeyPress,\r\n  myData: {\r\n    readMyData: { id },\r\n  },\r\n}) => {\r\n  console.log('StoryPresenter');\r\n  console.log('id', id);\r\n  chatData = chatData.chatting;\r\n  console.log('chatData : ', chatData);\r\n  const history = useHistory();\r\n  return (\r\n    <Wrapper>\r\n      <ChatHandlerWrapper>\r\n        <BackArrowWrapper onClick={() => history.push('/disorder/')}>\r\n          <WhiteBackArrow color={'white'} />\r\n          <Text>돌아가기</Text>\r\n        </BackArrowWrapper>\r\n        <Title>\r\n          <TitleText>이야기</TitleText>\r\n        </Title>\r\n        <RestartWrapper onClick={() => history.push('/disorder/')}>\r\n          <WhiteRestart color={'white'} />\r\n          <Text>처음으로</Text>\r\n        </RestartWrapper>\r\n      </ChatHandlerWrapper>\r\n      <ScrollAble>\r\n        <ChatWrapper>\r\n          <DateWapper>\r\n            <DateTail />\r\n            <DateText>{moment(new Date()).format('YYYY년 MM월 DD일')}</DateText>\r\n            <DateTail />\r\n          </DateWapper>\r\n          {chatData.map(chat => {\r\n            return chat.userid === id ? (\r\n              <MyBox key={chat.id}>\r\n                <MyChatText>{chat.description}</MyChatText>\r\n              </MyBox>\r\n            ) : (\r\n              <NotMyBoxWrapper key={chat.id}>\r\n                <Avatar style={{ background: chat.avatar }}>\r\n                  <AvatarText>{chat.writer}</AvatarText>\r\n                </Avatar>\r\n                <NotMyBox>\r\n                  <NotMyChatText>{chat.description}</NotMyChatText>\r\n                </NotMyBox>\r\n              </NotMyBoxWrapper>\r\n            );\r\n          })}\r\n        </ChatWrapper>\r\n      </ScrollAble>\r\n      <InputWrapper>\r\n        <Emoji>\r\n          <SvgWrapper>\r\n            <Dance />\r\n          </SvgWrapper>\r\n        </Emoji>\r\n        <Empty />\r\n        <StyledInput\r\n          onKeyPress={e => onKeyPress(e)}\r\n          placeholder=\"\"\r\n          value={description}\r\n          onChange={e => {\r\n            setDescription(e.target.value);\r\n          }}\r\n        />\r\n        <Send>\r\n          <SendText\r\n            onClick={() => {\r\n              mutation();\r\n              setDescription('');\r\n            }}>\r\n            전송\r\n          </SendText>\r\n        </Send>\r\n      </InputWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import gql from 'graphql-tag';\r\n\r\nexport const getChatting = gql`\r\n  query chatting {\r\n    chatting {\r\n      id\r\n      userid\r\n      writer\r\n      description\r\n      avatar\r\n    }\r\n  }\r\n`;\r\n\r\nexport const newChat = gql`\r\n  subscription newChat {\r\n    newChat {\r\n      id\r\n      userid\r\n      writer\r\n      description\r\n      avatar\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MYCHAT = gql`\r\n  mutation createMyChat($description: String!) {\r\n    createMyChat(description: $description)\r\n  }\r\n`;\r\n\r\n// let unsubscribe = null; //publish 했을때 변화\r\n\r\n// export default () => (\r\n//   <Query query={getChatting}>\r\n//     {({ loading, data, subscribeToMore }) => {\r\n//       if (loading) {\r\n//         return null;\r\n//       }\r\n//       if (!unsubscribe) {\r\n//         unsubscribe = subscribeToMore({\r\n//           document: newChat,\r\n//           updateQuery: (prev, { subscriptionData }) => {\r\n//             if (!subscriptionData.data) return prev;\r\n//             const { newChat } = subscriptionData.data;\r\n//             return {\r\n//               ...prev,\r\n//               chatting: [...prev.chatting, newChat],\r\n//             };\r\n//           },\r\n//         });\r\n//       }\r\n//       return (\r\n//         <div>\r\n//           {data.chatting.map(x => (\r\n//             <h3 key={x.id}>\r\n//               {x.writer}: {x.description}\r\n//             </h3>\r\n//           ))}\r\n//         </div>\r\n//       );\r\n//     }}\r\n//   </Query>\r\n// );\r\n","import React, { useState } from 'react';\r\nimport StoryPresenter from './StoryPresenter';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { CREATE_MYCHAT, getChatting, newChat } from './StoryQuries';\r\nimport { READ_MYDATA } from '../../sharedQueries';\r\nimport Loader from 'Components/Loader';\r\n\r\nlet unsubscribe = null;\r\n\r\nexport default () => {\r\n  const [description, setDescription] = useState('');\r\n  const [mutation] = useMutation(CREATE_MYCHAT, {\r\n    variables: {\r\n      description,\r\n    },\r\n  });\r\n  const { data: myData, loading: myDataLoading } = useQuery(READ_MYDATA);\r\n  const { data: chatData, loading: chatLoading, subscribeToMore } = useQuery(\r\n    getChatting\r\n  );\r\n  const onKeyPress = async event => {\r\n    if (event.key === 'Enter') {\r\n      try {\r\n        await mutation();\r\n        setDescription('');\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!unsubscribe) {\r\n    unsubscribe = subscribeToMore({\r\n      document: newChat,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        console.log('prev : ', prev);\r\n        console.log(subscriptionData);\r\n        if (!subscriptionData.data) return prev;\r\n        const { newChat } = subscriptionData.data;\r\n        return {\r\n          ...prev,\r\n          chatting: [...prev.chatting, newChat],\r\n        };\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {(chatLoading || myDataLoading) && <Loader />}\r\n      {!(chatLoading || myDataLoading) && chatData && (\r\n        <StoryPresenter\r\n          mutation={mutation}\r\n          description={description}\r\n          setDescription={setDescription}\r\n          onKeyPress={onKeyPress}\r\n          chatData={chatData}\r\n          subscribeToMore={subscribeToMore}\r\n          myData={myData}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import StoryContainer from './StoryContainer';\r\nexport default StoryContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tab from '../Components/Tab';\r\nimport Life from 'Components/Life';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh 7vh 7vh 7vh 7vh 7vh 58vh;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: grid;\r\n  background: white;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  text-align-last: center;\r\n  padding-top: 1vh;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  padding-top: 1vh;\r\n  text-align-last: center;\r\n  color: white;\r\n  background: ${props => props.theme.activeColor};\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n  return (\r\n    <Wrapper>\r\n      <Tab />\r\n      <Title>기타</Title>\r\n      <Row\r\n        onClick={() => {\r\n          client.writeData({ data: { isLoggedIn: false } });\r\n          localStorage.clear();\r\n          history.push('/disorder/');\r\n        }}>\r\n        로그아웃\r\n      </Row>\r\n      <Row\r\n        onClick={() => {\r\n          history.push('/theme');\r\n        }}>\r\n        테마\r\n      </Row>\r\n      <Row>계정</Row>\r\n      <Row>정보</Row>\r\n      <Life />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tab from '../../Components/Tab';\r\nimport Timeline from '../../Components/Timeline';\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh 7vh;\r\n  background: white;\r\n`;\r\nconst Title = styled.div`\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  text-align-last: center;\r\n  padding-top: 1vh;\r\n  color: white;\r\n  background: ${props => props.theme.activeColor};\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TimelineWrapper = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  background: white;\r\n  padding: 10vw;\r\n  padding-top: 7vw;\r\n`;\r\n// const Timeline = styled.div`\r\n//   display: grid;\r\n//   grid-column: 100%;\r\n//   grid-auto-rows: 17vh;\r\n// `;\r\n// const TimelineTail = styled.div`\r\n//   position: absolute;\r\n//   height: calc(100% - 2vw);\r\n//   left: 2vw;\r\n//   top: 3vw;\r\n//   border-left: 2vw solid ${props => props.theme.lightGreyColor};\r\n// `;\r\n\r\n// const TimlineCircle = styled.div`\r\n//   position: absolute;\r\n//   width: 6vw;\r\n//   height: 6vw;\r\n//   background-color: ${props => props.theme.activeColor};\r\n//   border-radius: 100px;\r\n//   top: 0.5vw;\r\n// `;\r\n\r\n// const TimelineItem = styled.div`\r\n//   position: relative;\r\n// `;\r\n// const TimelineItemsWrapper = styled.div`\r\n//   display: grid;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   padding-left: 7vw;\r\n//   grid-template-areas:\r\n//     'type good good'\r\n//     'content content content'\r\n//     'content content content'\r\n//     'score score score'\r\n//     'score score score';\r\n// `;\r\n// const Type = styled.div`\r\n//   font-family: 'KakaoB';\r\n//   align-self: start;\r\n//   justify-self: start;\r\n//   font-size: 6vw;\r\n//   grid-area: type;\r\n//   padding-top: 0.5vw;\r\n// `;\r\n// const Content = styled.div`\r\n//   font-size: 5vw;\r\n//   padding-top: 1vw;\r\n//   grid-area: content;\r\n//   overflow-y: hidden;\r\n//   -webkit-line-clamp: 2;\r\n//   overflow: hidden;\r\n//   -o-text-overflow: ellipsis;\r\n//   text-overflow: ellipsis;\r\n// `;\r\n// const Good = styled.div`\r\n//   display: grid;\r\n//   align-self: start;\r\n//   justify-self: end;\r\n//   font-size: 4vw;\r\n//   border: 3px solid ${props => props.theme.activeColor};\r\n//   border-radius: 30px;\r\n//   padding: 1vw;\r\n//   grid-area: good;\r\n// `;\r\n// const Score = styled.div`\r\n//   display: grid;\r\n//   grid-area: score;\r\n// `;\r\n// const Empty = styled.div`\r\n//   display: grid;\r\n// `;\r\n\r\nexport default ({ myDiaries, onKeyPress }) => {\r\n  console.log('MePresenter');\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Tab />\r\n      <Title>오늘의 기록</Title>\r\n      <TimelineWrapper>\r\n        <Timeline diariesArr={myDiaries} onKeyPress={onKeyPress} />\r\n      </TimelineWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\n// <Timeline>\r\n//           {diariesArr ? (\r\n//             diariesArr.map(diary => (\r\n//               <TimelineItem key={diary.id}>\r\n//                 <TimelineTail />\r\n//                 <TimlineCircle />\r\n//                 <TimelineItemsWrapper>\r\n//                   <Type>{diary.question.type}</Type>\r\n//                   <Good>{diary.good ? '행동' : '생각'}</Good>\r\n//                   <Content>\r\n//                     {/* prettier-ignore */}\r\n//                     <pre>\r\n// {\r\n// `${diary.content}`\r\n// }\r\n//                   </pre>\r\n//                   </Content>\r\n//                   <Score>{`${diary.good ? '긍정적' : '부정적'}느낌 ${\r\n//                     diary.score\r\n//                   }`}</Score>\r\n//                 </TimelineItemsWrapper>\r\n//               </TimelineItem>\r\n//             ))\r\n//           ) : (\r\n//             <Empty />\r\n//           )}\r\n//         </Timeline>\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const READ_MYDIARY = gql`\r\n  query readMyDiary {\r\n    readMyDiary {\r\n      id\r\n      content\r\n      good\r\n      score\r\n      question {\r\n        id\r\n        type\r\n        behavior\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_MYDIARY = gql`\r\n  mutation updateMyDiary(\r\n    $id: String\r\n    $content: String\r\n    $good: Boolean\r\n    $score: Int\r\n  ) {\r\n    updateMyDiary(id: $id, content: $content, good: $good, score: $score)\r\n  }\r\n`;\r\n","import MeContainer from './MeConainer';\r\nexport default MeContainer;\r\n","import React from 'react';\r\nimport MePresenter from './MePresenter';\r\nimport { READ_MYDIARY, UPDATE_MYDIARY } from './MeQueries';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport Loader from 'Components/Loader';\r\n\r\nexport default () => {\r\n  const { data: myDiaryData, loading: myDiaryLoading } = useQuery(READ_MYDIARY);\r\n\r\n  const [updateMyDiary] = useMutation(UPDATE_MYDIARY, {\r\n    refetchQueries: () => [{ query: READ_MYDIARY }],\r\n  });\r\n\r\n  const onKeyPress = async (event, id, type, value) => {\r\n    if (event.key === 'Enter') {\r\n      await updateMyDiary({\r\n        variables: { id: id, [type]: value },\r\n      }).catch(e => console.log(e));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {myDiaryLoading && <Loader />}\r\n      {!myDiaryLoading && myDiaryData && (\r\n        <MePresenter\r\n          myDiaries={myDiaryData.readMyDiary}\r\n          onKeyPress={onKeyPress}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const FOLLOW = gql`\r\n  mutation follow($id: String!) {\r\n    follow(id: $id)\r\n  }\r\n`;\r\n\r\nexport const UNFOLLOW = gql`\r\n  mutation unfollow($id: String!) {\r\n    unfollow(id: $id)\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {AddUser} from '../Icons';\r\nconst AddUserWrapper = styled.div`\r\n  width: 100%;\r\n  height:100%;\r\n  border: 0;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  color: white;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  padding: 7px 0px;\r\n  font-size: 14px;\r\n`;\r\n\r\n\r\nexport default ({ isFollowing, onClick }) => (\r\n  <AddUserWrapper onClick={onClick}>\r\n    {isFollowing ? '' : <AddUser/>}\r\n  </AddUserWrapper>\r\n);\r\n","import FollowButtonContainer from './FollowButtonContainer';\r\nexport default FollowButtonContainer;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { FOLLOW, UNFOLLOW } from './FollowButtonQuries';\r\nimport FollowButtonPresenter from './FollowButtonPresenter';\r\n\r\nconst FollowButtonContainer = ({ isFollowing, id }) => {\r\n  const [isFollowingS, setIsFollowing] = useState(isFollowing);\r\n  const [followMutation] = useMutation(FOLLOW, { variables: { id } });\r\n  const [unfollowMutation] = useMutation(UNFOLLOW, { variables: { id } });\r\n\r\n  const onClick = () => {\r\n    if (isFollowingS === true) {\r\n      setIsFollowing(false);\r\n      unfollowMutation();\r\n    } else {\r\n      setIsFollowing(true);\r\n      followMutation();\r\n    }\r\n  };\r\n  return <FollowButtonPresenter onClick={onClick} isFollowing={isFollowingS} />;\r\n};\r\n\r\nFollowButtonContainer.propTypes = {\r\n  isFollowing: PropTypes.bool.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FollowButtonContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from './Avatar';\r\nimport FatText from './FatText';\r\nimport { Link } from 'react-router-dom';\r\nimport FollowButton from './FollowButton';\r\n\r\nconst Card = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 3fr 4fr;\r\n  align-items: center;\r\n  height: 12vh;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n`;\r\n\r\nconst LinkInCard = styled(Link)`\r\n  display: grid;\r\n  justify-self: start;\r\n  color: inherit;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst FollowWrapper = styled.div`\r\n  align-self: center;\r\n  justify-self: end;\r\n  padding-right: 2vw;\r\n`;\r\n\r\nconst UserCard = ({ id, userName, isFollowing, url, isSelf }) => (\r\n  <Card>\r\n    <Avatar avatar={url} />\r\n    <LinkInCard to={`/${userName}`}>\r\n      <FatText text={userName} />\r\n    </LinkInCard>\r\n    <FollowWrapper>\r\n      {!isSelf && <FollowButton id={id} isFollowing={isFollowing} />}\r\n    </FollowWrapper>\r\n  </Card>\r\n);\r\n\r\nUserCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  userName: PropTypes.string.isRequired,\r\n  isFollowing: PropTypes.bool.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  isSelf: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { HeartFull, CommentFull } from './Icons';\r\n\r\nconst Overlay = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0;\r\n  transition: opacity 0.3s linear;\r\n  svg {\r\n    fill: white;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  background-image: url(${props => props.bg});\r\n  background-size: cover;\r\n  cursor: pointer;\r\n  &:hover {\r\n    ${Overlay} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Number = styled.div`\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  &:first-child {\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nconst NumberText = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst SquarePost = ({ likeCount, commentCount, file }) => (\r\n  <Container bg={file.url}>\r\n    <Overlay>\r\n      <Number>\r\n        <HeartFull />\r\n        <NumberText>{likeCount}</NumberText>\r\n      </Number>\r\n      <Number>\r\n        <CommentFull />\r\n        <NumberText>{commentCount}</NumberText>\r\n      </Number>\r\n    </Overlay>\r\n  </Container>\r\n);\r\n\r\nSquarePost.propTypes = {\r\n  likeCount: PropTypes.number.isRequired,\r\n  commentCount: PropTypes.number.isRequired,\r\n  file: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SquarePost;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../Components/Loader';\r\nimport UserCard from '../../Components/UserCard';\r\nimport SquarePost from '../../Components/SquarePost';\r\nimport Input from '../../Components/Input';\r\nimport { BlackBackArrow } from '../../Components/Icons';\r\nimport useInput from '../../Hooks/useInput';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh 100vh;\r\n  background: ${props => props.theme.bgColor};\r\n`;\r\n\r\nconst SearchInputWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 9fr;\r\n  height: 100%;\r\n  justify-items: center;\r\n  align-items: center;\r\n  padding-right: 0.5rem;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\n\r\nconst BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\n\r\nconst SearchInput = styled(Input)`\r\n  display: grid;\r\n  background-color: ${props => props.theme.lightGreyColor};\r\n  color: ${props => props.theme.dimgreyColor};\r\n  padding: 7px;\r\n  padding-left: 0.7rem;\r\n  font-size: 18px;\r\n  border-radius: 16px;\r\n  height: auto;\r\n  width: 95%;\r\n  &::placeholder {\r\n    text-align: center;\r\n    padding-bottom: 5px;\r\n    opacity: 0.8;\r\n    font-weight: 200;\r\n    color: ${props => props.theme.dimgreyColor};\r\n  }\r\n`;\r\n\r\nconst ContentsWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\nconst UserSection = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 3vh repeat(1fr);\r\n`;\r\n\r\nconst PostSection = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 3vh repeat(1fr);\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  border-radius: 15px;\r\n  background-color: white;\r\n  width: 95%;\r\n  height: 95%;\r\n`;\r\nconst StartSection = styled.div`\r\n  display: grid;\r\n  border-bottom: 1px solid ${props => props.theme.INDEGO};\r\n  height: 7vh;\r\n  align-items: center;\r\n  font-family: 'NanumSR';\r\n  font-weight: 900;\r\n  padding-left: 4vw;\r\n`;\r\n\r\nconst EmptySection = styled.div`\r\n  display: grid;\r\n  height: 7vh;\r\n  align-items: center;\r\n  font-family: 'NanumSR';\r\n  font-weight: 900;\r\n  padding-left: 4vw;\r\n`;\r\nconst SearchPresenter = ({ searchTerm, loading, data }) => {\r\n  const history = useHistory();\r\n  const search = useInput('');\r\n  const onSearchSubmit = e => {\r\n    e.preventDefault();\r\n    history.push(`/search?term=${search.value}`);\r\n  };\r\n  if (searchTerm === undefined) {\r\n    return (\r\n      <Wrapper>\r\n        <form onSubmit={onSearchSubmit}>\r\n          <SearchInputWrapper>\r\n            <BackArrowWrapper onClick={() => history.goBack()}>\r\n              <BlackBackArrow />\r\n            </BackArrowWrapper>\r\n            <SearchInput\r\n              value={search.value}\r\n              onChange={search.onChange}\r\n              placeholder=\"검색하기\"\r\n            />\r\n          </SearchInputWrapper>\r\n        </form>\r\n      </Wrapper>\r\n    );\r\n  } else if (loading === true) {\r\n    return (\r\n      <Wrapper>\r\n        <Loader />\r\n      </Wrapper>\r\n    );\r\n  } else if (data && data.searchUser && data.searchPost) {\r\n    return (\r\n      <Wrapper>\r\n        <form onSubmit={onSearchSubmit}>\r\n          <SearchInputWrapper>\r\n            <BackArrowWrapper onClick={() => history.goBack()}>\r\n              <BlackBackArrow />\r\n            </BackArrowWrapper>\r\n            <SearchInput\r\n              value={search.value}\r\n              onChange={search.onChange}\r\n              placeholder=\"검색하기\"\r\n            />\r\n          </SearchInputWrapper>\r\n        </form>\r\n        <ContentsWrapper>\r\n          <WhiteBox>\r\n            <StartSection>사람</StartSection>\r\n            <UserSection>\r\n              {data.searchUser.length === 0 ? (\r\n                <EmptySection>찾는 단어가 포함된 유저가 없습니다.</EmptySection>\r\n              ) : (\r\n                data.searchUser.map(user => (\r\n                  <UserCard\r\n                    key={user.id}\r\n                    userName={user.userName}\r\n                    isFollowing={user.isFollowing}\r\n                    url={user.avatar}\r\n                    isSelf={user.isSelf}\r\n                    id={user.id}\r\n                  />\r\n                ))\r\n              )}\r\n            </UserSection>\r\n          </WhiteBox>\r\n          <WhiteBox>\r\n            <StartSection>포스트</StartSection>\r\n            <PostSection>\r\n              {data.searchPost.length === 0 ? (\r\n                <EmptySection>\r\n                  포스트의 제목이나 설명으로 시작하는 글이 없습니다.\r\n                </EmptySection>\r\n              ) : (\r\n                data.searchPost.map(post => (\r\n                  <SquarePost\r\n                    key={post.id}\r\n                    likeCount={post.likeCount}\r\n                    commentCount={post.commentCount}\r\n                    file={post.files[0]}\r\n                  />\r\n                ))\r\n              )}\r\n            </PostSection>\r\n          </WhiteBox>\r\n        </ContentsWrapper>\r\n      </Wrapper>\r\n    );\r\n  } else {\r\n    return <Wrapper />;\r\n  }\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const SEARCH = gql`\r\n  query search($term: String!) {\r\n    searchPost(term: $term) {\r\n      id\r\n      files {\r\n        url\r\n      }\r\n      likeCount\r\n      commentCount\r\n    }\r\n    searchUser(term: $term) {\r\n      id\r\n      avatar\r\n      userName\r\n      isFollowing\r\n      isSelf\r\n    }\r\n  }\r\n`;\r\n","import SearchContainer from './SearchContainer';\r\nexport default SearchContainer;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchPresenter from './SrearchPresenter';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { SEARCH } from './SrearchQueries';\r\n\r\nexport default withRouter(({ location: { search } }) => {\r\n  const term = search.split('=')[1];\r\n  const { data, loading } = useQuery(SEARCH, {\r\n    skip: term === undefined,\r\n    variables: {\r\n      term,\r\n    },\r\n  });\r\n  console.log(data);\r\n  return <SearchPresenter searchTerm={term} loading={loading} data={data} />;\r\n});\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.button`\n  width: 100%;\n  height: 100%;\n  border: 0;\n  border-radius: ${props => props.theme.borderRadius};\n  color: white;\n  font-weight: 600;\n  background-color: transparent;\n  border: 1.5px solid white;\n  text-align: center;\n  font-size: 1rem;\n`;\nconst Wrapper = styled.div`\n  width: 40vw;\n  height: 5vh;\n`;\nconst WhiteOutLineButton = ({ text, onClick }) => (\n  <Wrapper>\n    <Container onClick={onClick}>{text}</Container>\n  </Wrapper>\n);\n\nWhiteOutLineButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default WhiteOutLineButton;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Progress = styled.div`\r\n  display: grid;\r\n  grid-auto-rows: 5vh;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-gap: 0.1vw;\r\n  grid-auto-flow: column;\r\n`;\r\nconst Item = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  color: white;\r\n  background: ${props => props.theme.dimgreyColor};\r\n  border: 1px solid white;\r\n`;\r\nconst Text = styled.div`\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\n\r\nexport default ({ background, diary, setDiary }) => {\r\n  let scoreArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n  return (\r\n    <Progress>\r\n      {scoreArray.map(element => (\r\n        <Item\r\n          key={element}\r\n          style={\r\n            diary.score === undefined\r\n              ? { background: '#626367' }\r\n              : element <= diary.score\r\n              ? { background: background }\r\n              : { background: '#626367' }\r\n          }\r\n          onClick={() => setDiary(diary => ({ ...diary, score: element }))}>\r\n          <Text>{element}</Text>\r\n        </Item>\r\n      ))}\r\n    </Progress>\r\n  );\r\n};\r\n\r\n// import React, { useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import { DiaryContext, DiaryAction } from 'Routes/Diary/DiaryContext';\r\n\r\n// const Progress = styled.div`\r\n//   display: grid;\r\n//   grid-auto-rows: 5vh;\r\n//   grid-template-columns: repeat(10, 1fr);\r\n//   grid-gap: 0.1vw;\r\n//   grid-auto-flow: column;\r\n// `;\r\n// const Item = styled.div`\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   display: grid;\r\n//   color: white;\r\n//   background: #626367;\r\n//   border: 1px solid white;\r\n// `;\r\n// const Text = styled.div`\r\n//   align-self: center;\r\n//   justify-self: center;\r\n// `;\r\n\r\n// export default ({ background }) => {\r\n//   const { state, dispatch } = useContext(DiaryContext);\r\n//   let scoreArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n//   return (\r\n//     <Progress>\r\n//       {scoreArray.map(element => (\r\n//         <Item\r\n//           key={element}\r\n//           style={\r\n//             state.diary.score === undefined\r\n//               ? { background: '#626367' }\r\n//               : element <= state.diary.score\r\n//               ? { background: background }\r\n//               : { background: '#626367' }\r\n//           }\r\n//           onClick={() =>\r\n//             dispatch({\r\n//               type: DiaryAction.SET_MANY,\r\n//               diary: { ...state.diary, score: element },\r\n//             })\r\n//           }>\r\n//           <Text>{element}</Text>\r\n//         </Item>\r\n//       ))}\r\n//     </Progress>\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TextareaAutosize from 'react-autosize-textarea/lib';\r\nimport WhiteOutLineButton from './WhiteOutLineButton';\r\nimport BlackOutLineButton from './BlackOutLineButton';\r\nimport { BlackBackArrow, BlackRestart } from '../Components/Icons';\r\nimport Progress from './Progress';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Survey = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 8vh 8vh 10vh 30vh 8vh 10vh 19vh;\r\n`;\r\n\r\nconst Question = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => props.theme.activeColor};\r\n  color: white;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => props.theme.dimgreyColor};\r\n  color: white;\r\n  padding: 3vw;\r\n`;\r\n\r\nconst Answer = styled(TextareaAutosize)`\r\n  border: 1px solid #e9ecef;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  resize: none;\r\n  font-size: 1rem;\r\n  padding-top: 2vh;\r\n  &:focus {\r\n    outline: none;\r\n    ::-webkit-input-placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n  ::placeholder {\r\n    padding-top: 2rem;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst OutLineButtonWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n`;\r\nconst Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n`;\r\nconst TinyText = styled.div`\r\n  display: grid;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 0.2rem;\r\n  font-weight: 500;\r\n`;\r\nconst SurveyHandlerWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 4fr 3fr;\r\n  height: 100%;\r\n  justify-items: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  background: ${props => props.theme.whiteColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\n\r\nconst RestartWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nconst Counter = styled.div`\r\n  display: grid;\r\n  background-color: ${props => props.theme.activeColor};\r\n  color: ${props => props.theme.whiteColor};\r\n  padding: 7px;\r\n  font-size: 18px;\r\n  border-radius: 16px;\r\n  height: auto;\r\n  width: 95%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Evaluation = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  justify-items: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => props.theme.dimgreyColor};\r\n  color: white;\r\n`;\r\n\r\nexport default ({\r\n  myQuestion,\r\n  setAction,\r\n  setSurveyCount,\r\n  surveyCount,\r\n  createDiary,\r\n  diary,\r\n  setDiary,\r\n  isPushQuestion,\r\n  singleQuestion,\r\n}) => {\r\n  let history = useHistory();\r\n  console.log('Survey');\r\n  console.log(singleQuestion);\r\n  const totalSurvey = isPushQuestion ? 0 : myQuestion.length;\r\n  const currentSurveyCount = isPushQuestion ? 0 : surveyCount;\r\n  const currentQuestion = isPushQuestion\r\n    ? singleQuestion\r\n    : myQuestion[surveyCount];\r\n  console.log('myQuestion : ', myQuestion);\r\n  console.log('currentQuestion : ', currentQuestion);\r\n  const onchangeDiaryContent = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setDiary(() => ({ ...diary, content: value }));\r\n    setDiary(diary => ({ ...diary, questionId: currentQuestion.id }));\r\n  };\r\n  return (\r\n    <Survey>\r\n      <SurveyHandlerWrapper>\r\n        <BackArrowWrapper\r\n          onClick={() => {\r\n            if (isPushQuestion) {\r\n              history.push('/alarm');\r\n              return;\r\n            }\r\n            setDiary(diary => (diary.good = undefined));\r\n            setSurveyCount(surveyCount === 0 ? 0 : surveyCount - 1);\r\n            setAction(surveyCount === 0 ? 'Description' : 'Survey');\r\n          }}>\r\n          <BlackBackArrow />\r\n          <Text>이전으로</Text>\r\n        </BackArrowWrapper>\r\n        <Counter>\r\n          {`치료적일기 ${\r\n            isPushQuestion ? '' : `${currentSurveyCount + 1}/${totalSurvey}`\r\n          }`}\r\n        </Counter>\r\n        <RestartWrapper\r\n          onClick={() => {\r\n            setSurveyCount(0);\r\n            setAction('Survey');\r\n          }}>\r\n          <BlackRestart />\r\n          <Text>처음으로</Text>\r\n        </RestartWrapper>\r\n      </SurveyHandlerWrapper>\r\n      <Question>\r\n        <Text>{currentQuestion.question}</Text>\r\n      </Question>\r\n      <Description>\r\n        <Text>{currentQuestion.description}</Text>\r\n      </Description>\r\n\r\n      <Answer\r\n        placeholder={'작성하기'}\r\n        value={diary.content}\r\n        onChange={onchangeDiaryContent}\r\n      />\r\n\r\n      {diary.good === undefined ? (\r\n        <>\r\n          <Question>\r\n            <Text>당신은 지금, 이 일기를 쓰면서 어떤 감정이 들었나요?</Text>\r\n          </Question>\r\n          <Evaluation>\r\n            <WhiteOutLineButton\r\n              text={'불편한 감정'}\r\n              onClick={() =>\r\n                setDiary(diary => ({ ...diary, good: false }))\r\n              }></WhiteOutLineButton>\r\n            <WhiteOutLineButton\r\n              text={'좋은 감정'}\r\n              onClick={() =>\r\n                setDiary(diary => ({ ...diary, good: true }))\r\n              }></WhiteOutLineButton>\r\n          </Evaluation>\r\n        </>\r\n      ) : diary.good === true ? (\r\n        <>\r\n          <Question>\r\n            <Text>얼마나 좋은 감정이 들었나요?</Text>\r\n            <TinyText>\r\n              (지금 이 순간 느끼는 만큼, 점수를 선택해주세요.)\r\n            </TinyText>\r\n          </Question>\r\n          <Progress background={'#00695c'} diary={diary} setDiary={setDiary} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Question>\r\n            <Text>얼마나 불편한 감정이 들었나요?</Text>\r\n            <TinyText>\r\n              (지금 이 순간 느끼는 만큼, 점수를 선택해주세요.)\r\n            </TinyText>\r\n          </Question>\r\n          <Progress background={'#FF5722'} diary={diary} setDiary={setDiary} />\r\n        </>\r\n      )}\r\n\r\n      <OutLineButtonWrapper>\r\n        <BlackOutLineButton\r\n          text={isPushQuestion ? '기록하기' : '계속하기'}\r\n          onClick={createDiary}\r\n        />\r\n      </OutLineButtonWrapper>\r\n    </Survey>\r\n  );\r\n};\r\n\r\n// import React, { useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import TextareaAutosize from 'react-autosize-textarea/lib';\r\n// import OutLineButton from './OutLineButton';\r\n// import { BackArrow, Restart } from '../Components/Icons';\r\n// import Progress from './Progress';\r\n// import { DiaryContext, DiaryAction } from 'Routes/Diary/DiaryContext';\r\n// const Survey = styled.div`\r\n//   display: grid;\r\n//   grid-template-rows: 8vh 8vh 10vh 30vh 8vh 10vh 10vh;\r\n// `;\r\n\r\n// const Question = styled.div`\r\n//   display: grid;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background: ${props => props.theme.activeColor};\r\n//   color: white;\r\n// `;\r\n\r\n// const Description = styled.div`\r\n//   display: grid;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background: ${props => props.theme.dimgreyColor};\r\n//   color: white;\r\n// `;\r\n\r\n// const Answer = styled(TextareaAutosize)`\r\n//   border: 1px solid #e9ecef;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   text-align: center;\r\n//   resize: none;\r\n//   font-size: 1rem;\r\n//   padding-top: 2vh;\r\n//   &:focus {\r\n//     outline: none;\r\n//     ::-webkit-input-placeholder {\r\n//       opacity: 0;\r\n//     }\r\n//   }\r\n//   ::placeholder {\r\n//     padding-top: 2rem;\r\n//     font-size: 1rem;\r\n//   }\r\n// `;\r\n\r\n// const OutLineButtonWrapper = styled.div`\r\n//   display: grid;\r\n//   align-self: center;\r\n//   justify-self: center;\r\n//   width: 40vw;\r\n//   background: '#626367';\r\n// `;\r\n// const Text = styled.div`\r\n//   display: grid;\r\n//   align-self: center;\r\n//   justify-self: center;\r\n//   font-size: 1rem;\r\n// `;\r\n// const TinyText = styled.div`\r\n//   display: grid;\r\n//   align-self: start;\r\n//   justify-self: center;\r\n//   font-size: 0.2rem;\r\n//   font-weight: 500;\r\n// `;\r\n// const SurveyHandlerWrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 3fr 4fr 3fr;\r\n//   height: 100%;\r\n//   justify-items: center;\r\n//   align-items: center;\r\n//   border-bottom: 1px solid ${props => props.theme.borderColor};\r\n//   background: ${props => props.theme.whiteColor};\r\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n// `;\r\n\r\n// const BackArrowWrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 1fr 2fr;\r\n//   justify-self: center;\r\n//   align-self: center;\r\n// `;\r\n\r\n// const RestartWrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 1fr 2fr;\r\n//   justify-self: center;\r\n//   align-self: center;\r\n// `;\r\n// const Counter = styled.div`\r\n//   display: grid;\r\n//   background-color: ${props => props.theme.activeColor};\r\n//   color: ${props => props.theme.whiteColor};\r\n//   padding: 7px;\r\n//   font-size: 18px;\r\n//   border-radius: 16px;\r\n//   height: auto;\r\n//   width: 95%;\r\n//   text-align: center;\r\n// `;\r\n\r\n// const Evaluation = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 1fr 1fr;\r\n//   justify-items: center;\r\n//   align-items: center;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background: ${props => props.theme.dimgreyColor};\r\n//   color: white;\r\n// `;\r\n\r\n// export default () =>\r\n//   //   {\r\n//   //   myQuestion,\r\n//   //   setAction,\r\n//   //   setSurveyCount,\r\n//   //   surveyCount,\r\n//   //   createDiary,\r\n//   //   onKeyPress,\r\n//   //   diary,\r\n//   //   setDiary,\r\n//   // }\r\n//   {\r\n//     console.log('Survey');\r\n//     const { state, dispatch } = useContext(DiaryContext);\r\n\r\n//     const totalSurvey = state.myQuestion.length;\r\n//     const currentSurveyCount = state.surveyCount;\r\n//     const currentQuestion = state.myQuestion[state.surveyCount];\r\n//     console.log('diary.content : ', state.diary.content);\r\n//     const onchangeDiaryContent = async e => {\r\n//       const {\r\n//         target: { value },\r\n//       } = e;\r\n//       console.log('value : ', value);\r\n//       await dispatch({\r\n//         type: DiaryAction.SET_MANY,\r\n//         diary: { ...state.diary, content: value },\r\n//       });\r\n//       dispatch({\r\n//         type: DiaryAction.SET_MANY,\r\n//         diary: { ...state.diary, questionId: currentQuestion.id },\r\n//       });\r\n//       // setDiary(() => ({ ...diary, content: value }));\r\n//       // setDiary(diary => ({ ...diary, questionId: currentQuestion.id }));\r\n//     };\r\n//     const onKeyPress = async event => {\r\n//       if (event.key === 'Enter') {\r\n//         try {\r\n//           state.handleDiary();\r\n//         } catch (e) {\r\n//           console.log(e);\r\n//         }\r\n//       }\r\n//     };\r\n//     return (\r\n//       <Survey>\r\n//         <SurveyHandlerWrapper>\r\n//           <BackArrowWrapper\r\n//             onClick={() => {\r\n//               dispatch({\r\n//                 type: DiaryAction.SET_MANY,\r\n//                 diary: { ...state.diary, good: undefined },\r\n//                 surveyCount:\r\n//                   state.surveyCount === 0 ? 0 : state.surveyCount - 1,\r\n//                 action: state.surveyCount === 0 ? 'Description' : 'Survey',\r\n//               });\r\n//             }}>\r\n//             <BackArrow />\r\n//             <Text>이전으로</Text>\r\n//           </BackArrowWrapper>\r\n//           <Counter>\r\n//             {`치료적일기 ${currentSurveyCount + 1}/${totalSurvey}`}\r\n//           </Counter>\r\n//           <RestartWrapper\r\n//             onClick={() => {\r\n//               dispatch({\r\n//                 type: DiaryAction.SET_ACTION,\r\n//                 surveyCount: 0,\r\n//                 action: 'Survey',\r\n//               });\r\n//               // setSurveyCount(0);\r\n//               // setAction('Survey');\r\n//             }}>\r\n//             <Restart />\r\n//             <Text>처음으로</Text>\r\n//           </RestartWrapper>\r\n//         </SurveyHandlerWrapper>\r\n//         <Question>\r\n//           <Text>{currentQuestion.question}</Text>\r\n//         </Question>\r\n//         <Description>\r\n//           <Text>{currentQuestion.description}</Text>\r\n//         </Description>\r\n\r\n//         <Answer\r\n//           onKeyPress={onKeyPress}\r\n//           placeholder={'작성하기'}\r\n//           value={state.diary.content}\r\n//           onChange={onchangeDiaryContent}\r\n//         />\r\n\r\n//         {state.diary.good === undefined ? (\r\n//           <>\r\n//             <Question>\r\n//               <Text>당신은 지금, 이 일기를 쓰면서 어떤 감정이 들었나요?</Text>\r\n//             </Question>\r\n//             <Evaluation>\r\n//               <OutLineButton\r\n//                 text={'불편한 감정'}\r\n//                 onClick={() =>\r\n//                   dispatch({\r\n//                     type: DiaryAction.SET_MANY,\r\n//                     diary: { ...state.diary, good: false },\r\n//                   })\r\n//                 }></OutLineButton>\r\n//               <OutLineButton\r\n//                 text={'좋은 감정'}\r\n//                 onClick={() =>\r\n//                   dispatch({\r\n//                     type: DiaryAction.SET_MANY,\r\n//                     diary: { ...state.diary, good: true },\r\n//                   })\r\n//                 }></OutLineButton>\r\n//             </Evaluation>\r\n//           </>\r\n//         ) : state.diary.good === true ? (\r\n//           <>\r\n//             <Question>\r\n//               <Text>얼마나 좋은 감정이 들었나요?</Text>\r\n//               <TinyText>\r\n//                 (지금 이 순간 느끼는 만큼, 점수를 선택해주세요.)\r\n//               </TinyText>\r\n//             </Question>\r\n//             <Progress background={'#00695c'} />\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             <Question>\r\n//               <Text>얼마나 불편한 감정이 들었나요?</Text>\r\n//               <TinyText>\r\n//                 (지금 이 순간 느끼는 만큼, 점수를 선택해주세요.)\r\n//               </TinyText>\r\n//             </Question>\r\n//             <Progress background={'#FF5722'} />\r\n//           </>\r\n//         )}\r\n\r\n//         <OutLineButtonWrapper>\r\n//           <OutLineButton text={'계속하기'} onClick={state.handleDiary} />\r\n//         </OutLineButtonWrapper>\r\n//       </Survey>\r\n//     );\r\n//   };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BlackOutLineButton from './BlackOutLineButton';\r\nimport mainImage from '../assets/image/1.jpg';\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 8vh 40vh 20vh 25vh;\r\n  align-items: center;\r\n  background: white;\r\n  justify-items: center;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  display: grid;\r\n  text-align: center;\r\n`;\r\n\r\nconst OutLineButtonWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background: white;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-family: 'KakaoB';\r\n  font-size: 25px;\r\n`;\r\n\r\nconst MainImageWraper = styled.div`\r\n  height: 100%;\r\n  width: 100vw;\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst MainImage = styled.img`\r\n  background: #dee2e6;\r\n  -o-object-fit: cover;\r\n  object-fit: cover;\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nexport default ({ setAction }) => {\r\n  console.log('SurveyDescription');\r\n  return (\r\n    <Wrapper>\r\n      <Title>치료적 일기</Title>\r\n      <MainImageWraper>\r\n        <MainImage src={mainImage} />\r\n      </MainImageWraper>\r\n      <TextWrapper>\r\n        {/* prettier-ignore */}\r\n        <pre>\r\n{`\r\n이 앱은 당신이 고통과의 싸움에서 \r\n승리하도록 도우려는것은 아닙니다.\r\n\r\n마음속에서 맹렬히 벌어지는 \r\n전투에서 떠나도록 도울것이며,\r\n\r\n당신이 진정으로 원하는 삶을 시작하도록 도울것입니다.\r\n`}\r\n      </pre>\r\n      </TextWrapper>\r\n      <OutLineButtonWrapper>\r\n        <BlackOutLineButton\r\n          style={{ width: '10vw' }}\r\n          text=\"시작하기\"\r\n          onClick={() => setAction('SelectQuestion')}\r\n        />\r\n      </OutLineButtonWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\n// import React, { useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import OutLineButton from './OutLineButton';\r\n// import mainImage from '../assets/image/3.jpeg';\r\n// import Life from './Life';\r\n// import { DiaryContext, DiaryAction } from 'Routes/Diary/DiaryContext';\r\n// const Wrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-rows: 8vh 25vh 25vh 12vh 23vh;\r\n//   background: white;\r\n//   align-items: center;\r\n//   justify-items: center;\r\n// `;\r\n\r\n// const TextWrapper = styled.div`\r\n//   display: grid;\r\n//   text-align: center;\r\n// `;\r\n\r\n// const OutLineButtonWrapper = styled.div`\r\n//   display: grid;\r\n//   align-items: center;\r\n//   justify-items: center;\r\n//   background: #aeb4bb;\r\n//   width: 100%;\r\n//   height: 100%;\r\n// `;\r\n\r\n// const Title = styled.div`\r\n//   font-family: 'KakaoB';\r\n//   font-size: 25px;\r\n// `;\r\n\r\n// const MainImageWraper = styled.div`\r\n//   width: 80vw;\r\n//   height: 100%;\r\n//   display: grid;\r\n//   justify-items: center;\r\n//   align-items: center;\r\n//   max-width: 500px;\r\n// `;\r\n\r\n// const MainImage = styled.img`\r\n//   background: #dee2e6;\r\n//   -o-object-fit: cover;\r\n//   object-fit: cover;\r\n//   display: block;\r\n//   width: auto;\r\n//   height: 100%;\r\n// `;\r\n\r\n// export default () => {\r\n//   console.log('SurveyDescription');\r\n//   const { dispatch } = useContext(DiaryContext);\r\n\r\n//   return (\r\n//     <Wrapper>\r\n//       <Title>치료적 일기</Title>\r\n//       <MainImageWraper>\r\n//         <MainImage src={mainImage} />\r\n//       </MainImageWraper>\r\n//       <TextWrapper>\r\n//         {/* prettier-ignore */}\r\n//         <pre>\r\n// {`\r\n// 인간의 괴로움은 보편적이고\r\n\r\n// 마음의 평화를 만들어내는 법을\r\n// 아는 사람은 드뭅니다.\r\n\r\n// 왜 그런지는 수수께끼이며 이 앱은\r\n// 그 수수께끼에 대한것입니다.\r\n\r\n// `}\r\n//       </pre>\r\n//       </TextWrapper>\r\n//       <OutLineButtonWrapper>\r\n//         <OutLineButton\r\n//           style={{ width: '10vw' }}\r\n//           text=\"시작하기\"\r\n//           onClick={() =>\r\n//             dispatch({ type: DiaryAction.SET_ACTION, action: 'SelectQuestion' })\r\n//           }\r\n//         />\r\n//       </OutLineButtonWrapper>\r\n//       <Life />\r\n//     </Wrapper>\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport default ({ children, className }) => (\r\n  <Text className={className}>{children}</Text>\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BlackOutLineButton from './BlackOutLineButton';\r\nimport { toast } from 'react-toastify';\r\nimport Text from '../Components/Text';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SelectQuestionWrapper = styled.div`\r\n  display: grid;\r\n  background: ${props => props.theme.whiteColor};\r\n  height: 93vh;\r\n`;\r\n\r\nconst ContentsWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  grid-template-rows: 50vh 21.5vh 21.5vh 7vh;\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\n\r\nconst SelectSection = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  grid-template-columns: repeat(auto-fit, minmax(10vw, 1fr));\r\n`;\r\nconst ElementBox = styled.div`\r\n  display: grid;\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  height: 7vh;\r\n  margin: 0.5vh;\r\n`;\r\nconst ElementBoxText = styled(Text)`\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  border-radius: 15px 15px 0px 0px;\r\n  background-color: white;\r\n  width: 95%;\r\n  height: 95%;\r\n`;\r\nconst StartSection = styled.div`\r\n  display: grid;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  height: 6vh;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  font-size: 1.1rem;\r\n  padding-left: 4vw;\r\n`;\r\nconst StartSectionDescription = styled.div`\r\n  display: grid;\r\n  padding: 0.2rem;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  font-family: 'KakaoL';\r\n  font-weight: 600;\r\n  padding-left: 4vw;\r\n  font-size: 0.8rem;\r\n  line-height: 1rem;\r\n  > pre {\r\n    display: grid;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\n// const EndSection = styled.div`\r\n//   display: grid;\r\n//   border-top: 1px solid ${props => props.theme.borderColor};\r\n//   height: 6vh;\r\n//   align-items: center;\r\n//   text-align: center;\r\n//   padding-bottom: 1vh;\r\n//   font-family: 'KakaoL';\r\n//   font-size: 1.1rem;\r\n// `;\r\n\r\nconst ToModelDescription = styled(Link)`\r\n  color: ${props => props.theme.activeColor};\r\n`;\r\n\r\nconst OutLineButtonWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n`;\r\nexport default ({ allQuestion, updateQuestion, setAction, myQuestion }) => {\r\n  console.log('SelectQuestions');\r\n  return (\r\n    <SelectQuestionWrapper>\r\n      <ContentsWrapper>\r\n        <WhiteBox>\r\n          <StartSection>치료적일기의 목적</StartSection>\r\n          <StartSectionDescription style={{ border: 0 }}>\r\n            <pre>\r\n              {/* eslint-disable-line */}\r\n              {`객관적인 사건을 기술하거나 \r\n자신의 생각이나 감정을 관찰하는것은\r\n스스로 자신의 상태를 알아가는데 유용합니다.\r\n\r\n또한 치료적 일기를 작성하는것을통해\r\n1.내적으로 사용하는 잘못된 자기통제전략\r\n2.불편한 생각이나 감정에 대한 올바른 이해\r\n3.사적 경험이 일어날 때 \r\n그것과 싸우며 불편한 감정을 느끼는 상황\r\n\r\n이 앱은 당신의 일기에서\r\n위 세가지를 분석하고 당신과 상호작용하며 \r\n심리치료의 과정을 한계단씩 밟아 갈 것입니다.\r\n\r\n이 앱이 무엇을 기준으로 분석하는지 궁금하다면 \r\n`}\r\n            </pre>\r\n            <ToModelDescription to={'/description'}>\r\n              여기를 확인해주세요.\r\n            </ToModelDescription>\r\n          </StartSectionDescription>\r\n        </WhiteBox>\r\n        <WhiteBox>\r\n          <StartSection>행동</StartSection>\r\n          <StartSectionDescription>\r\n            <pre>\r\n              {`어떻게 행동하고 있는지를 객관적으로 확인하는것을 통해 \r\n자신의 현재상황을 확인하는데 도움을 줄 수 있어요\r\n`}\r\n            </pre>\r\n          </StartSectionDescription>\r\n          <SelectSection>\r\n            {allQuestion\r\n              .filter(data => data.behavior)\r\n              .map(behavior => {\r\n                return (\r\n                  <ElementBox\r\n                    style={\r\n                      myQuestion.filter(element => element.id === behavior.id)\r\n                        .length\r\n                        ? { background: '#626367', color: 'white' }\r\n                        : { background: 'white', color: '#4b4c4f' }\r\n                    }\r\n                    key={behavior.id}\r\n                    onClick={event => updateQuestion(behavior.type, event)}>\r\n                    <ElementBoxText>{behavior.type}</ElementBoxText>\r\n                  </ElementBox>\r\n                );\r\n              })}\r\n          </SelectSection>\r\n          {/* <EndSection>더보기</EndSection> */}\r\n        </WhiteBox>\r\n        <WhiteBox>\r\n          <StartSection>생각이나 감정 그리고 느낌</StartSection>\r\n          <StartSectionDescription>\r\n            <pre>\r\n              {`자신의 반복되는 심리적 패턴을 확인하는것을 통해 \r\n정서적 건강에 도움을 줄 수 있어요\r\n`}\r\n            </pre>\r\n          </StartSectionDescription>\r\n          <SelectSection>\r\n            {allQuestion\r\n              .filter(data => !data.behavior)\r\n              .map(emotion => (\r\n                <ElementBox\r\n                  style={\r\n                    myQuestion.filter(element => element.id === emotion.id)\r\n                      .length\r\n                      ? { background: '#626367', color: 'white' }\r\n                      : { background: 'white', color: '#4b4c4f' }\r\n                  }\r\n                  key={emotion.id}\r\n                  onClick={event => updateQuestion(emotion.type, event)}>\r\n                  <ElementBoxText>{emotion.type}</ElementBoxText>\r\n                </ElementBox>\r\n              ))}\r\n          </SelectSection>\r\n          {/* <EndSection>더보기</EndSection> */}\r\n        </WhiteBox>\r\n\r\n        <OutLineButtonWrapper>\r\n          <BlackOutLineButton\r\n            text={'계속하기'}\r\n            onClick={() =>\r\n              setAction(() => {\r\n                if (myQuestion.length !== 0) {\r\n                  return 'Survey';\r\n                } else {\r\n                  toast.info('항목을 하나 이상 선택 해주세요.');\r\n                  return 'SelectQuestion';\r\n                }\r\n              })\r\n            }\r\n          />\r\n        </OutLineButtonWrapper>\r\n      </ContentsWrapper>\r\n    </SelectQuestionWrapper>\r\n  );\r\n};\r\n\r\n// import React from 'react';\r\n// import styled from 'styled-components';\r\n// import OutLineButton from './OutLineButton';\r\n// import { toast } from 'react-toastify';\r\n// import Text from '../Components/Text';\r\n// import { useContext } from 'react';\r\n// import { DiaryAction, DiaryContext } from 'Routes/Diary/DiaryContext';\r\n\r\n// const SelectQuestionWrapper = styled.div`\r\n//   display: grid;\r\n//   background: ${props => props.theme.whiteColor};\r\n//   height: 93vh;\r\n// `;\r\n\r\n// const ContentsWrapper = styled.div`\r\n//   display: grid;\r\n//   align-items: center;\r\n//   justify-items: center;\r\n//   grid-template-rows: 30vh 30vh 20vh 10vh;\r\n//   background: ${props => props.theme.whiteColor};\r\n// `;\r\n\r\n// const SelectSection = styled.div`\r\n//   display: grid;\r\n//   width: 100%;\r\n//   grid-template-columns: repeat(auto-fit, minmax(10vw, 1fr));\r\n// `;\r\n// const ElementBox = styled.div`\r\n//   display: grid;\r\n//   border: 1px solid ${props => props.theme.borderColor};\r\n//   height: 7vh;\r\n//   margin: 0.5vh;\r\n// `;\r\n// const ElementBoxText = styled(Text)`\r\n//   font-size: 0.8rem;\r\n// `;\r\n\r\n// const WhiteBox = styled.div`\r\n//   border: 1px solid ${props => props.theme.borderColor};\r\n//   border-radius: 15px;\r\n//   background-color: white;\r\n//   width: 95%;\r\n//   height: 95%;\r\n// `;\r\n// const StartSection = styled.div`\r\n//   display: grid;\r\n//   border-bottom: 1px solid ${props => props.theme.borderColor};\r\n//   height: 6vh;\r\n//   align-items: center;\r\n//   font-family: 'KakaoB';\r\n//   font-size: 1.1rem;\r\n//   padding-left: 4vw;\r\n// `;\r\n// const StartSectionDescription = styled.div`\r\n//   display: grid;\r\n//   height: 9vh;\r\n//   border-bottom: 1px solid ${props => props.theme.borderColor};\r\n//   font-family: 'KakaoL';\r\n//   font-weight: 600;\r\n//   padding-left: 4vw;\r\n//   font-size: 0.9rem;\r\n//   line-height: 1rem;\r\n//   > pre {\r\n//     display: grid;\r\n//     align-self: center;\r\n//   }\r\n// `;\r\n\r\n// const EndSection = styled.div`\r\n//   display: grid;\r\n//   border-top: 1px solid ${props => props.theme.borderColor};\r\n//   height: 6vh;\r\n//   align-items: center;\r\n//   text-align: center;\r\n//   padding-bottom: 1vh;\r\n//   font-family: 'KakaoL';\r\n//   font-size: 1.1rem;\r\n// `;\r\n\r\n// const OutLineButtonWrapper = styled.div`\r\n//   display: grid;\r\n//   align-items: center;\r\n//   justify-items: center;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background: #aeb4bb;\r\n// `;\r\n// export default () => {\r\n//   console.log('SelectQuestions');\r\n//   const { state, dispatch } = useContext(DiaryContext);\r\n//   console.log('state : ', state);\r\n//   return (\r\n//     <SelectQuestionWrapper>\r\n//       <ContentsWrapper>\r\n//         <WhiteBox>\r\n//           <StartSection>행동</StartSection>\r\n//           <StartSectionDescription>\r\n//             <pre>\r\n//               {`어떻게 행동하고 있는지를 객관적으로 확인하는것을 통해\r\n// 자신의 현재상황을 확인하는데 도움을 줄 수 있어요^-^//\r\n// `}\r\n//             </pre>\r\n//           </StartSectionDescription>\r\n//           <SelectSection>\r\n//             {state.allQuestion\r\n//               .filter(data => data.behavior)\r\n//               .map(behavior => {\r\n//                 return (\r\n//                   <ElementBox\r\n//                     style={\r\n//                       state.myQuestion.filter(\r\n//                         element => element.id === behavior.id\r\n//                       ).length\r\n//                         ? { background: '#626367', color: 'white' }\r\n//                         : { background: 'white', color: '#4b4c4f' }\r\n//                     }\r\n//                     key={behavior.id}\r\n//                     onClick={async event => {\r\n//                       event.preventDefault();\r\n//                       await state.updateMyQuestion({\r\n//                         variables: { question: behavior.type },\r\n//                       });\r\n//                       await state.refetchMyQuestion();\r\n//                     }}>\r\n//                     <ElementBoxText>{behavior.type}</ElementBoxText>\r\n//                   </ElementBox>\r\n//                 );\r\n//               })}\r\n//           </SelectSection>\r\n//           <EndSection>더보기</EndSection>\r\n//         </WhiteBox>\r\n//         <WhiteBox>\r\n//           <StartSection>생각이나 감정 그리고 느낌</StartSection>\r\n//           <StartSectionDescription>\r\n//             <pre>\r\n//               {`자신의 반복되는 심리적 패턴을 확인하는것을 통해\r\n// 정서적 건강에 도움을 줄 수 있어요^-^//\r\n// `}\r\n//             </pre>\r\n//           </StartSectionDescription>\r\n//           <SelectSection>\r\n//             {state.allQuestion\r\n//               .filter(data => !data.behavior)\r\n//               .map(emotion => (\r\n//                 <ElementBox\r\n//                   style={\r\n//                     state.myQuestion.filter(\r\n//                       element => element.id === emotion.id\r\n//                     ).length\r\n//                       ? { background: '#626367', color: 'white' }\r\n//                       : { background: 'white', color: '#4b4c4f' }\r\n//                   }\r\n//                   key={emotion.id}\r\n//                   onClick={event => state.handleQuestion(emotion.type, event)}>\r\n//                   <ElementBoxText>{emotion.type}</ElementBoxText>\r\n//                 </ElementBox>\r\n//               ))}\r\n//           </SelectSection>\r\n//           <EndSection>더보기</EndSection>\r\n//         </WhiteBox>\r\n//         <WhiteBox>\r\n//           <StartSection>주의할점</StartSection>\r\n//           <StartSectionDescription style={{ border: 0 }}>\r\n//             <pre>\r\n//               {`모두 진행하는것도 좋지만\r\n// 자신의 상황에 맞도록\r\n// 여유롭게 선택하는것이 중요해요\r\n// `}\r\n//             </pre>\r\n//           </StartSectionDescription>\r\n//         </WhiteBox>\r\n//         <OutLineButtonWrapper>\r\n//           <OutLineButton\r\n//             text={'계속하기'}\r\n//             onClick={() =>\r\n//               dispatch({\r\n//                 type: DiaryAction.SET_ACTION,\r\n//                 action:\r\n//                   state.myQuestion.length !== 0\r\n//                     ? 'Survey'\r\n//                     : () => {\r\n//                         toast.info('항목을 하나 이상 선택 해주세요.');\r\n//                         return 'SelectQuestion';\r\n//                       },\r\n//                 // () => {\r\n//                 //   if (state.myQuestion.length !== 0) {\r\n//                 //     return 'Survey';\r\n//                 //   } else {\r\n//                 //     toast.info('항목을 하나 이상 선택 해주세요.');\r\n//                 //     return 'SelectQuestion';\r\n//                 //   }\r\n//                 // },\r\n//               })\r\n//             }\r\n//           />\r\n//         </OutLineButtonWrapper>\r\n//       </ContentsWrapper>\r\n//     </SelectQuestionWrapper>\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tab from '../../Components/Tab';\r\nimport Survey from '../../Components/Survey';\r\nimport SurveyDescription from '../../Components/SurveyDescription';\r\nimport SelectQuestion from '../../Components/SelectQuestions';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh;\r\n`;\r\n\r\nexport default ({\r\n  myQuestion,\r\n  allQuestion,\r\n  action,\r\n  setAction,\r\n  updateMyQuestion,\r\n  setSurveyCount,\r\n  updateQuestion,\r\n  myQuestionRefetch,\r\n  surveyCount,\r\n  createDiary,\r\n  diary,\r\n  setDiary,\r\n  history,\r\n}) => {\r\n  console.log('DiaryPresenter');\r\n  return (\r\n    <Wrapper>\r\n      {action === 'Description' && (\r\n        <>\r\n          <Tab />\r\n          <SurveyDescription setAction={setAction} />\r\n        </>\r\n      )}\r\n      {action === 'SelectQuestion' && (\r\n        <SelectQuestion\r\n          allQuestion={allQuestion}\r\n          myQuestion={myQuestion}\r\n          updateMyQuestion={updateMyQuestion}\r\n          updateQuestion={updateQuestion}\r\n          setAction={setAction}\r\n          myQuestionRefetch={myQuestionRefetch}\r\n        />\r\n      )}\r\n      {action === 'Survey' &&\r\n        (surveyCount === false ? (\r\n          history.push('/me')\r\n        ) : (\r\n          <>\r\n            <Survey\r\n              myQuestion={myQuestion}\r\n              surveyCount={surveyCount}\r\n              setSurveyCount={setSurveyCount}\r\n              createDiary={createDiary}\r\n              setAction={setAction}\r\n              diary={diary}\r\n              setDiary={setDiary}\r\n              isPushQUestion={false}\r\n            />\r\n          </>\r\n        ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\n// import React, { useEffect, useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import Tab from '../../Components/Tab';\r\n// import Survey from '../../Components/Survey';\r\n// import SurveyDescription from '../../Components/SurveyDescription';\r\n// import SelectQuestion from '../../Components/SelectQuestions';\r\n// import { DiaryContext, DiaryAction } from './DiaryContext';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\n// const Wrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-rows: 7vh;\r\n// `;\r\n\r\n// export default ({\r\n//   myQuestion,\r\n//   allQuestion,\r\n//   updateMyQuestion,\r\n//   refetchMyQuestion,\r\n//   createMyDiary,\r\n//   handleDiary,\r\n//   handleQuestion,\r\n// }) => {\r\n//   let history = useHistory();\r\n//   const { state, dispatch } = useContext(DiaryContext);\r\n//   useEffect(\r\n//     () =>\r\n//       dispatch({\r\n//         type: DiaryAction.PRE_LOAD,\r\n//         allQuestion,\r\n//         myQuestion,\r\n//         refetchMyQuestion,\r\n//         createMyDiary,\r\n//         updateMyQuestion,\r\n//         handleDiary,\r\n//         handleQuestion,\r\n//       }),\r\n//     [\r\n//       allQuestion,\r\n//       createMyDiary,\r\n//       dispatch,\r\n//       handleDiary,\r\n//       handleQuestion,\r\n//       myQuestion,\r\n//       refetchMyQuestion,\r\n//       updateMyQuestion,\r\n//     ]\r\n//   );\r\n//   console.log('DiaryPresenter');\r\n//   return (\r\n//     <Wrapper>\r\n//       <Tab />\r\n//       {state.action === 'Description' && <SurveyDescription />}\r\n//       {state.action === 'SelectQuestion' && <SelectQuestion />}\r\n//       {state.action === 'Survey' &&\r\n//         (state.surveyCount === false ? (\r\n//           history.push('/me')\r\n//         ) : (\r\n//           <>\r\n//             <Survey\r\n//             // myQuestion={myQuestion}\r\n//             // surveyCount={surveyCount}\r\n//             // setSurveyCount={setSurveyCount}\r\n//             // createDiary={createDiary}\r\n//             // setAction={setAction}\r\n//             // diary={diary}\r\n//             // setDiary={setDiary}\r\n//             />\r\n//           </>\r\n//         ))}\r\n//     </Wrapper>\r\n//   );\r\n// };\r\n","import DiaryContainer from './DiaryContainer';\r\nexport default DiaryContainer;\r\n","import React, { useState } from 'react';\r\nimport DiaryPresenter from './DiaryPresenter';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  GET_ALLDIARYQUESTION,\r\n  UPDATE_MYQUESTION,\r\n  GET_QUESTIONSOFME,\r\n  CREATE_MYDIARY,\r\n} from './DiaryQuries';\r\nimport Loader from '../../Components/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { READ_MYDIARY } from 'Routes/Me/MeQueries';\r\n\r\nexport default () => {\r\n  console.log('DiaryContainer');\r\n\r\n  //singleQuestion\r\n  //const [isSingleQuestion, setIsSingleQuestion] = useState(false);\r\n\r\n  //state\r\n  const [action, setAction] = useState('Description');\r\n  const [diary, setDiary] = useState({\r\n    good: undefined,\r\n    content: '',\r\n  });\r\n  const [surveyCount, setSurveyCount] = useState(0);\r\n  let history = useHistory();\r\n  //query\r\n\r\n  const {\r\n    data: myQuestionData,\r\n    loading: myQuestionLoading,\r\n    refetch: myQuestionRefetch,\r\n  } = useQuery(GET_QUESTIONSOFME);\r\n  const { data: allQuestionData, loading: allQuestionLoading } = useQuery(\r\n    GET_ALLDIARYQUESTION\r\n  );\r\n\r\n  //mutation\r\n  const [createMyDiary] = useMutation(CREATE_MYDIARY, {\r\n    refetchQueries: () => [{ query: READ_MYDIARY }],\r\n  });\r\n  const [updateMyQuestion] = useMutation(UPDATE_MYQUESTION);\r\n\r\n  //effect\r\n  // useEffect(() => {\r\n  //   setIsSingleQuestion(() => {\r\n  //     if (params.questionid) {\r\n  //       return true;\r\n  //     }\r\n  //   });\r\n  // }, [params.questionid]);\r\n  //function\r\n  const createDiary = async () => {\r\n    await createMyDiary({\r\n      variables: {\r\n        content: diary.content,\r\n        good: diary.good,\r\n        score: diary.score,\r\n        questionId: diary.questionId,\r\n      },\r\n    }).catch(e => console.log(e));\r\n    const surveyLength = myQuestionData.getQuestionsOfMe.length;\r\n    setSurveyCount(surveyLength - 1 === surveyCount ? false : surveyCount + 1);\r\n    setDiary(diary => ({\r\n      ...diary,\r\n      good: undefined,\r\n      content: '',\r\n      score: undefined,\r\n    }));\r\n    return setAction('Survey');\r\n  };\r\n  const updateQuestion = async (element, event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await updateMyQuestion({\r\n        variables: { question: element },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    await myQuestionRefetch();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {(allQuestionLoading || myQuestionLoading) && <Loader />}\r\n      {!(allQuestionLoading || myQuestionLoading) &&\r\n        allQuestionData &&\r\n        myQuestionData && (\r\n          <DiaryPresenter\r\n            //state\r\n            action={action}\r\n            setAction={setAction}\r\n            diary={diary}\r\n            setDiary={setDiary}\r\n            surveyCount={surveyCount}\r\n            setSurveyCount={setSurveyCount}\r\n            history={history}\r\n            //function\r\n            createDiary={createDiary}\r\n            updateMyQuestion={updateMyQuestion}\r\n            //query\r\n            allQuestion={allQuestionData.getAllQuestion}\r\n            myQuestion={myQuestionData.getQuestionsOfMe}\r\n            //mutation\r\n            updateQuestion={updateQuestion}\r\n            myQuestionRefetch={myQuestionRefetch}\r\n          />\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\n// import React, { useReducer, useMemo, useCallback } from 'react';\r\n// import DiaryPresenter from './DiaryPresenter';\r\n// import { useQuery, useMutation } from '@apollo/react-hooks';\r\n// import {\r\n//   GET_ALLDIARYQUESTION,\r\n//   UPDATE_MYQUESTION,\r\n//   GET_QUESTIONSOFME,\r\n//   CREATE_MYDIARY,\r\n// } from './DiaryQuries';\r\n// import Loader from '../../Components/Loader';\r\n// import { reducer, DiaryContext, DiaryAction } from './DiaryContext';\r\n\r\n// const diaryInitialState = {\r\n//   action: 'Description',\r\n//   surveyCount: 0,\r\n//   diary: {\r\n//     good: undefined,\r\n//   },\r\n// };\r\n\r\n// export default () => {\r\n//   console.log('DiaryContainer');\r\n//   const [state, dispatch] = useReducer(reducer, diaryInitialState);\r\n//   //query\r\n//   const { data: allQuestionData, loading: allQuestionLoading } = useCallback(\r\n//     useQuery(GET_ALLDIARYQUESTION)\r\n//   );\r\n//   const {\r\n//     data: myQuestionData,\r\n//     loading: myQuestionLoading,\r\n//     refetch: refetchMyQuestion,\r\n//   } = useQuery(GET_QUESTIONSOFME);\r\n\r\n//   //mutation\r\n//   const [createMyDiary, { loading: createMyDiaryLoading }] = useCallback(\r\n//     useMutation(CREATE_MYDIARY)\r\n//   );\r\n//   const [updateMyQuestion, { loading: updateMyQuestionLoading }] = useCallback(\r\n//     useMutation(UPDATE_MYQUESTION)\r\n//   );\r\n\r\n//   //function\r\n//   const handleDiary = useCallback(() => {\r\n//     console.log('handleDiary');\r\n//     dispatch({ type: DiaryAction.CREATE_MYDIARY });\r\n//     dispatch({ type: DiaryAction.COUNT_SURVEY });\r\n//     dispatch({ type: DiaryAction.INIT_DIARY });\r\n//     dispatch({ type: DiaryAction.SETACTION, action: 'Survey' });\r\n//   }, []);\r\n\r\n//   const handleQuestion = useCallback(\r\n//     async (element, event) => {\r\n//       console.log('event : ', event);\r\n//       await event.preventDefault();\r\n//       console.log('handleQuestion');\r\n//       console.log(element);\r\n//       dispatch({ type: DiaryAction.UPDATE_MYQUESTION, question: element });\r\n//        await refetchMyQuestion();\r\n\r\n//     },\r\n//     // eslint-disable-next-line\r\n//     []\r\n//   );\r\n\r\n//   const value = useMemo(() => ({ state, dispatch }), [state]);\r\n//   if (\r\n//     allQuestionLoading ||\r\n//     myQuestionLoading ||\r\n//     createMyDiaryLoading ||\r\n//     updateMyQuestionLoading\r\n//   )\r\n//     return <Loader />;\r\n\r\n//   // handleDiary,\r\n//   // handleQuestion,\r\n//   // allQuestion: allQuestionData.getAllQuestion,\r\n//   // myQuestion: myQuestionData.getQuestionsOfMe,\r\n//   // createMyDiary,\r\n//   // updateMyQuestion,\r\n//   // refetchMyQuestion,\r\n//   return (\r\n//     <DiaryContext.Provider value={value}>\r\n//       <DiaryPresenter\r\n//         //function\r\n//         handleDiary={handleDiary}\r\n//         handleQuestion={handleQuestion}\r\n//         //query\r\n//         allQuestion={allQuestionData.getAllQuestion}\r\n//         myQuestion={myQuestionData.getQuestionsOfMe}\r\n//         //mutation\r\n//         createMyDiary={createMyDiary}\r\n//         updateMyQuestion={updateMyQuestion}\r\n//         refetchMyQuestion={refetchMyQuestion}\r\n//       />\r\n//     </DiaryContext.Provider>\r\n//   );\r\n// };\r\n","export default [\r\n  { name: 'RED', color: '#F44336' },\r\n  { name: 'PINK', color: '#E91E63' },\r\n  { name: 'PURPLE', color: '#9C27B0' },\r\n  { name: 'DEEPPURPLE', color: '#673AB7' },\r\n  { name: 'WHALEBLUE', color: '#1A232C' },\r\n  { name: 'INDEGO', color: '#3F51B5' },\r\n  { name: 'FACEBLUE', color: '#3B5998' },\r\n  { name: 'BLUE', color: '#2196F3' },\r\n  { name: 'LIGHTBLUE', color: '#03A9F4' },\r\n  { name: 'TEAL', color: '#009688' },\r\n  { name: 'GREEN', color: '#4CAF50' },\r\n  { name: 'LIGHTGREEN', color: '#8BC34A' },\r\n  { name: 'LIME', color: '#CDDC39' },\r\n  { name: 'YELLOW', color: '#FFEB3B' },\r\n  { name: 'AMBER', color: '#FFC107' },\r\n  { name: 'ORANGE', color: '#FF9800' },\r\n  { name: 'DEEPORANGE', color: '#FF5722' },\r\n  { name: 'BROWN', color: '#795548' },\r\n  { name: 'GREY', color: '#9E9E9E' },\r\n  { name: 'DEEPBLACK', color: '#1C1C1C' },\r\n];\r\n","import styled from 'styled-components';\r\nimport Input from '../../Components/Input';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  background: white;\r\n  grid-template-rows: 8vh 84vh 8vh;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\nexport const TitleText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\nexport const ChatHandlerWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 4fr 3fr;\r\n  height: 7vh;\r\n  justify-items: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  background-color: ${props => props.theme.activeColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nexport const BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nexport const Title = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  color: white;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nexport const RestartWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\n\r\nexport const ScrollAble = styled.div`\r\n  display: block;\r\n  overflow-y: scroll;\r\n  transform: rotate(180deg);\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ChatWrapper = styled.div`\r\n  display: grid;\r\n  transform: rotate(180deg);\r\n  grid-gap: 1vh;\r\n  background: white;\r\n  padding: 2vw;\r\n  margin-bottom: 1vh;\r\n  align-content: end;\r\n  align-self: end;\r\n`;\r\n\r\nexport const MyChatText = styled.div`\r\n  display: grid;\r\n  padding: 2vw;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: black;\r\n`;\r\n\r\nexport const NotMyChatText = styled.div`\r\n  display: grid;\r\n  padding: 2vw;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\n\r\nexport const MyBox = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: end;\r\n  background: ${props => props.theme.myChatGrey};\r\n  border-radius: 13px;\r\n`;\r\n\r\nexport const NotMyBoxWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 1vh;\r\n  grid-auto-rows: 15vw;\r\n  grid-template-columns: 15vw minmax(0, 60vw);\r\n  height: 100%;\r\n`;\r\n\r\nexport const NotMyBox = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: start;\r\n  background: ${props => props.theme.notMyChatGrey};\r\n  border-radius: 13px;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  height: 85%;\r\n  width: 85%;\r\n  border-radius: 20px;\r\n  background: ${props => props.theme.dimgreyColor};\r\n`;\r\n\r\nexport const AvatarText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\n\r\nexport const DateWapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 3fr 3fr;\r\n  margin-bottom: 10vw;\r\n`;\r\nexport const DateText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 3vw;\r\n  color: dimgrey;\r\n`;\r\nexport const DateTail = styled.div`\r\n  border-bottom: 0.5vw solid #dee2e6;\r\n  margin-bottom: 0.4vw;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: grid;\r\n  height: 8vh;\r\n  align-self: end;\r\n  grid-template-columns: 1fr 1fr 6fr 1fr;\r\n`;\r\nexport const Emoji = styled.div`\r\n  display: grid;\r\n  width: 8vh;\r\n  height: 8vh;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background: ${props => props.theme.activeColor};\r\n`;\r\n\r\nexport const SvgWrapper = styled.div`\r\n  display: grid;\r\n`;\r\nexport const Empty = styled.div`\r\n  display: grid;\r\n  background: white;\r\n`;\r\nexport const StyledInput = styled(Input)`\r\n  display: grid;\r\n  height: 100%;\r\n  font-size: 1.5rem;\r\n  padding: 0;\r\n  outline: none;\r\n  border: none;\r\n`;\r\nexport const Send = styled.div`\r\n  display: grid;\r\n  width: 8vh;\r\n  height: 8vh;\r\n  background: ${props => props.theme.activeColor};\r\n`;\r\n\r\nexport const SendText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\n","import { createContext } from 'react';\r\n\r\nexport const ThemeContext = createContext({\r\n  action: 'theme',\r\n});\r\n\r\nexport const ThemeAction = {\r\n  PRE_LOAD: 'PRE_LOAD',\r\n  SELECT_COLOR: 'SELECT_COLOR',\r\n  GO_BACK: 'GO_BACK',\r\n  SET_COLOR: 'SET_COLOR',\r\n};\r\n\r\nconst setColor = state => {\r\n  state.createMyColor();\r\n  return { ...state };\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ThemeAction.PRE_LOAD:\r\n      return {\r\n        ...state,\r\n        readMyData: action.readMyData,\r\n        createMyColor: action.createMyColor,\r\n      };\r\n    case ThemeAction.SELECT_COLOR:\r\n      return {\r\n        ...state,\r\n        color: action.color,\r\n        action: 'example',\r\n      };\r\n    case ThemeAction.GO_BACK:\r\n      return {\r\n        ...state,\r\n        action: 'theme',\r\n      };\r\n    case ThemeAction.SET_COLOR:\r\n      return setColor(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport {\r\n  ScrollAble,\r\n  MyChatText,\r\n  NotMyChatText,\r\n  MyBox,\r\n  NotMyBoxWrapper,\r\n  NotMyBox,\r\n  Avatar,\r\n  AvatarText,\r\n  DateWapper,\r\n  DateText,\r\n  DateTail,\r\n} from '../Routes/Story/StoryCSS';\r\nimport { WhiteBackArrow } from './Icons';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ThemeContext, ThemeAction } from 'Routes/Theme/ThemeContext';\r\nimport {\r\n  FeedTeam,\r\n  DiaryRead,\r\n  AlarmSound,\r\n  MeUser,\r\n  StoryMessage,\r\n  ETC,\r\n} from '../Components/Icons';\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 8vh 5vh 8vh 5vh 40vh 5vh;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  color: white;\r\n`;\r\nconst DecriptionBox = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: white;\r\n  background: #1c1c1c;\r\n`;\r\n\r\nconst ChatWrapper = styled.div`\r\n  display: grid;\r\n  transform: rotate(180deg);\r\n  grid-gap: 1vh;\r\n  background: white;\r\n  padding: 2vw;\r\n  align-content: end;\r\n  align-self: end;\r\n`;\r\nconst ThemeHandlerWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 4fr 3fr;\r\n  justify-items: center;\r\n  align-items: center;\r\n  background-color: ${props => props.theme.activeColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nconst Title = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  color: white;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst ArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nconst TitleText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\nconst SvgWrapper = styled.div`\r\n  display: grid;\r\n  transform: rotate(180deg);\r\n`;\r\nconst TabWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  background: ${props => props.theme.whiteColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst TimelineWrapper = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  background: white;\r\n  padding: 10vw;\r\n  padding-top: 7vw;\r\n`;\r\nconst Timeline = styled.div`\r\n  display: grid;\r\n  grid-column: 100%;\r\n  grid-auto-rows: 17vh;\r\n`;\r\nconst TimelineTail = styled.div`\r\n  position: absolute;\r\n  height: calc(100% - 2vw);\r\n  left: 2vw;\r\n  top: 3vw;\r\n  border-left: 2vw solid ${props => props.theme.lightGreyColor};\r\n`;\r\n\r\nconst TimlineCircle = styled.div`\r\n  position: absolute;\r\n  width: 6vw;\r\n  height: 6vw;\r\n  background-color: ${props => props.theme.activeColor};\r\n  border-radius: 100px;\r\n  top: 0.5vw;\r\n`;\r\n\r\nconst TimelineItem = styled.div`\r\n  position: relative;\r\n`;\r\nconst TimelineItemsWrapper = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-left: 7vw;\r\n  grid-template-areas:\r\n    'type good good'\r\n    'content content content'\r\n    'content content content'\r\n    'score score score'\r\n    'score score score';\r\n`;\r\nconst Type = styled.div`\r\n  font-family: 'KakaoB';\r\n  align-self: start;\r\n  justify-self: start;\r\n  font-size: 6vw;\r\n  grid-area: type;\r\n  padding-top: 0.5vw;\r\n`;\r\nconst Content = styled.div`\r\n  font-size: 5vw;\r\n  padding-top: 1vw;\r\n  grid-area: content;\r\n  overflow-y: hidden;\r\n  -webkit-line-clamp: 2;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst Good = styled.div`\r\n  display: grid;\r\n  align-self: start;\r\n  justify-self: end;\r\n  grid-area: good;\r\n  font-size: 4vw;\r\n  border: 3px solid ${props => props.theme.activeColor};\r\n  border-radius: 30px;\r\n  padding: 1vw;\r\n  bottom: 2vw;\r\n`;\r\nconst Score = styled.div`\r\n  display: grid;\r\n  grid-area: score;\r\n`;\r\n\r\nexport default () => {\r\n  const { state, dispatch } = useContext(ThemeContext);\r\n  const customColor = state.color;\r\n  const Tab = styled(NavLink)`\r\n    z-index: 10;\r\n    display: grid;\r\n    > i {\r\n      display: grid;\r\n    }\r\n    i > svg {\r\n      width: 50%;\r\n      height: 50%;\r\n      align-self: center;\r\n      justify-self: center;\r\n      color: ${props => props.theme.dimgreyColor};\r\n    }\r\n\r\n    &.active {\r\n      & {\r\n        border-bottom: 0.5vh solid ${customColor};\r\n      }\r\n      > i > svg {\r\n        color: ${customColor};\r\n      }\r\n    }\r\n  `;\r\n  console.log('ThemeExample');\r\n  const MyName = state.readMyData.readMyData.userName;\r\n  return (\r\n    <Wrapper>\r\n      <ThemeHandlerWrapper style={{ background: customColor }}>\r\n        <BackArrowWrapper\r\n          onClick={() => dispatch({ type: ThemeAction.GO_BACK })}>\r\n          <WhiteBackArrow />\r\n          <Text>다시고르기</Text>\r\n        </BackArrowWrapper>\r\n        <Title>\r\n          <TitleText>확인하기</TitleText>\r\n        </Title>\r\n        <ArrowWrapper\r\n          onClick={async () => await dispatch({ type: ThemeAction.SET_COLOR })}>\r\n          <Text>이걸로하기</Text>\r\n          <SvgWrapper>\r\n            <WhiteBackArrow />\r\n          </SvgWrapper>\r\n        </ArrowWrapper>\r\n      </ThemeHandlerWrapper>\r\n      <DecriptionBox>\r\n        <Text>탭의 색깔을 확인해보세요</Text>\r\n      </DecriptionBox>\r\n      <TabWrapper>\r\n        <Tab to={'/theme'} activeClassName=\"active\" replace>\r\n          <i>\r\n            <FeedTeam />\r\n          </i>\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <i>\r\n            <DiaryRead />\r\n          </i>\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <i>\r\n            <AlarmSound />\r\n          </i>\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <i>\r\n            <StoryMessage />\r\n          </i>\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <i>\r\n            <MeUser />\r\n          </i>\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <i>\r\n            <ETC />\r\n          </i>\r\n        </Tab>\r\n      </TabWrapper>\r\n      <DecriptionBox>\r\n        <Text>작성될 일기를 확인해보세요</Text>\r\n      </DecriptionBox>\r\n      <TimelineWrapper>\r\n        <Timeline>\r\n          <TimelineItem>\r\n            <TimelineTail />\r\n            <TimlineCircle style={{ background: customColor }} />\r\n            <TimelineItemsWrapper>\r\n              <Type>오전</Type>\r\n              <Good style={{ border: `3px solid ${customColor}` }}>행동</Good>\r\n              <Content>\r\n                {/* prettier-ignore */}\r\n                <pre>\r\n{\r\n`오전에 출근해서 개발을 했다.`\r\n}\r\n                  </pre>\r\n              </Content>\r\n              <Score>긍정적 느낌 6</Score>\r\n            </TimelineItemsWrapper>\r\n          </TimelineItem>\r\n        </Timeline>\r\n        <Timeline>\r\n          <TimelineItem>\r\n            <TimelineTail />\r\n            <TimlineCircle style={{ background: customColor }} />\r\n            <TimelineItemsWrapper>\r\n              <Type>잠들기 전</Type>\r\n              <Good style={{ border: `3px solid ${customColor}` }}>\r\n                감정이나 느낌\r\n              </Good>\r\n              <Content>\r\n                {/* prettier-ignore */}\r\n                <pre>\r\n{\r\n`아무 감정이 안느껴진다.`\r\n}\r\n                  </pre>\r\n              </Content>\r\n              <Score>부정적 느낌 4</Score>\r\n            </TimelineItemsWrapper>\r\n          </TimelineItem>\r\n        </Timeline>\r\n      </TimelineWrapper>\r\n      <DecriptionBox>\r\n        <Text>상대방에게 보일 닉네임의 색깔을 확인해보세요</Text>\r\n      </DecriptionBox>\r\n      <ScrollAble>\r\n        <ChatWrapper>\r\n          <DateWapper>\r\n            <DateTail />\r\n            <DateText>{moment(new Date()).format('YYYY년 MM월 DD일')}</DateText>\r\n            <DateTail />\r\n          </DateWapper>\r\n          <NotMyBoxWrapper>\r\n            <Avatar style={{ background: customColor }}>\r\n              <AvatarText>{MyName}</AvatarText>\r\n            </Avatar>\r\n            <NotMyBox>\r\n              <NotMyChatText>안녕하세요</NotMyChatText>\r\n            </NotMyBox>\r\n          </NotMyBoxWrapper>\r\n          <MyBox>\r\n            <MyChatText>안녕하세요</MyChatText>\r\n          </MyBox>\r\n        </ChatWrapper>\r\n      </ScrollAble>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 8vh 5vh;\r\n`;\r\n\r\nexport const ThemeWrapper = styled.div`\r\n  display: grid;\r\n  background: white;\r\n`;\r\n\r\nexport const ThemeItem = styled.div`\r\n  display: grid;\r\n  color: white;\r\n  padding: 1vw;\r\n  font-size: 1rem;\r\n`;\r\nexport const Title = styled.div`\r\n  display: grid;\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  align-items: center;\r\n  justify-items: center;\r\n  color: white;\r\n  background: #1c1c1c;\r\n`;\r\n\r\nexport const TinyText = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: black;\r\n  background: white;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\n\r\nexport const CheckWrapper = styled.div`\r\n  display: grid;\r\n  align-self: end;\r\n  justify-self: end;\r\n  padding: 1vw;\r\n\r\n  :focus {\r\n    transition: all 0.2s ease;\r\n    transform: rotate(1turn);\r\n  }\r\n`;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport CustomTheme from 'Styles/CustomTheme';\r\nimport { Check } from 'Components/Icons';\r\nimport ThemeExample from 'Components/ThemeExample';\r\nimport { ThemeContext, ThemeAction } from './ThemeContext';\r\nimport {\r\n  Wrapper,\r\n  ThemeWrapper,\r\n  ThemeItem,\r\n  Title,\r\n  TinyText,\r\n  Text,\r\n  CheckWrapper,\r\n} from './ThemeCSS';\r\n\r\nexport default ({ readMyData, createMyColor }) => {\r\n  console.log('initContext : ', ThemeContext);\r\n  const { state, dispatch } = useContext(ThemeContext);\r\n  useEffect(() => {\r\n    dispatch({ type: ThemeAction.PRE_LOAD, readMyData, createMyColor });\r\n  }, [dispatch, readMyData, createMyColor]);\r\n\r\n  console.log(state);\r\n  return (\r\n    <>\r\n      {state.action === 'theme' && (\r\n        <Wrapper>\r\n          <Title>\r\n            <Text>좋아하는 색깔을 골라주세요</Text>\r\n          </Title>\r\n          <TinyText>\r\n            <Text>이 색은 채팅할때 닉네임색, 테마에 적용될거에요!</Text>\r\n          </TinyText>\r\n          <ThemeWrapper>\r\n            {CustomTheme.map(theme => (\r\n              <ThemeItem\r\n                key={theme.name}\r\n                style={{ background: theme.color }}\r\n                onClick={() => {\r\n                  dispatch({\r\n                    type: ThemeAction.SELECT_COLOR,\r\n                    color: theme.color,\r\n                  });\r\n                }}>\r\n                {theme.name}\r\n                <CheckWrapper>\r\n                  <Check />\r\n                </CheckWrapper>\r\n              </ThemeItem>\r\n            ))}\r\n          </ThemeWrapper>\r\n        </Wrapper>\r\n      )}\r\n      {state.action === 'example' && <ThemeExample />}\r\n    </>\r\n  );\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const CREATE_MYCOLOR = gql`\r\n  mutation ceateMyColor($avatar: String!) {\r\n    createMyColor(avatar: $avatar)\r\n  }\r\n`;\r\n","import React, { useReducer, useMemo } from 'react';\r\nimport ThemePresenter from './ThemePresenter';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { CREATE_MYCOLOR } from './ThemeQueries';\r\nimport { READ_MYDATA } from '../../sharedQueries';\r\nimport Loader from 'Components/Loader';\r\nimport { reducer, ThemeContext } from './ThemeContext';\r\n\r\nconst themeInitialState = {\r\n  action: 'theme',\r\n  color: '',\r\n};\r\n\r\nexport default () => {\r\n  const [state, dispatch] = useReducer(reducer, themeInitialState);\r\n  const { data: readMyData, loading: myDataLoading } = useQuery(READ_MYDATA, {\r\n    variables: { avatar: state.color },\r\n  });\r\n  const [createMyColor] = useMutation(CREATE_MYCOLOR, {\r\n    variables: { avatar: state.color },\r\n    refetchQueries: () => [{ query: READ_MYDATA }],\r\n    onCompleted: () => (window.location = '/disorder'),\r\n  });\r\n  const value = useMemo(() => ({ state, dispatch }), [state]);\r\n\r\n  if (myDataLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      <ThemePresenter readMyData={readMyData} createMyColor={createMyColor} />\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import ThemeContainer from './ThemeContainer';\r\nexport default ThemeContainer;\r\n","import React, { useState, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport mainImage0 from '../assets/image/19.jpg';\r\nimport mainImage1 from '../assets/image/2.jpg';\r\nimport mainImage2 from '../assets/image/24.jpg';\r\nimport mainImage3 from '../assets/image/12.jpg';\r\nimport mainImage4 from '../assets/image/6.jpg';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { WhiteBackArrow } from './Icons';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 6vh 32vh;\r\n  align-items: start;\r\n  background: white;\r\n  justify-items: center;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  display: grid;\r\n  align-content: center;\r\n  font-size: 0.8rem;\r\n  font-family: 'KakaoL';\r\n  font-weight: 600;\r\n  padding-left: 4vw;\r\n  padding-bottom: 4vw;\r\n  line-height: 1.4rem;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: grid;\r\n  justify-items: start;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-bottom: 1vh;\r\n`;\r\n\r\nconst TitleText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst MainImageWraper = styled.div`\r\n  position: relative;\r\n  height: 32vh;\r\n  width: 100%;\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n\r\n  max-width: 500px;\r\n`;\r\n\r\nconst MainImage = styled.img`\r\n  position: absolute;\r\n  background: #dee2e6;\r\n  align-self: start;\r\n  -o-object-fit: cover;\r\n  object-fit: cover;\r\n  width: 100%;\r\n  height: 32vh;\r\n`;\r\n\r\nconst ThemeHandlerWrapper = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 6vh;\r\n  grid-template-columns: 3fr 4fr 3fr;\r\n  justify-items: center;\r\n  align-items: center;\r\n  background-color: ${props => props.theme.activeColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n  position: fixed;\r\n`;\r\nconst BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nconst ArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nconst SvgWrapper = styled.div`\r\n  display: grid;\r\n  transform: rotate(180deg);\r\n`;\r\nconst TabTitleText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\nconst TabTitle = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  color: white;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  color: white;\r\n`;\r\n\r\nexport default () => {\r\n  const [count, setCount] = useState(0);\r\n  const history = useHistory();\r\n  console.log('SurveyDescription');\r\n  const mainImage = useMemo(() => {\r\n    switch (count) {\r\n      case 0:\r\n        return mainImage0;\r\n      case 1:\r\n        return mainImage1;\r\n      case 2:\r\n        return mainImage2;\r\n      case 3:\r\n        return mainImage3;\r\n      case 4:\r\n        return mainImage4;\r\n      default:\r\n        return mainImage0;\r\n    }\r\n  }, [count]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div></div>\r\n      <ThemeHandlerWrapper>\r\n        <BackArrowWrapper\r\n          onClick={() =>\r\n            setCount(count === 0 ? history.push('/diary') : count - 1)\r\n          }>\r\n          <WhiteBackArrow />\r\n          <Text>뒤로가기</Text>\r\n        </BackArrowWrapper>\r\n        <TabTitle>\r\n          <TabTitleText>치료모델</TabTitleText>\r\n        </TabTitle>\r\n        <ArrowWrapper\r\n          onClick={() =>\r\n            setCount(count === 4 ? history.push('/diary') : count + 1)\r\n          }>\r\n          <Text>{count === 4 ? '시작하기' : '계속하기'}</Text>\r\n          <SvgWrapper>\r\n            <WhiteBackArrow />\r\n          </SvgWrapper>\r\n        </ArrowWrapper>\r\n      </ThemeHandlerWrapper>\r\n      <MainImageWraper>\r\n        <MainImage src={mainImage} />\r\n      </MainImageWraper>\r\n      <Title>\r\n        <TitleText>{contents[count].title}</TitleText>\r\n      </Title>\r\n      <TextWrapper>\r\n        {/* prettier-ignore */}\r\n        <pre>\r\n        {contents[count].content}\r\n      </pre>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst contents = [\r\n  {\r\n    title: '인간은 괴로움을 경험합니다.',\r\n    // prettier-ignore\r\n    content:\r\n ` 인간은 괴로움을 경험합니다.\r\n  이것은 단지 고통이 있다는 것이 아니며\r\n  괴로움에 시달린다는것은 \r\n  그보다 훨씬 더 이상의 것입니다.\r\n  \r\n  인간은 고통의 상황을 피한다고 해서 \r\n  고통으로부터 다 벗어날 수 없을 뿐만 아니라,\r\n  즐거운 상황 또한 고통을 불러일으키기도 합니다.\r\n  \r\n  당신이 매우 소중한 사람과 최근에 사별하였는데,\r\n  지금까지 보아 온 가장 아름다운 \r\n  일몰광경을 보고 있다고 가정해보겠습니다.\r\n  당신은 무슨 생각을 하게될까요?\"\r\n  \r\n  인간의 경우에 언어적 관계를 유발하는 \r\n  임의적인 단서만 있어도 \r\n  힘든 감정이 떠오를 수 있기 때문에, \r\n  심리적 고통에 대한 상황적인 단서를 피한다고 해서\r\n  힘든 감정을 제거하는 데 성공할 수는 없어보입니다.\r\n  \r\n  일몰의 예가 그 과정을 잘 보여주는데요. \r\n  일몰광경이 한 개인의 언어적 역사를 유발할 수 있습니다.\r\n  일몰은 '아름답고', 당신은 아름다운 일이 있으면 \r\n  누군가와 나누고 싶어 합니다.\r\n  \r\n  하지만 이 일몰의 아름다움을 \r\n  나눌 수 있는 사랑하는 사람이 없기때문에\r\n  당신은 아름다운 일몰을 보는 \r\n  바로 그 순간에 슬픔을 느끼게 됩니다.`\r\n  },\r\n  {\r\n    title: 'Relational Frame Theory',\r\n    // prettier-ignore\r\n    content:\r\n  `이 앱은 인간의 마음이 \r\n  어떻게 작용하는가에 대한연구 프로그램인 \r\n  Relational Frame Theory에 기반한 \r\n  (이하 RFT, Hayes, Barnes-Holmes, & Roche,2001)\r\n  과학적인 토대를 지닌 심리치료모델을 \r\n  실생활에 적용 하기위해 만든 앱입니다.\r\n  \r\n  이 연구는 우리가 심리적문제를 해결하는데 사용하는 \r\n  많은 수단들때문에 오히려 괴로움을 낳는\r\n  덫에 걸리게 된다고 제안합니다.`\r\n  },\r\n  {\r\n    title: '인간 언어의 속성',\r\n    // prettier-ignore\r\n    content:\r\n  `인간의 마음이란 무엇인가?\r\n  인간은 어떻게 지구의 모든 종을 정복 할 수 있었을까?\r\n  우리는 왜 창밖을 나는 새와 다른가?\r\n  우리는 왜 괴로움을 겪는가?\r\n  \r\n  인간은 오랫동안 이러한 종류의 질문들로 골머리를 앓아 왔고\r\n  RFT연구는 그 해답의 일부를 알고 있다고 생각합니다.\r\n  \r\n  RFT의 기본전제는,\r\n  인간의 행동은 관계구성틀이라고 불리는\r\n  상호관계의 망을 통해 주로 지배된다는 것입니다.\r\n  \r\n  이러한 관계의 틀은 인간언어 및 인지의 핵심을 이루며,\r\n  우리는 이를 통해 직접적인 경험 없이도 \r\n  무언가를 배울 수 있습니다.\r\n  \r\n  \r\n  예를들어 고양이는\r\n  똑같은 뜨거운 난로를 두번 만지지 않겠지만,\r\n  이를 배우기위해서 적어도 한번은 만져야 합니다.\r\n  \r\n  그러나 인간의 경우, 어린아이라 할 지라도\r\n  손을 델 수 있다는 것을 언어적으로 배우기 위해서\r\n  손으로 뜨거운 난로를 만져볼 필요는 전혀 없습니다.\r\n  \r\n  이것은 인간은 환경 내에 있는 \r\n  대상이나 생각, 감정, 행동성향, 행위를\r\n  환경내의 다른 대상이나 생각, 감정과 \r\n  사실상 모든방식으로 임의적으로 관련지을 수 있습니다.\r\n  \r\n  \r\n  인간은 항상 아주 쉽게 임의적인 관계를 만들어 낼 수 있습니다.\r\n  \r\n  구체적인 명사 하나를 떠올려보세요\r\n  \r\n  이제 또 다른 명사 하나를 떠올려보세요\r\n  \r\n  \r\n  \r\n  이제 다음 질문에 답해보세요.\r\n  \"첫번째 명사와 두번째 명사는 어떤점이 같은가?\"\r\n  답을 찾았으면, 계속해서 다음 질문에 답해보세요.\r\n  \r\n  \r\n  \"첫번째 명사는 두번째 명사보다 어떻게 더 좋은가?\"\r\n  적절한 답을 찾았으면, 다음 질문에 또 답해주세요.\r\n  \r\n  \r\n  \"첫번째 명사는 어떻게 두번째 명사의 원인인가?\"\r\n  이 마지막 질문에 대한 답을 찾는것은\r\n  그렇게 간단하지 않을 수있습니다.\r\n  \r\n  그러나 시간을 들인다면 못찾을것도 없을것입니다.\r\n  \r\n  이러한 특징은 인간의 마음이 기능하는 방식의 \r\n  가장 본질적인 부분입니다.\r\n  \r\n  인간이 위에 예시를 든 아기와같은\r\n  관계추론 능력을 갖게된것은 \r\n  10만년~7만5천년 전이라고 예상되고\r\n  \r\n  위의 질문과같은 정교한 추론능력을 지니게 된것은\r\n  사건들간의 관계를 구성하는 능력에 전환을 가져온\r\n  문자가 등장한 때입니다.\r\n  \r\n  외부세상에서 이러한 능력은 어느것과도\r\n  비교할 수 없는 인간이라는 종의 중요한 특징이지만\r\n  \r\n  인간 개인의 내면적 삶과 관련하여 보면,\r\n  언어적 규칙들은 우리의 삶을 근본적으로 제한 할 수 있습니다.\r\n  \r\n  동물을 기준으로 보면, 인간은 약하고 느린 피조물입니다.\r\n  우리는 고릴라의 힘, 호랑이의 이빨, 뱀의 독을 \r\n  갖고있지 않음에도 불구하고 \r\n  인간은 지난 1만년동안 이 지구를 지배해 왔습니다.\r\n  \r\n  왜 그럴까요?\r\n  \r\n  RFT는 그 해답이 어떤것에도 적용될 수 있는\r\n  동일성의 관계를 통해 관계적 사고를 자연스럽게 할 수 있는\r\n  관계구성 능력에 있다고 생각합니다.\r\n  \r\n  이 특징은 언어를 사용한다는 것의 \r\n  의미인 동시에 인간의 진화적인 자산이며,\r\n  인간은 이에따라 동물의 왕국에서 \r\n  지배적인 역할을 차지할 수 있게 되었지만\r\n  개인에게 있어서는 동일한 능력이 \r\n  또한 괴로움을 만들게 됩니다.`\r\n  },\r\n  {\r\n    title: '언어는 왜 괴로움을 낳는가?',\r\n    // prettier-ignore\r\n    content:\r\n  `인간은 괴로움을 경험합니다.\r\n  이것은 단지 고통이 있다는 것이 아니며\r\n  괴로움에 시달린다는것은 \r\n  그보다 훨씬 더 이상의 것입니다.\r\n  \r\n  이 앱은 인간의 마음이 어떻게 작용하는가에 대한\r\n  연구 프로그램인 Relational Frame Theory에 기반한 \r\n  과학적인 토대를 지닌 심리치료모델을 \r\n  실생활에 적용 하기위해 만든 앱입니다.\r\n  \r\n  이 연구는 우리가 심리적문제를 해결하는데 사용하는 \r\n  많은 수단들때문에 오히려 괴로움을 낳는\r\n  덫에 걸리게 된다고 제안합니다.`\r\n  },\r\n  {\r\n    title: '이 심리치료 모델이 제시하는 치료방법',\r\n    // prettier-ignore\r\n    content:\r\n  `RFT심리치료 모델에서의 \r\n  고통을 만드는 인간의 능력은 \r\n  크게 세가지로 나눌 수 있습니다.\r\n  \r\n  사건과 그 속성\r\n  ex)\r\n  1. 아름다운일몰을보며 이런 아름다움을 나누던\r\n  사별한 배우자를 떠올리며 괴로워 할 수 있습니다.\r\n  2. 과거의 외적인 경험을 회상하고 묘사하면서 \r\n  그 결과로 흐느껴 울기 시작할 수있습니다.\r\n  3. 칼에 베이면 를 입을 수 있음을 알기 때문에, \r\n  칼을 두려워 할 수 있습니다.\r\n  \r\n  시간 혹은 인과\r\n  ex)\r\n  1. 시간적인 관계를 가지고 일어나지 않을 수도 있는 \r\n  나쁜 사건을 예언할 수 있습니다.\r\n  2. 고통이나 우울이 미래에 다시 \r\n  나타날 것처럼 두려워할 수 있습니다.\r\n  \r\n  이러한 상징인 시간적 관계들의 결과로서, \r\n  대부분의 사람들은현재의 순간을 살지 못하고 \r\n  언어적으로 회상한 과거와 \r\n  언어적으로 상상한 미래에서 살게 됩니다.\r\n  \r\n  평가 또는 비교\r\n  ex)\r\n  1. 비교 및 평가의 관계를 가지고, \r\n  우리는 자신을 이상과 비교할 수 있습니다.\r\n  2. 실제로 매우 잘하고 있는 경우에도 \r\n  스스로를 부족하다고 생각할 수 있습니다.\r\n  3. 우리는 자신이 남보다 훨씬 더 못하다거나 \r\n  훨씬 더 낫다고 생각할 수 있습니다.\r\n  4. 타인의 부정적인 평가를 경험해 본 적이 없음에도 \r\n  이를 두려워 할 수있고,\r\n  그 결과로 사회적으로 위축 될 수 있습니다.\r\n  \r\n  이 심리치료 모델이 제시하는 치료방법\r\n  1. 내적으로 사용하는 잘못된 자기통제전략을 확인한다.\r\n  어떻게?\r\n  \r\n  2. 불편한생이나 감정에 대한 올바른 이해\r\n  무엇이 올바른 이해인가?\r\n  \r\n  3. 사적 경험이 일어날 때 그것과 싸우며 \r\n  불편한 감정을 느끼는 상황의 대처방법\r\n  어떻게 대처해야하는가?\r\n  \r\n  1.내적으로 사용하는 잘못된 자기통제전략을 확인하기\r\n  \r\n  1)생각의 억제\r\n  임상심리연구를 통해 생각의 억제가 \r\n  오히려 더 생각나게 만든다는 실험\r\n  (하버드연구소 댄배그너(Dan Wegner, 1994))\r\n  을 통해 사고 억제는 상황을 악화 시킨다는것을 알려 줍니다.\r\n  \r\n  2)감정의 억제\r\n  나쁜감정을 느끼지 않으려고 애쓰면, \r\n  전에는 중성적이었던 사건에 대해서도 감정이 촉발됩니다.\r\n  이것은 감정에도 해당된다.(Cioffi & Holloway, 1993)\r\n  \r\n  3)행동성향의 억제\r\n  행동성향이란 어떤것을 단지 생각만 해도 \r\n  특정 방식으로 행동하게끔 \r\n  일련의 신체적이고 심리적인 사건이 \r\n  작동되는 자동화된 행동을 말하는데요.\r\n  압박감이 있을때 그렇게 되지 않기를 \r\n  간절히 바라는 상황에서 특히 강하게 나타납니다.\r\n  \r\n  이런 행동성향은 난간에 서서 \r\n  바닥을 볼때 확인 해 볼 수 있는데,\r\n  난간아래를 볼때의 두려움은 \r\n  난간을 피해 반대쪽으로 움직이게 할 뿐만 아니라\r\n  난간 쪽으로도 움직이게 한다. \r\n  이 행동성향은 결과적으로 불안정함을 느끼게만듭니다.\r\n  \r\n  요점\r\n  우리가 고통스러운 생각이나 감정, \r\n  신체감각으로부터 도망가려 할 때, \r\n  그것은 더 중요해지고 더 강렬하거나 \r\n  빈번하게 나타나는 경향이 있습니다. \r\n  \r\n  도망간다는것은 두려운 생각을 \r\n  문자적으로 받아들인다는것을 의미하기 때문에, \r\n  그 생각은 더 믿을만한 것이 되어 그것에 더 얽혀들게 됩니다.\r\n  \r\n  결과적으로 '실재의고통' 은 증가한다. \r\n  또한 우리가 내적인 과정과 투쟁하는동안 삶은 유보됩니다.\r\n  결과적으로 '부재의 고통' 또한 증가합니다.\r\n  \r\n  당신은 언어를 배웠고 \r\n  말하고 추론하고 문제를 해결하는 법을 배웠습니다.\r\n  이 능력이 인간에게 괴로움을 주기도 한다는것을 인식하고 \r\n  언어적능력을 관리하는 방법도 배워야 합니다.\r\n  그렇지 않으면 인간개인은 지금처럼 \r\n  오히려 자신의 언어적 능력에 지배당할것입니다.`\r\n  },\r\n];\r\n","import SingleQuestion from './SingleQuestion';\r\nexport default SingleQuestion;\r\n","import React, { useState } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport {\r\n  CREATE_MYDIARY,\r\n  GET_QUESTIONSOFME,\r\n  GET_ALLDIARYQUESTION,\r\n} from 'Routes/Diary/DiaryQuries';\r\nimport { READ_MYDIARY } from 'Routes/Me/MeQueries';\r\nimport Survey from 'Components/Survey';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from 'Components/Loader';\r\n\r\nexport default () => {\r\n  const [diary, setDiary] = useState({\r\n    good: undefined,\r\n    content: '',\r\n  });\r\n  const [createMyDiary] = useMutation(CREATE_MYDIARY, {\r\n    refetchQueries: () => [{ query: READ_MYDIARY }],\r\n  });\r\n\r\n  const { data: allQuestionData, loading: allQuestionLoading } = useQuery(\r\n    GET_ALLDIARYQUESTION\r\n  );\r\n  const param = useParams();\r\n  const questionId = param.questionId;\r\n  console.log('questionId : ', questionId);\r\n  //const questionId = 'ck5g827hw00i00740yi5sl2d9';\r\n  if (allQuestionLoading) {\r\n    return <Loader />;\r\n  } else {\r\n    const singleQuestion = allQuestionData.getAllQuestion.find(\r\n      question => question.id === questionId\r\n    );\r\n    console.log('singleQuestion : ', singleQuestion);\r\n    return (\r\n      <Survey\r\n        diary={diary}\r\n        setDiary={setDiary}\r\n        createMyDiary={createMyDiary}\r\n        singleQuestion={singleQuestion}\r\n        isPushQuestion={true}\r\n      />\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  useHistory,\n} from 'react-router-dom';\nimport Auth from '../Routes/Auth';\nimport Feed from '../Routes/Feed';\nimport Alarm from '../Routes/Alarm';\nimport Story from '../Routes/Story';\nimport Etc from '../Routes/Etc';\nimport Me from '../Routes/Me';\nimport Search from '../Routes/Search';\nimport Diary from '../Routes/Diary';\nimport Theme from '../Routes/Theme';\nimport App from './App';\nimport ModelDescription from './ModelDescription';\nimport SingleQuestion from '../Routes/SingleQuestion';\n\nconst LoggedInRoutes = () => {\n  console.log('loggedin');\n  let history = useHistory();\n  console.log(history);\n  return (\n    <Switch>\n      <Route exact path={'/disorder/'} component={Feed} />\n      <Route path={'/search'} component={Search} />\n      <Route path={'/diary'} component={Diary} />\n      <Route path={'/alarm'} component={Alarm} />\n      <Route path={'/story'} component={Story} />\n      <Route path={'/me'} component={Me} />\n      <Route path={'/etc'} component={Etc} />\n      <Route path={'/theme'} component={Theme} />\n      <Route path={'/app'} component={App} />\n      <Route path={'/description'} component={ModelDescription} />\n      <Route path={'/:questionId'} component={SingleQuestion} />\n    </Switch>\n  );\n};\n\nconst LoggedOutRoutes = () => {\n  console.log('loggedOut');\n  return (\n    <Router>\n      <Route path={'/disorder/'} component={Auth} />\n      <Route path={'/theme'} component={Theme} />\n      <Route path={'/description'} component={ModelDescription} />\n      <Redirect from={'*'} to={'/disorder/'} />\n    </Router>\n  );\n};\n\nconst AppRouter = ({ isLoggedIn }) => {\n  console.log('router');\n  return (\n    <Router>{isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />}</Router>\n  );\n};\n\nAppRouter.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GlobalStyles from '../Styles/GlobalStyles';\nimport Theme from '../Styles/Theme';\nimport Router from './Router';\nimport Loader from './Loader';\nimport { READ_MYDATA } from '../sharedQueries';\nconst IS_LOGGEDIN = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nconst DefaultStyle = styled.div`\n  display: grid;\n  max-width: 935px;\n  font-family: 'KakaoL';\n  font-weight: 600;\n`;\nexport default () => {\n  console.log('app');\n  const { loading: myDataLoading, data: myData } = useQuery(READ_MYDATA);\n  const { loading: loginCheckLoading, data } = useQuery(IS_LOGGEDIN);\n\n  return (\n    <>\n      {loginCheckLoading && myDataLoading && <Loader />}\n      {!(loginCheckLoading && myDataLoading) && data && (\n        <ThemeProvider\n          theme={\n            myData && myData.readMyData && myData.readMyData.avatar\n              ? myData.readMyData.avatar.slice(0, 1) === '#' && data.isLoggedIn\n                ? { ...Theme, activeColor: myData.readMyData.avatar }\n                : Theme\n              : Theme\n          }>\n          <GlobalStyles />\n          <DefaultStyle>\n            <Router isLoggedIn={data.isLoggedIn} />\n          </DefaultStyle>\n          <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\n        </ThemeProvider>\n      )}\n    </>\n  );\n};\n","export const resolvers = {\n  Mutation: {\n    logUserIn: (_, { token }, { cache }) => {\n      localStorage.setItem('token', token);\n      cache.writeData({\n        data: {\n          isLoggedIn: true,\n        },\n      });\n      return null;\n    },\n    logUserOut: (_, __, { cache }) => {\n      localStorage.removeItem('token');\n      window.location = '/disorder/';\n      return null;\n    },\n  },\n};\n\n// export const logUserIn = {\n//   Mutation: {\n//     logUserIn: (_, { token }, { cache }) => {\n//       console.log('logUserIn');\n//       localStorage.setItem('token', token);\n//       cache.writeData({\n//         data: {\n//           isLoggedIn: true,\n//         },\n//       });\n//       return null;\n//     },\n//   },\n// };\n// export const logUserOut = {\n//   Mutation: {\n//     logUserOut: (_, __, { cache }) => {\n//       console.log('logUserOut');\n//       localStorage.removeItem('token');\n//       window.location = '/disorder/';\n//       return null;\n//     },\n//   },\n// };\n","import {\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n  split,\n} from '@apollo/client';\nimport { setContext } from 'apollo-link-context';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { resolvers } from './LocalState';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\n\nconst config = {\n  pd: {\n    uri: 'https://boongyee.com',\n    ws: 'wss://boongyee.com/socket',\n  },\n  dev: {\n    uri: 'http://localhost:4000',\n    ws: 'ws://localhost:4000/socket',\n  },\n  local: {\n    uri: 'http://192.168.0.79:4000',\n    ws: 'ws://192.168.0.79:4000/socket',\n  },\n};\nconst currentConfig = config.pd;\n\nconst httpLink = new createHttpLink({\n  uri: currentConfig.uri,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n  };\n});\n\nconst sbclient = new SubscriptionClient(currentConfig.ws, {\n  reconnect: true,\n});\nconst wsLink = new WebSocketLink(sbclient);\n\nlet cache = new InMemoryCache();\nconst loggedInCheck = cache.writeData({\n  data: {\n    isLoggedIn: Boolean(localStorage.getItem('token')) || false,\n  },\n});\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nconst client = new ApolloClient({\n  cache,\n  link,\n  resolvers: resolvers,\n  writeData: loggedInCheck,\n});\n\nexport default client;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nexport let swRegistration = null;\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  console.log('register');\n  // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  // The URL constructor is available in all browsers that support SW.\n  const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n  //console.log('publicUrl : ', publicUrl);\n  if (publicUrl.origin !== window.location.origin) {\n    // Our service worker won't work if PUBLIC_URL is on a different origin\n    // from what our page is served on. This might happen if a CDN is used to\n    // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n    return;\n  }\n\n  window.addEventListener('load', () => {\n    console.log('load');\n    // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n    const swUrl = `${process.env.PUBLIC_URL}/SW.js`;\n\n    if (isLocalhost) {\n      console.log('notLocalhost');\n      // This is running on localhost. Let's check if a service worker still exists or not.\n      checkValidServiceWorker(swUrl, config);\n\n      // Add some additional logging to localhost, pointing developers to the\n      // service worker/PWA documentation.\n      navigator.serviceWorker.ready.then(() => {\n        console.log(\n          'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n        );\n      });\n    } else {\n      // Is not localhost. Just register service worker\n      registerValidSW(swUrl, config);\n      console.log('notLocalhost');\n      // This is running on localhost. Let's check if a service worker still exists or not.\n      //checkValidServiceWorker(swUrl, config);\n\n      // Add some additional logging to localhost, pointing developers to the\n      // service worker/PWA documentation.\n      // navigator.serviceWorker.ready.then(() => {\n      //   console.log(\n      //     'This web app is being served cache-first by a service ' +\n      //       'worker. To learn more, visit https://bit.ly/CRA-PWA'\n      //   );\n      // });\n    }\n  });\n  //}\n}\n\nfunction registerValidSW(swUrl, config) {\n  console.log('registerValidSW');\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      swRegistration = registration;\n      console.log('swRegistration : ', swRegistration);\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  console.log('checkValidServiceWorker');\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      console.log(response);\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(e => {\n      console.log('error : ', e);\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n// function subscribeUser() {\n//   console.log('subscribeUser');\n//   const applicationServerKey = urlB64ToUint8Array(process.env.VAPID_PUBLIC_KEY);\n//   swRegistration.pushManager\n//     .subscribe({\n//       userVisibleOnly: true,\n//       applicationServerKey: applicationServerKey,\n//     })\n//     .then(function(subscription) {\n//       console.log('User is subscribed.');\n\n//       //updateSubscriptionOnServer(subscription);\n\n//       isSubscribed = true;\n//     })\n//     .catch(function(err) {\n//       console.log('Failed to subscribe the user: ', err);\n//     });\n// }\n\n// function unsubscribeUser() {\n//   console.log('unsubscribeUser');\n//   swRegistration.pushManager\n//     .getSubscription()\n//     .then(function(subscription) {\n//       if (subscription) {\n//         return subscription.unsubscribe();\n//       }\n//     })\n//     .catch(function(error) {\n//       console.log('Error unsubscribing', error);\n//     })\n//     .then(function() {\n//       //updateSubscriptionOnServer(null);\n\n//       console.log('User is unsubscribed.');\n//       isSubscribed = false;\n//     });\n// }\n\n// export const handleSubscribe = isAllowSubscribe => {\n//   if (isAllowSubscribe) {\n//     subscribeUser();\n//   } else {\n//     unsubscribeUser();\n//   }\n// };\n\n// navigator.serviceWorker\n//   .register(swUrl)\n//   .then(swReg => {\n//     swRegistration = swReg;\n//     console.log('SW Registered: ', swReg);\n//     swReg.pushManager.getSubscription().then(subscription => {\n//       if (subscription === null) {\n//         Notification.requestPermission().then(permission => {\n//           if (permission === 'granted') {\n//             swReg.pushManager\n//               .subscribe({\n//                 userVisibleOnly: true,\n//                 applicationServerKey: urlB64ToUint8Array(\n//                   'BA0DVk6-xz4oYSc9FgzS4p-u-EZnWr_JEA4dbeQEb7ObgBdz3HG1c5Ix7cyIu-FnNuYt-GcsK_C9cFTz25VMpTw'\n//                 ),\n//               })\n//               .then(pushSubscriptionObject => {\n//                 console.log(pushSubscriptionObject);\n//               });\n//           }\n//         });\n//       } else {\n//         console.log(subscription);\n//       }\n//     });\n//   })\n//   .catch(error => console.log(\"Can't register SW: \", error));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport client from './Apollo/Client';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport './assets/font/font.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/19.281b126a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.99b74d8c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/MessengerRGB.755d962f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Search.0ebe4a01.svg\";","module.exports = __webpack_public_path__ + \"static/media/life.46f76c07.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.4c593b61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.55712253.jpg\";","module.exports = __webpack_public_path__ + \"static/media/24.8e184e3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/12.967df838.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.ad2ad4ae.jpg\";"],"sourceRoot":""}