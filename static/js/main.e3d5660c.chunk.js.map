{"version":3,"sources":["assets/image/MessengerRGB.svg","assets/image/Search.svg","assets/image/life.gif","Styles/GlobalStyles.js","Styles/Theme.js","Components/Input.js","Components/OutLineButton.js","Components/MainDescription.js","Components/Brand.js","Routes/Auth/AuthPresenter.js","Hooks/useInput.js","Routes/Auth/AuthQueries.js","Routes/Auth/index.js","Routes/Auth/AuthContainer.js","Components/Icons.js","Components/Loader.js","Components/FatText.js","Components/Avatar.js","Routes/Post/PostPresenter.js","Routes/Post/PostQueries.js","Routes/Post/index.js","Routes/Post/PostContainer.js","Components/Tab.js","fragments.js","Components/Write/WriteQuries.js","Components/Write/WritePresenter.js","Components/Write/index.js","Components/Write/WriteContainer.js","Components/Header.js","sharedQueries.js","Routes/Feed.js","Components/Life.js","Routes/Alarm.js","Routes/Story/StoryPresenter.js","Routes/Story/StoryQuries.js","Routes/Story/StoryContainer.js","Routes/Story/index.js","Routes/Etc.js","Routes/Me/MePresenter.js","Routes/Me/MeQueries.js","Routes/Me/index.js","Routes/Me/MeConainer.js","Components/FollowButton/FollowButtonQuries.js","Components/FollowButton/FollowButtonPresenter.js","Components/FollowButton/index.js","Components/FollowButton/FollowButtonContainer.js","Components/UserCard.js","Components/SquarePost.js","Routes/Search/SrearchPresenter.js","Routes/Search/SrearchQueries.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Progress.js","Components/Survey.js","Components/SurveyDescription.js","Components/Text.js","Components/SelectQuestions.js","Routes/Diary/DiaryPresenter.js","Routes/Diary/DiaryQuries.js","Routes/Diary/index.js","Routes/Diary/DiaryContainer.js","Styles/CustomTheme.js","Routes/Story/StoryCSS.js","Routes/Theme/ThemeContext.js","Components/ThemeExample.js","Routes/Theme/ThemeCSS.js","Routes/Theme/ThemePresenter.js","Routes/Theme/ThemeQueries.js","Routes/Theme/ThemeContainer.js","Routes/Theme/index.js","Components/Router.js","Components/App.js","Apollo/LocalState.js","Apollo/Client.js","index.js","assets/image/3.jpeg"],"names":["module","exports","createGlobalStyle","reset","props","theme","bgColor","fontColor","blueColor","whiteColor","darkGreyColor","lightGreyColor","redColor","darkBlueColor","boxBorder","borderRadius","borderColor","whiteBox","primaryColor","primaryColorInverted","activeColor","dimgreyColor","INDIGO","DEEPORANGE","AMBER","PURPLE","BLUE","TEAL","WORMPINK","FACEBLUE","notMyChatGrey","myChatGrey","Container","styled","input","Input","placeholder","required","value","onChange","onKeyPress","type","className","button","Wrapper","div","OutLineButton","text","onClick","TextWrapper","Pre","pre","Brand","MainImageWraper","MainImage","img","FormWrapper","Box","StateChanger","Link","span","Form","action","userName","setAction","onSubmit","secret","src","mainImage","defaultValue","useState","setValue","e","target","LOG_IN","gql","CREATE_ACCOUNT","CONFIRM_SECRET","LOCAL_LOG_IN","AuthContainer","console","log","useInput","email","useMutation","variables","requestSecretMutation","createAccountMutation","confirmSecretMutation","localLogInMutation","AuthPresenter","a","async","preventDefault","data","requestSecret","toast","success","error","setTimeout","token","createAccount","undefined","message","confirmSecret","Error","HeartEmpty","xmlns","width","height","fill","viewBox","d","HeartFull","Logo","fillRule","clipRule","CommentFull","BackArrow","color","transform","AddUser","aria-hidden","data-icon","focusable","Survey","Restart","Dance","Check","Animation","keyframes","Loader","size","Text","FatText","Avatar","avatar","top","left","right","bottom","outSize","inSize","imgSize","style","process","alt","Post","ThumbnailWraper","Thumbnail","Contents","CoverLetter","UserName","Title","Info","DateWrapper","LikeCountWrapper","LikeWrapper","Dot","Content","Caption","Comments","Comment","Textarea","TextareaAutosize","CommentInfo","AvatarWrapper","files","user","title","createdAt","caption","isLiked","likeCount","newComment","toggleLike","currentItem","comments","selfComments","key","id","url","moment","format","length","reverse","map","comment","TOGGLE_LIKE","ADD_COMMENT","PostContainer","isLikedS","setIsLiked","likeCountS","setLikeCount","setCurrentItem","setSelfComments","postId","toggleLikeMutation","addCommentMutation","useEffect","totalFiles","PostPresenter","event","which","addComment","Tab","NavLink","React","memo","to","activeClassName","replace","POST_FRAGMENT","FEED_QUERY","UPLOAD","form","SearchInput","SurveyWrapper","label","UploadInput","upload","onWriteSubmit","think","multiple","WriteContainer","fileUrl","setFileUrl","refetchQueries","query","postUploadMutation","WritePresenter","file","formData","FormData","append","axios","post","headers","path","info","Header","LogoWrapper","Empty","Search","Massenger","SMWrapper","SearchLogo","MassengerLogo","READ_MYDATA","PostList","history","useHistory","useQuery","readMyData","myDataLoading","loading","push","Write","seeFeed","Life","life","Alarm","TitleText","ChatHandlerWrapper","BackArrowWrapper","RestartWrapper","ScrollAble","ChatWrapper","MyChatText","NotMyChatText","MyBox","NotMyBoxWrapper","NotMyBox","AvatarText","DateWapper","DateText","DateTail","InputWrapper","Emoji","SvgWrapper","StyledInput","Send","SendText","chatData","description","setDescription","mutation","myData","chatting","Date","chat","userid","background","writer","getChatting","newChat","CREATE_MYCHAT","unsubscribe","StoryContainer","chatLoading","subscribeToMore","document","updateQuery","prev","subscriptionData","StoryPresenter","Row","client","useApolloClient","writeData","isLoggedIn","localStorage","clear","TimelineWrapper","Timeline","TimelineTail","TimlineCircle","TimelineItem","TimelineItemsWrapper","Type","Good","Score","myDiaries","diariesArr","diary","question","good","content","score","READ_MYDIARY","MeContainer","myDiaryData","myDiaryLoading","MePresenter","readMyDiary","FOLLOW","UNFOLLOW","AddUserWrapper","isFollowing","FollowButtonContainer","isFollowingS","setIsFollowing","followMutation","unfollowMutation","FollowButtonPresenter","Card","LinkInCard","FollowWrapper","UserCard","isSelf","FollowButton","Overlay","bg","Number","NumberText","SquarePost","commentCount","SearchInputWrapper","ContentsWrapper","UserSection","PostSection","WhiteBox","StartSection","INDEGO","EmptySection","SearchPresenter","searchTerm","search","onSearchSubmit","goBack","searchUser","searchPost","SEARCH","SearchContainer","withRouter","term","location","split","skip","Progress","Item","setDiary","element","Question","Description","Answer","OutLineButtonWrapper","TinyText","SurveyHandlerWrapper","Counter","Evaluation","myQuestion","setSurveyCount","surveyCount","createDiary","totalSurvey","currentSurveyCount","currentQuestion","questionId","SelectQuestionWrapper","SelectSection","ElementBox","ElementBoxText","children","StartSectionDescription","EndSection","allQuestion","updateQuestion","filter","behavior","emotion","border","updateMyQuestion","myQuestionRefetch","SurveyDescription","GET_ALLDIARYQUESTION","GET_QUESTIONSOFME","UPDATE_MYQUESTION","CREATE_MYDIARY","DiaryContainer","myQuestionData","myQuestionLoading","refetch","allQuestionData","allQuestionLoading","createMyDiary","DiaryPresenter","catch","surveyLength","getQuestionsOfMe","getAllQuestion","name","ThemeContext","createContext","ThemeAction","reducer","state","createMyColor","setColor","DecriptionBox","ThemeHandlerWrapper","ArrowWrapper","TabWrapper","useContext","dispatch","customColor","MyName","reload","ThemeWrapper","ThemeItem","CheckWrapper","CustomTheme","ThemeExample","CREATE_MYCOLOR","themeInitialState","ThemeContainer","useReducer","createMyColorLoading","useMemo","Provider","ThemePresenter","LoggedInRoutes","component","Feed","Diary","Story","Me","Etc","Auth","Theme","App","from","LoggedOutRoutes","AppRouter","IS_LOGGEDIN","DefaultStyle","loginCheckLoading","slice","GlobalStyles","Router","position","POSITION","BOTTOM_LEFT","resolvers","Mutation","logUserIn","_","cache","setItem","logUserOut","__","removeItem","window","config","uri","ws","httpLink","createHttpLink","authLink","setContext","Authorization","getItem","sbclient","SubscriptionClient","reconnect","wsLink","WebSocketLink","InMemoryCache","loggedInCheck","Boolean","link","getMainDefinition","kind","operation","concat","ApolloClient","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e3d5660c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MessengerRGB.a918db78.svg\";","module.exports = __webpack_public_path__ + \"static/media/Search.b5cb4045.svg\";","module.exports = __webpack_public_path__ + \"static/media/life.46f76c07.gif\";","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\nexport default createGlobalStyle`\n    ${reset};\n    * {\n        font-family:\"KakaoL\";\n        box-sizing:border-box;\n        margin:0;\n        padding:0;\n    }\n    body {\n        margin:0;\n        background-color:${props => props.theme.bgColor};\n        color:${props => props.theme.fontColor};\n        font-size:14px;\n    }\n    a {\n        color:${props => props.theme.blueColor};\n        text-decoration:none;\n    }\n    input:focus{\n        outline:none;\n    }\n\n`;\n","export default {\n  bgColor: '#AEB4BB',\n  whiteColor: '#FFFFFF',\n  // blackColor: '#262626',\n  fontColor: '#4B4C4F',\n  darkGreyColor: '#999',\n  lightGreyColor: '#c7c7c7',\n  redColor: '#ED4956',\n  blueColor: '#3B5998',\n  darkBlueColor: '#003569',\n  boxBorder: '1px solid #e6e6e6',\n  borderRadius: '4px',\n  borderColor: '#dadde1',\n  whiteBox: `border:1px solid #dadde1;\n              border-radius:15px;\n              background-color:white;\n              width:95%;\n              height:95%;\n            `,\n  primaryColor: '#184fa2',\n  //primaryColor: '#3B5998',\n  // primaryColor: '#65676B',\n  primaryColorInverted: '#ff9d76',\n  activeColor: '#3B5998', //진한파랑\n  dimgreyColor: '#636469',\n\n  //search 글쓰기\n  //lightGreyColor: '#E5E6EB',\n\n  //사용자정의테마색\n  INDIGO: '#3f51b5',\n  DEEPORANGE: '#ff5722',\n  AMBER: '#ffc107',\n  PURPLE: '#9c27b0',\n  BLUE: '#2196f3',\n  TEAL: '#009688',\n  WORMPINK: '#ffc9a2',\n  FACEBLUE: '#3B5998',\n\n  //chat\n  notMyChatGrey: '#A6A6A6',\n  myChatGrey: '#F5F5F5',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.input`\n  border: 0;\n  border: ${props => props.theme.boxBorder};\n  border-radius: ${props => props.theme.borderRadius};\n  background-color: ${props => props.theme.whiteColor};\n  height: 5vh;\n  font-size: 12px;\n  padding: 0px 15px;\n`;\n\nconst Input = ({\n  placeholder,\n  required = true,\n  value,\n  onChange,\n  onKeyPress,\n  type = 'text',\n  className,\n}) => (\n  <Container\n    className={className}\n    placeholder={placeholder}\n    required={required}\n    value={value}\n    onKeyPress={onKeyPress}\n    onChange={onChange}\n    type={type}\n  />\n);\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.button`\n  width: 100%;\n  height: 100%;\n  border: 0;\n  border-radius: ${props => props.theme.borderRadius};\n  color: ${props => props.theme.whiteColor};\n  font-weight: 600;\n  background-color: transparent;\n  border: 1px solid ${props => props.theme.whiteColor};\n  text-align: center;\n  padding: 7px 0px;\n  font-size: 1rem;\n  font-weight: 500;\n`;\nconst Wrapper = styled.div`\n  width: 40vw;\n  height: 5vh;\n`;\nconst OutLineButton = ({ text, onClick }) => (\n  <Wrapper>\n    <Container onClick={onClick}>{text}</Container>\n  </Wrapper>\n);\n\nOutLineButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default OutLineButton;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TextWrapper = styled.div`\r\n  display: grid;\r\n  min-width: 380px;\r\n  font-size: 1rem;\r\n  line-height: 1rem;\r\n  align-self: end;\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n  display: grid;\r\n  justify-self: center;\r\n  font-family: 'NanumB';\r\n`;\r\n\r\nexport default () => (\r\n  <TextWrapper>\r\n    {/* prettier-ignore */}\r\n    <Pre>\r\n{`\r\n인간의 괴로움은 보편적이고\r\n\r\n마음의 평화를 만들어내는법을 \r\n아는사람은 드뭅니다. \r\n\r\n왜그런지는 수수께끼이며 이 앱은 \r\n그 수수께끼에 대한것입니다.\r\n`}\r\n    </Pre>\r\n  </TextWrapper>\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n  display: grid;\r\n  cursor: pointer;\r\n  font-family: 'Brand';\r\n  font-size: 8vw;\r\n  color: dimgray;\r\n  font-weight: 800;\r\n  text-align: end;\r\n`;\r\n\r\nexport default () => <Brand>DISORDER</Brand>;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport Input from '../../Components/Input';\nimport OutLineButton from '../../Components/OutLineButton';\nimport Description from '../../Components/MainDescription';\nimport Brand from '../../Components/Brand';\nimport mainImage from '../../assets/image/3.jpeg';\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-template-rows: 10vh 25vh 30vh 40vh;\n  background: white;\n`;\n\nconst MainImageWraper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: block;\n  max-width: 500px;\n`;\n\nconst MainImage = styled.img`\n  background: #dee2e6;\n  -o-object-fit: cover;\n  object-fit: cover;\n  display: block;\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  bottom: 5vh;\n  width: 100%;\n  height: auto;\n`;\nconst FormWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Box = styled.div`\n  ${props => props.theme.whiteBox}\n  border-radius:0px;\n  width: 100%;\n  max-width: 350px;\n`;\n\nconst StateChanger = styled(Box)`\n  text-align: center;\n  padding: 20px 0px;\n`;\n\nconst Link = styled.span`\n  color: ${props => props.theme.activeColor};\n  cursor: pointer;\n`;\n\nconst Form = styled(Box)`\n  padding: 40px;\n  padding-bottom: 30px;\n  margin-bottom: 15px;\n  form {\n    width: 100%;\n    input {\n      width: 100%;\n      &:not(:last-child) {\n        margin-bottom: 7px;\n      }\n    }\n    button {\n      margin-top: 10px;\n    }\n  }\n`;\n\nexport default ({ action, userName, setAction, onSubmit, secret }) => {\n  return (\n    <Wrapper>\n      <Brand />\n      <MainImageWraper>\n        <MainImage src={mainImage} />\n      </MainImageWraper>\n      <Description />\n      <FormWrapper>\n        <Form>\n          {action === 'logIn' && (\n            <form onSubmit={onSubmit}>\n              <Input placeholder={'닉네임'} {...userName} />\n              <OutLineButton text={'로그인'} />\n            </form>\n          )}\n          {action === 'signUp' && (\n            <form onSubmit={onSubmit}>\n              <Input placeholder={'닉네임'} {...userName} />\n              <OutLineButton text={'입장하기'} />\n            </form>\n          )}\n          {action === 'confirm' && (\n            <form onSubmit={onSubmit}>\n              <Input placeholder=\"키를 입력해주세요\" required {...secret} />\n              <OutLineButton text={'확인'} />\n            </form>\n          )}\n        </Form>\n\n        {action !== 'confirm' && (\n          <StateChanger>\n            {action === 'logIn' ? (\n              <>\n                아직 회원이 아니세요?{' '}\n                <Link onClick={() => setAction('signUp')}>회원가입</Link>\n              </>\n            ) : (\n              <>\n                계정이 있으세요?{' '}\n                <Link onClick={() => setAction('logIn')}>로그인</Link>\n              </>\n            )}\n          </StateChanger>\n        )}\n      </FormWrapper>\n    </Wrapper>\n  );\n};\n","import { useState } from 'react';\n\nexport default defaultValue => {\n  const [value, setValue] = useState(defaultValue);\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e;\n    setValue(value);\n  };\n\n  return { value, onChange, setValue };\n};\n","import { gql } from 'apollo-boost';\n\nexport const LOG_IN = gql`\n  mutation requestSecret($email: String!) {\n    requestSecret(email: $email)\n  }\n`;\n\nexport const CREATE_ACCOUNT = gql`\n  mutation createAccount($userName: String!) {\n    createAccount(userName: $userName)\n  }\n`;\n\nexport const CONFIRM_SECRET = gql`\n  mutation confirmSecret($secret: String!, $email: String!) {\n    confirmSecret(secret: $secret, email: $email)\n  }\n`;\n\nexport const LOCAL_LOG_IN = gql`\n  mutation logUserIn($token: String!) {\n    logUserIn(token: $token) @client\n  }\n`;\n\nexport const GET_TOKEN = gql`\n  mutation getToken($userName: String!) {\n    getToken(userName: $userName)\n  }\n`;\n","import AuthContainer from './AuthContainer';\nexport default AuthContainer;\n","import React, { useState } from 'react';\nimport AuthPresenter from './AuthPresenter';\nimport useInput from '../../Hooks/useInput';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n  LOG_IN,\n  CREATE_ACCOUNT,\n  CONFIRM_SECRET,\n  LOCAL_LOG_IN,\n} from './AuthQueries';\nimport { toast } from 'react-toastify';\n\nexport default () => {\n  console.log('auth');\n  const [action, setAction] = useState('signUp');\n  const userName = useInput('');\n  const secret = useInput('');\n  const email = useInput('');\n  const [requestSecretMutation] = useMutation(LOG_IN, {\n    variables: { email: email.value },\n  });\n  const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\n    variables: {\n      userName: userName.value,\n    },\n  });\n  const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\n    variables: {\n      email: email.value,\n      secret: secret.value,\n    },\n  });\n  const [localLogInMutation] = useMutation(LOCAL_LOG_IN);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (action === 'logIn') {\n      if (email.value !== '') {\n        try {\n          const {\n            data: { requestSecret },\n          } = await requestSecretMutation();\n          if (!requestSecret) {\n            toast.error('아직 계정이 없습니다., 하나만들어야해요.');\n            setTimeout(() => setAction('signUp'), 3000);\n          } else {\n            toast.success('이메일에 전송된 키를 확인하세요');\n            setAction('confirm');\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        toast.error('에러');\n      }\n    } else if (action === 'signUp') {\n      if (userName.value !== '') {\n        try {\n          const {\n            data: { createAccount: token },\n          } = await createAccountMutation();\n\n          toast.success('계정이 만들어졌어요!');\n          if (token !== '' && token !== undefined) {\n            setTimeout(() => {\n              localLogInMutation({ variables: { token } });\n            }, 2000);\n            setAction('theme');\n          }\n        } catch (e) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error('다 작성해주셔야합니다');\n      }\n    } else if (action === 'confirm') {\n      if (secret.value !== '') {\n        try {\n          const {\n            data: { confirmSecret: token },\n          } = await confirmSecretMutation();\n          if (token !== '' && token !== undefined) {\n            localLogInMutation({ variables: { token } });\n          } else {\n            throw Error();\n          }\n        } catch {\n          toast.error('인증키가 올바르지 않습니다 다시확인해주세요.');\n        }\n      }\n    }\n  };\n\n  return (\n    <AuthPresenter\n      setAction={setAction}\n      action={action}\n      userName={userName}\n      onSubmit={onSubmit}\n    />\n  );\n};\n","import React from 'react';\r\n\r\nexport const Compass = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 5.999l-5.621 2.986c-.899-.104-1.806.191-2.474.859-.662.663-.95 1.561-.862 2.428l-3.043 5.728 5.724-3.042c.884.089 1.772-.205 2.432-.865.634-.634.969-1.524.859-2.473l2.985-5.621zm-5.97 7.22c-.689 0-1.25-.559-1.25-1.249-.001-.691.559-1.251 1.25-1.25.69 0 1.25.56 1.25 1.25-.001.689-.56 1.249-1.25 1.249z\" />\r\n  </svg>\r\n);\r\n\r\nexport const HeartEmpty = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    fill=\"red\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 9.229c.234-1.12 1.547-6.229 5.382-6.229 2.22 0 4.618 1.551 4.618 5.003 0 3.907-3.627 8.47-10 12.629-6.373-4.159-10-8.722-10-12.629 0-3.484 2.369-5.005 4.577-5.005 3.923 0 5.145 5.126 5.423 6.231zm-12-1.226c0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-7.962-9.648-9.028-12-3.737-2.338-5.262-12-4.27-12 3.737z\" />\r\n  </svg>\r\n);\r\n\r\nexport const HeartFull = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    fill=\"red\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 4.435c-1.989-5.399-12-4.597-12 3.568 0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-8.118-10-8.999-12-3.568z\" />\r\n  </svg>\r\n);\r\n\r\nexport const User = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 2c2.757 0 5 2.243 5 5.001 0 2.756-2.243 5-5 5s-5-2.244-5-5c0-2.758 2.243-5.001 5-5.001zm0-2c-3.866 0-7 3.134-7 7.001 0 3.865 3.134 7 7 7s7-3.135 7-7c0-3.867-3.134-7.001-7-7.001zm6.369 13.353c-.497.498-1.057.931-1.658 1.302 2.872 1.874 4.378 5.083 4.972 7.346h-19.387c.572-2.29 2.058-5.503 4.973-7.358-.603-.374-1.162-.811-1.658-1.312-4.258 3.072-5.611 8.506-5.611 10.669h24c0-2.142-1.44-7.557-5.631-10.647z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Comment = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 3c5.514 0 10 3.476 10 7.747 0 4.272-4.48 7.748-9.986 7.748-.62 0-1.092-.046-1.759-.097-1 .776-1.774 1.403-3.485 1.962.26-1.383-.113-2.259-.514-3.259-2.383-1.505-4.256-3.411-4.256-6.354 0-4.271 4.486-7.747 10-7.747zm0-2c-6.627 0-12 4.363-12 9.747 0 3.13 1.816 5.916 4.641 7.699.867 2.167-1.084 4.008-3.143 4.502 3.085.266 6.776-.481 9.374-2.497 7.08.54 13.128-3.988 13.128-9.704 0-5.384-5.373-9.747-12-9.747z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Logo = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fillRule=\"evenodd\"\r\n    clipRule=\"evenodd\">\r\n    <path d=\"M19.205 17.646c-.865.18-1.771.07-2.573-.323-.953-.466-1.682-1.291-2.026-2.295-.791-2.305-1.405-5.566-1.975-8.837l5.675-1.947c1.525 2.958 3.087 5.915 3.867 8.188.344 1.003.276 2.102-.19 3.055-.392.802-1.039 1.446-1.832 1.834l1.215 3.542c.29.814 1.322.926 2.392.809l.242.705-4.729 1.623-.261-.759c.903-.478 1.688-1.214 1.41-2.053l-1.215-3.542zm-15.356-.325c-.793-.388-1.44-1.032-1.832-1.834-.466-.953-.534-2.052-.19-3.055.78-2.273 2.342-5.23 3.867-8.188l5.675 1.947c-.57 3.271-1.184 6.532-1.975 8.837-.344 1.004-1.073 1.829-2.026 2.295-.802.393-1.708.503-2.573.323l-1.205 3.512c-.278.839.507 1.575 1.41 2.053l-.271.789-4.729-1.623.252-.735c1.07.118 2.102.005 2.392-.808l1.205-3.513zm14.901-2.821c.414 0 .75.336.75.75s-.336.75-.75.75-.75-.336-.75-.75.336-.75.75-.75zm-15-1c.414 0 .75.336.75.75s-.336.75-.75.75-.75-.336-.75-.75.336-.75.75-.75zm2.5-1.5c.414 0 .75.336.75.75s-.336.75-.75.75-.75-.336-.75-.75.336-.75.75-.75zm11.75-.107c.414 0 .75.336.75.75s-.336.75-.75.75-.75-.336-.75-.75.336-.75.75-.75zm1.939-1.893c-.663-1.525-1.441-3.012-2.178-4.512l-3.917 1.344c.214 1.059.41 2.121.636 3.168h5.459zm-10.419 0c.226-1.047.422-2.109.636-3.168l-3.917-1.344c-.737 1.5-1.515 2.987-2.178 4.512h5.459zm4.915-6.015l1.642-2.79c.141-.238.061-.545-.177-.685-.238-.139-.544-.062-.684.177l-1.643 2.79c-.14.238-.06.545.177.685.08.047.167.069.254.069.171 0 .338-.088.431-.246zm-4.552.246c-.171 0-.337-.088-.431-.246l-1.643-2.79c-.14-.238-.061-.545.177-.685s.544-.061.685.177l1.643 2.79c.14.238.061.545-.177.685-.08.047-.167.069-.254.069zm2.621-.708v-3.023c0-.277-.224-.5-.5-.5s-.5.223-.5.5v3.023c0 .276.224.5.5.5s.5-.224.5-.5z\" />\r\n  </svg>\r\n);\r\n\r\nexport const CommentFull = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 1c-6.627 0-12 4.364-12 9.749 0 3.131 1.817 5.917 4.64 7.7.868 2.167-1.083 4.008-3.142 4.503 2.271.195 6.311-.121 9.374-2.498 7.095.538 13.128-3.997 13.128-9.705 0-5.385-5.373-9.749-12-9.749z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Woman = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    x=\"-24px\"\r\n    y=\"10px\"\r\n    viewBox=\"0 0 26 24\">\r\n    <path d=\"M17.5 12.5c0 .828-.56 1.5-1.25 1.5s-1.25-.672-1.25-1.5.56-1.5 1.25-1.5 1.25.672 1.25 1.5zm-7.75-1.5c-.69 0-1.25.672-1.25 1.5s.56 1.5 1.25 1.5 1.25-.672 1.25-1.5-.56-1.5-1.25-1.5zm3.25 8.354c2.235 0 3-2.354 3-2.354h-6s.847 2.354 3 2.354zm13 3.639c-2.653 1.714-5.418 1.254-6.842-1.488-1.672 1.505-3.706 2.487-6.158 2.487-2.53 0-4.517-.91-6.184-2.445-1.431 2.702-4.178 3.15-6.816 1.446 4.375-1.75-2.729-11.813 4.104-19.375 2.282-2.525 5.472-3.618 8.896-3.618s6.614 1.093 8.896 3.618c6.833 7.562-.271 17.625 4.104 19.375zm-5.668-6.111c.122-.202.312-.354.535-.43 2.447-.828 2.554-4.361 1.554-5.012-.235-.152-.531-.115-.672-.053-.664.295-1.406-.194-1.406-.914 0-.471-.034-1.001-.096-1.473h-10.101c-.813-1.021-.771-2.945-.396-4.57-.903.982-1.693 3.249-1.875 4.57h-2.121c-.062.472-.096 1.002-.096 1.473 0 .72-.742 1.209-1.406.914-.141-.062-.436-.1-.672.053-1 .651-.893 4.184 1.554 5.012.224.076.413.228.535.43 1.709 2.829 4.015 5.111 7.332 5.111 3.316 0 5.623-2.283 7.331-5.111z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Man = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"26\"\r\n    viewBox=\"0 0 24 26\">\r\n    <path d=\"M16.5 14.5c0 .828-.56 1.5-1.25 1.5s-1.25-.672-1.25-1.5.56-1.5 1.25-1.5 1.25.672 1.25 1.5zm-7.75-1.5c-.69 0-1.25.672-1.25 1.5s.56 1.5 1.25 1.5 1.25-.672 1.25-1.5-.56-1.5-1.25-1.5zm3.25 8.354c2.235 0 3-2.354 3-2.354h-6s.847 2.354 3 2.354zm12-6.041c0 1.765-.985 3.991-3.138 4.906-2.025 3.233-4.824 5.781-8.862 5.781-3.826 0-6.837-2.548-8.862-5.781-2.153-.916-3.138-3.142-3.138-4.906 0-2.053.862-3.8 2.71-3.964.852-9.099 8.57-8.408 9.837-10.849.323.559.477 1.571-.02 2.286.873-.045 2.344-1.304 2.755-2.552.754.366 1.033 1.577.656 2.354.542-.103 2.187-1.15 3.062-2.588.688 1.563.026 3.563-.708 4.771l-.012.001c1.796 1.707 2.781 4.129 3.01 6.576 1.859.165 2.71 1.917 2.71 3.965zm-2.58-1.866c-.235-.152-.531-.115-.672-.053-.56.25-1.214-.062-1.372-.66l-.001.016c-.333-2.604-1.125-4.854-2.611-5.565-6.427 7.009-10.82-.914-11.94 3.529-.101.582-.166 1.172-.166 1.766 0 .719-.743 1.209-1.406.914-.14-.062-.437-.1-.672.053-1 .651-.894 4.184 1.554 5.012.224.076.413.228.535.43 2.447 4.053 5.225 5.111 7.331 5.111 3.288 0 5.615-2.269 7.332-5.111.122-.202.312-.354.535-.43 2.447-.828 2.553-4.361 1.553-5.012z\" />\r\n  </svg>\r\n);\r\n\r\nexport const BackArrow = color => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1rem\"\r\n    height=\"1rem\"\r\n    viewBox=\"0 0 24 24\"\r\n    transform=\"rotate(180)\"\r\n    fill=\"white\">\r\n    <path d=\"M13.025 1l-2.847 2.828 6.176 6.176h-16.354v3.992h16.354l-6.176 6.176 2.847 2.828 10.975-11z\" />\r\n  </svg>\r\n);\r\n\r\nexport const AddUser = () => (\r\n  <svg\r\n    aria-hidden=\"true\"\r\n    data-icon=\"user-add\"\r\n    fill=\"#636469\"\r\n    focusable=\"false\"\r\n    height=\"2rem\"\r\n    viewBox=\"64 64 896 896\"\r\n    width=\"2rem\">\r\n    <path d=\"M678.3 642.4c24.2-13 51.9-20.4 81.4-20.4h.1c3 0 4.4-3.6 2.2-5.6a371.67 371.67 0 0 0-103.7-65.8c-.4-.2-.8-.3-1.2-.5C719.2 505 759.6 431.7 759.6 349c0-137-110.8-248-247.5-248S264.7 212 264.7 349c0 82.7 40.4 156 102.6 201.1-.4.2-.8.3-1.2.5-44.7 18.9-84.8 46-119.3 80.6a373.42 373.42 0 0 0-80.4 119.5A373.6 373.6 0 0 0 137 888.8a8 8 0 0 0 8 8.2h59.9c4.3 0 7.9-3.5 8-7.8 2-77.2 32.9-149.5 87.6-204.3C357 628.2 432.2 597 512.2 597c56.7 0 111.1 15.7 158 45.1a8.1 8.1 0 0 0 8.1.3zM512.2 521c-45.8 0-88.9-17.9-121.4-50.4A171.2 171.2 0 0 1 340.5 349c0-45.9 17.9-89.1 50.3-121.6S466.3 177 512.2 177s88.9 17.9 121.4 50.4A171.2 171.2 0 0 1 683.9 349c0 45.9-17.9 89.1-50.3 121.6C601.1 503.1 558 521 512.2 521zM880 759h-84v-84c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v84h-84c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h84v84c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-84h84c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Survey = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1.5rem\"\r\n    height=\"1.5rem\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"#636469\">\r\n    <path d=\"M13 17h4v1h-4v-1zm0-1h4v-1h-4v1zm9-14v22h-20v-22h3c1.23 0 2.181-1.084 3-2h8c.82.916 1.771 2 3 2h3zm-11 1c0 .552.448 1 1 1 .553 0 1-.448 1-1s-.447-1-1-1c-.552 0-1 .448-1 1zm9 1h-4l-2 2h-3.897l-2.103-2h-4v18h16v-18zm-7 9h4v-1h-4v1zm0-2h4v-1h-4v1zm-6.5.077l.386-.355c.449.218.735.383 1.241.745.952-1.081 1.58-1.627 2.748-2.355l.125.288c-.963.841-1.669 1.777-2.686 3.6-.626-.738-1.044-1.208-1.814-1.923zm.098 5l.386-.355c.449.218.735.383 1.241.745.952-1.081 1.58-1.627 2.748-2.355l.125.289c-.963.841-1.669 1.777-2.686 3.6-.627-.739-1.045-1.209-1.814-1.924z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Restart = color => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"1.4rem\"\r\n    height=\"1.4rem\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"white\">\r\n    <path d=\"M13.5 2c-5.629 0-10.212 4.436-10.475 10h-3.025l4.537 5.917 4.463-5.917h-2.975c.26-3.902 3.508-7 7.475-7 4.136 0 7.5 3.364 7.5 7.5s-3.364 7.5-7.5 7.5c-2.381 0-4.502-1.119-5.876-2.854l-1.847 2.449c1.919 2.088 4.664 3.405 7.723 3.405 5.798 0 10.5-4.702 10.5-10.5s-4.702-10.5-10.5-10.5z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Dance = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"white\">\r\n    <path\r\n      height=\"48\"\r\n      width=\"48\"\r\n      d=\"M18.028 24h-.018c-.268 0-.49-.213-.499-.483-.05-1.462.19-2.847 2.265-3.08.795-.089.858-.367.996-.977.229-1.008.607-1.922 2.701-2.032.285-.02.512.197.526.473.014.276-.197.512-.473.526-1.512.079-1.618.547-1.778 1.254-.152.667-.359 1.581-1.861 1.751-1.016.113-1.432.423-1.377 2.051.01.276-.207.507-.482.517zm-8.342-18.714c.241.213.53.366.842.444l3.566.896c.3.076.617.051.903-.07 1.082-.461 3.862-1.684 5.062-2.155.76-.299 1.268.63.655 1.097-1.39 1.062-5.714 4.086-5.714 4.086l-.862 3.648s1.785 1.86 2.544 2.7c.423.469.696.919.421 1.595-.481 1.181-1.457 3.477-1.908 4.547-.255.605-1.164.453-1.015-.322.217-1.128.781-4.016.781-4.016l-3.558-1.62s-.253 5.953-.327 7.296c-.019.341-.253.589-.582.588-.249-.001-.508-.173-.612-.596-.534-2.178-2.142-8.99-2.142-8.99-.209-.837-.329-1.53-.053-2.564l.915-3.85s-2.726-3.984-3.709-5.476c-.402-.611.356-1.18.808-.78l3.985 3.542zm-7.178 8.489l-.853.511 2.708 4.524c-1.788.306-2.917 1.904-2.048 3.356.537.897 1.753 1.106 2.622.586 1.034-.619 1.774-1.952.979-3.284l-3.408-5.693zm17.721-5.193l.904 1.669 1.867.344-1.308 1.376.249 1.882-1.712-.819-1.713.819.25-1.882-1.309-1.376 1.867-.344.905-1.669zm-17.298-2.935l-2.934 2.935 2.934 2.935 2.935-2.935-2.935-2.935zm9.055-5.398c1.36-.626 2.972-.03 3.597 1.33.626 1.36.03 2.972-1.33 3.598-1.36.625-2.972.029-3.598-1.331-.625-1.36-.029-2.972 1.331-3.597z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const Check = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"white\">\r\n    <path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\" />\r\n  </svg>\r\n);\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Logo } from './Icons';\r\nconst Animation = keyframes`\r\n    0%{\r\n        opacity:0\r\n    }\r\n    50%{\r\n        opacity:1\r\n    }\r\n    100%{\r\n        opacity:0;\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  animation: ${Animation} 1s linear infinite;\r\n  width: 100%;\r\n  height: 86vh;\r\n  text-align: center;\r\n`;\r\n\r\nexport default () => (\r\n  <>\r\n    <Loader>\r\n      <Logo size={36} />\r\n    </Loader>\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Text = styled.span`\r\n  font-weight: 600;\r\n`;\r\n\r\nconst FatText = ({ text, className }) => (\r\n  <Text className={className}>{text}</Text>\r\n);\r\n\r\nFatText.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FatText;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Avatar = styled.img`\r\n  align-self: center;\r\n  justify-self: center;\r\n  display: grid;\r\n  width: 3.75rem;\r\n  height: 3.75rem;\r\n  -o-object-fit: cover;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default ({ avatar, top, left, right, bottom, outSize, inSize }) => {\r\n  const imgSize = `${inSize}rem`;\r\n  return (\r\n    <Avatar\r\n      style={{ width: imgSize, height: imgSize }}\r\n      src={`${process.env.PUBLIC_URL}/img/avatar.png`}\r\n      alt=\"\"\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport { HeartFull, HeartEmpty } from '../../Components/Icons';\r\nimport FatText from '../../Components/FatText';\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\nimport Avatar from '../../Components/Avatar';\r\n\r\nconst Post = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 11fr 9fr;\r\n  grid-template-columns: 1fr;\r\n  height: 80vh;\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\n\r\nconst ThumbnailWraper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  display: block;\r\n`;\r\n\r\nconst Thumbnail = styled.img`\r\n  background: #dee2e6;\r\n  -o-object-fit: cover;\r\n  object-fit: cover;\r\n  display: block;\r\n  border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px;\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-rows: 2fr 3fr;\r\n  grid-template-columns: 1fr;\r\n  box-shadow: 0 -4px 16px rgba(0, 0, 0, 0.05);\r\n  padding: 1rem 1rem;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst CoverLetter = styled.div`\r\n  border-bottom: 1px solid #e9ecef;\r\n  display: grid;\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  font-weight: 900;\r\n  color: #fa983a;\r\n  align-self: end;\r\n  justify-self: start;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 5px;\r\n  font-weight: 900;\r\n  font-size: 25px;\r\n  align-self: start;\r\n  justify-self: start;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: grid;\r\n  color: #8aa6c1;\r\n  grid-template-columns: 3.5fr 0.1fr 3fr 0.5fr;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\nconst DateWrapper = styled.div``;\r\n\r\nconst LikeCountWrapper = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: end;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst LikeWrapper = styled.div`\r\n  cursor: pointer;\r\n`;\r\nconst Dot = styled.span`\r\n  &::before {\r\n    color: #8aa6c1;\r\n    padding-left: 0.5rem;\r\n    padding-right: 0.5rem;\r\n    font-weight: 900;\r\n    content: '';\r\n  }\r\n`;\r\nconst Content = styled.div`\r\n  display: grid;\r\n  grid-auto-columns: 1fr 4fr;\r\n  -webkit-box-orient: vertical;\r\n  text-align-last: center;\r\n  margin-top: 0.07vh;\r\n  line-height: 1.5rem;\r\n  height: 100%;\r\n  word-break: break-all;\r\n  color: #4c657d;\r\n  overflow-y: hidden;\r\n  -webkit-line-clamp: 3;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst Caption = styled.div`\r\n  border-bottom: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Comments = styled.div`\r\n  display: grid;\r\n  margin-top: 5px;\r\n  max-height: 12vh;\r\n  overflow-y: hidden;\r\n  word-break: break-all;\r\n  color: #4c657d;\r\n  -webkit-line-clamp: 3;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst Comment = styled.div`\r\n  margin-bottom: 5px;\r\n  span {\r\n    margin-right: 5px;\r\n  }\r\n  overflow-y: hidden;\r\n  word-break: break-all;\r\n  color: #4c657d;\r\n  -webkit-line-clamp: 3;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n  margin-top: 5px;\r\n  border: 1px solid #e9ecef;\r\n  width: 100%;\r\n  resize: none;\r\n  font-size: 14px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst CommentInfo = styled.div`\r\n  display: grid;\r\n  align-self: start;\r\n  justify-self: start;\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst AvatarWrapper = styled.div`\r\n  position: absolute;\r\n  display: grid;\r\n  justify-self: flex-end;\r\n  z-index: 1;\r\n  width: 4.5rem;\r\n  height: 4.5rem;\r\n  border-radius: 50%;\r\n  background: white;\r\n  top: -2rem;\r\n  right: 1rem;\r\n`;\r\nexport default ({\r\n  files,\r\n  user: { userName, avatar },\r\n  title,\r\n  createdAt,\r\n  caption,\r\n  isLiked,\r\n  likeCount,\r\n  newComment,\r\n  currentItem,\r\n  toggleLike,\r\n  onKeyPress,\r\n  comments,\r\n  selfComments,\r\n}) => (\r\n  <>\r\n    <Post>\r\n      <ThumbnailWraper>\r\n        <Thumbnail\r\n          key={files[0].id}\r\n          src={`https://boongyee.com/${files[0].url}`}\r\n        />\r\n      </ThumbnailWraper>\r\n\r\n      <Contents>\r\n        <AvatarWrapper>\r\n          <Avatar avatar={avatar} />\r\n        </AvatarWrapper>\r\n        <CoverLetter>\r\n          <UserName>{userName}</UserName>\r\n          <Title>{title}</Title>\r\n          <Info>\r\n            <DateWrapper>\r\n              {moment(createdAt).format('YYYY년 MM월 DD일')}\r\n            </DateWrapper>\r\n            <Dot />\r\n            <LikeCountWrapper>\r\n              {likeCount === 1 ? '1' : `${likeCount}`}개의 응원\r\n            </LikeCountWrapper>\r\n\r\n            <LikeWrapper onClick={toggleLike}>\r\n              {isLiked ? <HeartFull /> : <HeartEmpty />}\r\n            </LikeWrapper>\r\n          </Info>\r\n        </CoverLetter>\r\n        <Content>\r\n          <Caption>{caption}</Caption>\r\n          {comments.length !== 0 ? (\r\n            <Comments>\r\n              <CommentInfo>최근댓글</CommentInfo>\r\n              {comments.reverse().map(comment => (\r\n                <Comment key={comment.id}>\r\n                  <FatText text={comment.user.userName} />\r\n                  {comment.text}\r\n                </Comment>\r\n              ))}\r\n              {selfComments.map(comment => (\r\n                <Comment key={comment.id}>\r\n                  <FatText text={comment.user.userName} />\r\n                  {comment.text}\r\n                </Comment>\r\n              ))}\r\n            </Comments>\r\n          ) : (\r\n            <CommentInfo>최근댓글이 없어요 ^-^//</CommentInfo>\r\n          )}\r\n          <Textarea\r\n            onKeyPress={onKeyPress}\r\n            placeholder={'응원해주기'}\r\n            value={newComment.value}\r\n            onChange={newComment.onChange}\r\n          />\r\n        </Content>\r\n      </Contents>\r\n    </Post>\r\n  </>\r\n);\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const TOGGLE_LIKE = gql`\r\n  mutation toggelLike($postId: String!) {\r\n    toggleLike(postId: $postId)\r\n  }\r\n`;\r\n\r\nexport const ADD_COMMENT = gql`\r\n  mutation addComment($postId: String!, $text: String!) {\r\n    addComment(postId: $postId, text: $text) {\r\n      id\r\n      text\r\n      user {\r\n        userName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n","import PostContainer from './PostContainer';\r\nexport default PostContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useInput from '../../Hooks/useInput';\r\nimport PostPresenter from './PostPresenter';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { TOGGLE_LIKE, ADD_COMMENT } from './PostQueries';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst PostContainer = ({\r\n  id,\r\n  user,\r\n  files,\r\n  likeCount,\r\n  comments,\r\n  createdAt,\r\n  caption,\r\n  title,\r\n  isLiked,\r\n}) => {\r\n  const [isLikedS, setIsLiked] = useState(isLiked);\r\n  const [likeCountS, setLikeCount] = useState(likeCount);\r\n  const [currentItem, setCurrentItem] = useState(0);\r\n  const [selfComments, setSelfComments] = useState([]);\r\n  const comment = useInput('');\r\n  const [toggleLikeMutation] = useMutation(TOGGLE_LIKE, {\r\n    variables: { postId: id },\r\n  });\r\n  const [addCommentMutation] = useMutation(ADD_COMMENT, {\r\n    variables: { postId: id, text: comment.value },\r\n  });\r\n  useEffect(() => {\r\n    const totalFiles = files.length;\r\n    if (currentItem === totalFiles - 1) {\r\n      setCurrentItem(0);\r\n    } else {\r\n      setCurrentItem(currentItem + 1);\r\n    }\r\n  }, [currentItem, files]);\r\n\r\n  const toggleLike = () => {\r\n    try {\r\n      toggleLikeMutation();\r\n      if (isLikedS === true) {\r\n        setIsLiked(false);\r\n        setLikeCount(likeCountS - 1);\r\n      } else {\r\n        setIsLiked(true);\r\n        setLikeCount(likeCountS + 1);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const onKeyPress = async event => {\r\n    const { which } = event;\r\n    if (which === 13) {\r\n      event.preventDefault();\r\n      try {\r\n        const {\r\n          data: { addComment },\r\n        } = await addCommentMutation();\r\n        setSelfComments([...selfComments, addComment]);\r\n        comment.setValue('');\r\n      } catch (e) {\r\n        console.log(e);\r\n        toast.error(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PostPresenter\r\n      isLiked={isLikedS}\r\n      user={user}\r\n      files={files}\r\n      onKeyPress={onKeyPress}\r\n      likeCount={likeCountS}\r\n      title={title}\r\n      caption={caption}\r\n      createdAt={createdAt}\r\n      currentItem={currentItem}\r\n      toggleLike={toggleLike}\r\n      newComment={comment}\r\n      comments={comments}\r\n      setIsLiked={setIsLiked}\r\n      setLikeCount={setLikeCount}\r\n      selfComments={selfComments}\r\n    />\r\n  );\r\n};\r\n\r\nPostContainer.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    userName: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  files: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  likeCount: PropTypes.number.isRequired,\r\n  isLiked: PropTypes.bool.isRequired,\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        userName: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    })\r\n  ).isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  createdAt: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PostContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Icon } from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  background: ${props => props.theme.whiteColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst Tab = styled(NavLink)`\r\n  z-index: 10;\r\n  display: grid;\r\n  > i {\r\n    display: grid;\r\n  }\r\n\r\n  i > svg {\r\n    width: 50%;\r\n    height: 50%;\r\n    align-self: center;\r\n    justify-self: center;\r\n    color: ${props => props.theme.dimgreyColor};\r\n  }\r\n\r\n  &.active {\r\n    & {\r\n      border-bottom: 0.5vh solid ${props => props.theme.activeColor};\r\n    }\r\n    > i > svg {\r\n      color: ${props => props.theme.activeColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default React.memo(() => {\r\n  // function menuToggle(event) {\r\n  //   //1.각 tab에게 active 클래스를 없애준다.\r\n  //   document\r\n  //     .querySelectorAll('div > a')\r\n  //     .forEach(a => (a.className = a.className.replace(' active', '')));\r\n\r\n  //   //2.클릭한 컴포넌트에 active클래스를 추가한다.\r\n  //   if (\r\n  //     !document\r\n  //       .querySelector(`a[href=\"${event.currentTarget.getAttribute('href')}\"]`)\r\n  //       .className.includes('active')\r\n  //   ) {\r\n  //     if (event.currentTarget.getAttribute('href') === '/feed') {\r\n  //       document\r\n  //         .querySelector('div > div > div:first-child')\r\n  //         .setAttribute(\r\n  //           'style',\r\n  //           'display: grid;grid-template-columns: 3fr 3fr 1fr 1fr;'\r\n  //         );\r\n  //       document\r\n  //         .querySelector('div > div')\r\n  //         .setAttribute(\r\n  //           'style',\r\n  //           'grid-template-rows: minmax(7vh, 1fr) minmax(7vh, 1fr);'\r\n  //         );\r\n  //     } else {\r\n  //       document\r\n  //         .querySelector('div > div > div:first-child')\r\n  //         .setAttribute('style', 'display:none');\r\n  //       document\r\n  //         .querySelector('div > div')\r\n  //         .setAttribute('style', 'grid-template-rows: minmax(7vh, 1fr);');\r\n  //     }\r\n  //     document.querySelector(\r\n  //       `a[href=\"${event.currentTarget.getAttribute('href')}\"]`\r\n  //     ).className += ' active';\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Tab to={'/feed'} activeClassName=\"active\" replace>\r\n          <Icon type=\"team\" />\r\n        </Tab>\r\n        <Tab to={'/diary'} replace>\r\n          <Icon type=\"read\" />\r\n        </Tab>\r\n        <Tab to={'/alarm'} replace>\r\n          <Icon type=\"sound\" />\r\n        </Tab>\r\n        <Tab to={'/story'} replace>\r\n          <Icon type=\"message\" />\r\n        </Tab>\r\n        <Tab to={'/me'} replace>\r\n          <Icon type=\"user\" />\r\n        </Tab>\r\n        <Tab to={'/etc'} replace>\r\n          <Icon type=\"menu\" />\r\n        </Tab>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n});\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const POST_FRAGMENT = gql`\r\n  fragment PostParts on Post {\r\n    id\r\n    title\r\n    caption\r\n    user {\r\n      id\r\n      avatar\r\n      userName\r\n    }\r\n    files {\r\n      id\r\n      url\r\n    }\r\n    likeCount\r\n    isLiked\r\n    comments {\r\n      id\r\n      text\r\n      user {\r\n        id\r\n        userName\r\n      }\r\n    }\r\n    createdAt\r\n  }\r\n`;\r\n\r\n// export const USER_FRAGMENT = gql`\r\n//   fragment UserParts on User {\r\n//     id\r\n//     avatar\r\n//     userName\r\n//     isFollowing\r\n//     isSelf\r\n//     followingCount\r\n//     followersCount\r\n//     postsCount\r\n//     posts {\r\n//       ...PostParts\r\n//     }\r\n//   }\r\n// `;\r\n","import { gql } from 'apollo-boost';\r\nimport { POST_FRAGMENT } from '../../fragments';\r\nexport const FEED_QUERY = gql`\r\n  {\r\n    seeFeed {\r\n      ...PostParts\r\n    }\r\n  }\r\n  ${POST_FRAGMENT}\r\n`;\r\n\r\nexport const UPLOAD = gql`\r\n  mutation upload($caption: String!, $files: [String!]!, $title: String) {\r\n    upload(caption: $caption, files: $files, title: $title) {\r\n      id\r\n      caption\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Avatar from '../Avatar';\r\nimport Input from '../Input';\r\nimport { Survey } from '../Icons';\r\n\r\nconst Wrapper = styled.form`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  grid-template-columns: 2fr 8fr 2fr;\r\n  background: white;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst SearchInput = styled(Input)`\r\n  display: grid;\r\n  background-color: ${props => props.theme.whiteColor};\r\n  color: ${props => props.theme.dimgreyColor};\r\n  padding: 7px;\r\n  padding-left: 0.7rem;\r\n  font-size: 18px;\r\n  border-radius: 16px;\r\n  height: auto;\r\n  width: 95%;\r\n  &::placeholder {\r\n    text-align: center;\r\n    padding-bottom: 5px;\r\n    opacity: 0.8;\r\n    font-weight: 200;\r\n    color: ${props => props.theme.dimgreyColor};\r\n  }\r\n`;\r\nconst SurveyWrapper = styled.label`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nconst UploadInput = styled.input`\r\n  display: none;\r\n`;\r\nexport default ({ upload, onWriteSubmit, think }) => {\r\n  return (\r\n    <Wrapper onSubmit={onWriteSubmit}>\r\n      <Avatar outSize={'1'} inSize={'2.4'} avatar={'avatar.png'} />\r\n\r\n      <SearchInput\r\n        placeholder=\"무슨 생각을 하고 계신가요?\"\r\n        value={think.value}\r\n        onChange={think.onChange}\r\n      />\r\n      <SurveyWrapper>\r\n        <Survey />\r\n        <UploadInput type=\"file\" onChange={upload} multiple />\r\n      </SurveyWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import WriteContainer from './WriteContainer';\r\nexport default WriteContainer;\r\n","import React, { useState } from 'react';\r\nimport { FEED_QUERY, UPLOAD } from './WriteQuries';\r\nimport useInput from '../../Hooks/useInput';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport WritePresenter from './WritePresenter';\r\n\r\nexport default () => {\r\n  const [fileUrl, setFileUrl] = useState('');\r\n  const think = useInput('');\r\n  const [postUploadMutation] = useMutation(UPLOAD, {\r\n    refetchQueries: () => [{ query: FEED_QUERY }],\r\n  });\r\n\r\n  async function upload(event) {\r\n    const file = event.target.files[0];\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      const {\r\n        data: { path },\r\n      } = await axios.post('http://192.168.0.79:4000/api/upload', formData, {\r\n        headers: {\r\n          'content-type': 'multipart/form-data',\r\n        },\r\n      });\r\n      if (path === undefined) {\r\n        setFileUrl('upLoadFail');\r\n      } else {\r\n        setFileUrl(path);\r\n      }\r\n    } catch (e) {\r\n      console.log('upload fail : ', e);\r\n      setFileUrl('upLoadFail');\r\n    }\r\n  }\r\n\r\n  const onWriteSubmit = async event => {\r\n    event.preventDefault();\r\n    console.log('서브밋');\r\n    console.log(fileUrl === '');\r\n    if (fileUrl === '' || fileUrl === 'upLoadFail') {\r\n      toast.info('첨부된 파일이없어 랜덤한 이미지로 작성됩니다.');\r\n    }\r\n\r\n    try {\r\n      console.log(fileUrl);\r\n      await postUploadMutation({\r\n        variables: {\r\n          title: '치료적일기',\r\n          caption: think.value,\r\n          files: [fileUrl],\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WritePresenter\r\n      upload={upload}\r\n      onWriteSubmit={onWriteSubmit}\r\n      think={think}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MassengerLogo from '../assets/image/MessengerRGB.svg';\r\nimport SearchLogo from '../assets/image/Search.svg';\r\nimport Brand from '../Components/Brand';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 3fr 1fr 1fr;\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\n\r\nconst LogoWrapper = styled(Link)`\r\n  display: grid;\r\n  align-items: center;\r\n`;\r\n\r\nconst Empty = styled.div``;\r\n\r\nconst Search = styled.img`\r\n  max-width: 55%;\r\n  height: auto;\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\n\r\nconst Massenger = styled.img`\r\n  max-width: 55%;\r\n  height: auto;\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\n\r\nconst SMWrapper = styled(Link)`\r\n  width: 5vh;\r\n  height: 5vh;\r\n  display: grid;\r\n  border-radius: 50%;\r\n  background: lightgrey;\r\n  align-self: center;\r\n  justify-self: start;\r\n`;\r\n\r\nexport default () => (\r\n  <Header>\r\n    <LogoWrapper to=\"/feed\">\r\n      <Brand />\r\n    </LogoWrapper>\r\n    <Empty />\r\n    <SMWrapper to=\"/search\">\r\n      <Search src={SearchLogo} alt=\"\" />\r\n    </SMWrapper>\r\n    <SMWrapper to=\"/messenger\">\r\n      <Massenger src={MassengerLogo} alt=\"\" />\r\n    </SMWrapper>\r\n  </Header>\r\n);\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const READ_MYDATA = gql`\r\n  query readMyData {\r\n    readMyData {\r\n      id\r\n      userName\r\n      avatar\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport Loader from '../Components/Loader';\nimport Post from '../Routes/Post';\nimport Tab from '../Components/Tab';\nimport Write from '../Components/Write';\nimport Header from '../Components/Header';\nimport { useHistory } from 'react-router-dom';\nimport { READ_MYDATA } from '../sharedQueries';\n\nconst FEED_QUERY = gql`\n  {\n    seeFeed {\n      id\n      title\n      caption\n      user {\n        id\n        avatar\n        userName\n      }\n      files {\n        id\n        url\n      }\n      likeCount\n      isLiked\n      comments {\n        id\n        text\n        user {\n          id\n          userName\n        }\n      }\n      createdAt\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: 7vh 7vh 8vh;\n`;\n\nconst PostList = styled.div`\n  display: grid;\n  justify-content: center;\n  grid-gap: 1px;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  text-align: center;\n`;\n\nexport default () => {\n  console.log('feed');\n  let history = useHistory();\n  if (history.action === 'PUSH') {\n    // history.push('/feed');\n  }\n  const { data: readMyData, loading: myDataLoading } = useQuery(READ_MYDATA);\n  const { data, error, loading } = useQuery(FEED_QUERY);\n\n  if (loading && myDataLoading) {\n    return <Loader />;\n  }\n  console.log(data);\n  console.log(error);\n  return (\n    <>\n      {readMyData &&\n        readMyData.readMyData &&\n        (typeof readMyData.readMyData.avatar === 'undefined'\n          ? history.push('/theme')\n          : '')}\n      <Wrapper>\n        <Header />\n        <Tab />\n        <Write />\n        <PostList>\n          {!loading &&\n            data &&\n            data.seeFeed &&\n            data.seeFeed.map(post => {\n              return (\n                <Post\n                  key={post.id}\n                  id={post.id}\n                  title={post.title}\n                  caption={post.caption}\n                  user={post.user}\n                  files={post.files}\n                  likeCount={post.likeCount}\n                  isLiked={post.isLiked}\n                  comments={post.comments}\n                  createdAt={post.createdAt}\n                />\n              );\n            })}\n        </PostList>\n      </Wrapper>\n    </>\n  );\n};\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport life from '../assets/image/life.gif';\r\n\r\nconst Life = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  align-self: end;\r\n`;\r\n\r\nexport default () => <Life src={life} alt=\"\" />;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tab from '../Components/Tab';\r\nimport Life from 'Components/Life';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh 7vh 7vh 7vh 7vh 7vh 58vh;\r\n`;\r\n\r\nconst Alarm = styled.div`\r\n  display: grid;\r\n  background: white;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  text-align-last: center;\r\n  padding-top: 1vh;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  text-align-last: center;\r\n  padding-top: 1vh;\r\n  color: white;\r\n  background: ${props => props.theme.activeColor};\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport default () => {\r\n  return (\r\n    <Wrapper>\r\n      <Tab />\r\n      <Title>알람</Title>\r\n      <Alarm>아침일지를 쓸 시간이에요^-^//</Alarm>\r\n      <Alarm>점심일지를 쓸 시간이에요^-^//</Alarm>\r\n      <Alarm>저녁일지를 쓸 시간이에요^-^//</Alarm>\r\n      <Alarm>퇴근후일지를 쓸 시간이에요^-^//</Alarm>\r\n      <Alarm>자기전일지를 쓸 시간이에요^-^//</Alarm>\r\n      <Alarm>아침일지를 쓸 시간이에요^-^//</Alarm>\r\n      <Life />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Dance, BackArrow, Restart } from '../../Components/Icons';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Input from '../../Components/Input';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  background: white;\r\n  grid-template-rows: 8vh 84vh 8vh;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\nexport const TitleText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\nexport const ChatHandlerWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 4fr 3fr;\r\n  height: 7vh;\r\n  justify-items: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  background-color: ${props => props.theme.activeColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nexport const BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nexport const Title = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  color: white;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nexport const RestartWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\n\r\nexport const ScrollAble = styled.div`\r\n  display: block;\r\n  overflow-y: scroll;\r\n  transform: rotate(180deg);\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ChatWrapper = styled.div`\r\n  display: grid;\r\n  transform: rotate(180deg);\r\n  grid-gap: 1vh;\r\n  background: white;\r\n  padding: 2vw;\r\n  margin-bottom: 1vh;\r\n  align-content: end;\r\n  align-self: end;\r\n`;\r\n\r\nexport const MyChatText = styled.div`\r\n  display: grid;\r\n  padding: 2vw;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: black;\r\n`;\r\n\r\nexport const NotMyChatText = styled.div`\r\n  display: grid;\r\n  padding: 2vw;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\n\r\nexport const MyBox = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: end;\r\n  background: ${props => props.theme.myChatGrey};\r\n  border-radius: 13px;\r\n`;\r\n\r\nexport const NotMyBoxWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 1vh;\r\n  grid-auto-rows: 15vw;\r\n  grid-template-columns: 15vw minmax(0, 60vw);\r\n  height: 100%;\r\n`;\r\n\r\nexport const NotMyBox = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: start;\r\n  background: ${props => props.theme.notMyChatGrey};\r\n  border-radius: 13px;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  height: 85%;\r\n  width: 85%;\r\n  border-radius: 20px;\r\n  background: ${props => props.theme.dimgreyColor};\r\n`;\r\n\r\nexport const AvatarText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\n\r\nexport const DateWapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 3fr 3fr;\r\n  margin-bottom: 10vw;\r\n`;\r\nexport const DateText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 3vw;\r\n  color: dimgrey;\r\n`;\r\nexport const DateTail = styled.div`\r\n  border-bottom: 0.5vw solid #dee2e6;\r\n  margin-bottom: 0.4vw;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: grid;\r\n  height: 8vh;\r\n  align-self: end;\r\n  grid-template-columns: 1fr 1fr 6fr 1fr;\r\n`;\r\nexport const Emoji = styled.div`\r\n  display: grid;\r\n  width: 8vh;\r\n  height: 8vh;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background: ${props => props.theme.activeColor};\r\n`;\r\n\r\nexport const SvgWrapper = styled.div`\r\n  display: grid;\r\n`;\r\nexport const Empty = styled.div`\r\n  display: grid;\r\n  background: white;\r\n`;\r\nexport const StyledInput = styled(Input)`\r\n  display: grid;\r\n  height: 100%;\r\n  font-size: 1.5rem;\r\n  padding: 0;\r\n  outline: none;\r\n  border: none;\r\n`;\r\nexport const Send = styled.div`\r\n  display: grid;\r\n  width: 8vh;\r\n  height: 8vh;\r\n  background: ${props => props.theme.activeColor};\r\n`;\r\n\r\nexport const SendText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\n\r\nexport default ({\r\n  chatData,\r\n  description,\r\n  setDescription,\r\n  mutation,\r\n  onKeyPress,\r\n  myData: {\r\n    readMyData: { id },\r\n  },\r\n}) => {\r\n  console.log('StoryPresenter');\r\n  console.log('id', id);\r\n  chatData = chatData.chatting;\r\n  console.log('chatData : ', chatData);\r\n  const history = useHistory();\r\n  return (\r\n    <Wrapper>\r\n      <ChatHandlerWrapper>\r\n        <BackArrowWrapper onClick={() => history.push('/feed')}>\r\n          <BackArrow color={'white'} />\r\n          <Text>돌아가기</Text>\r\n        </BackArrowWrapper>\r\n        <Title>\r\n          <TitleText>이야기</TitleText>\r\n        </Title>\r\n        <RestartWrapper onClick={() => history.push('/feed')}>\r\n          <Restart color={'white'} />\r\n          <Text>처음으로</Text>\r\n        </RestartWrapper>\r\n      </ChatHandlerWrapper>\r\n      <ScrollAble>\r\n        <ChatWrapper>\r\n          <DateWapper>\r\n            <DateTail />\r\n            <DateText>{moment(new Date()).format('YYYY년 MM월 DD일')}</DateText>\r\n            <DateTail />\r\n          </DateWapper>\r\n          {chatData.map(chat => {\r\n            return chat.userid === id ? (\r\n              <MyBox key={chat.id}>\r\n                <MyChatText>{chat.description}</MyChatText>\r\n              </MyBox>\r\n            ) : (\r\n              <NotMyBoxWrapper key={chat.id}>\r\n                <Avatar style={{ background: chat.avatar }}>\r\n                  <AvatarText>{chat.writer}</AvatarText>\r\n                </Avatar>\r\n                <NotMyBox>\r\n                  <NotMyChatText>{chat.description}</NotMyChatText>\r\n                </NotMyBox>\r\n              </NotMyBoxWrapper>\r\n            );\r\n          })}\r\n        </ChatWrapper>\r\n      </ScrollAble>\r\n      <InputWrapper>\r\n        <Emoji>\r\n          <SvgWrapper>\r\n            <Dance />\r\n          </SvgWrapper>\r\n        </Emoji>\r\n        <Empty />\r\n        <StyledInput\r\n          onKeyPress={e => onKeyPress(e)}\r\n          placeholder=\"\"\r\n          value={description}\r\n          onChange={e => {\r\n            setDescription(e.target.value);\r\n          }}\r\n        />\r\n        <Send>\r\n          <SendText\r\n            onClick={() => {\r\n              mutation();\r\n              setDescription('');\r\n            }}>\r\n            전송\r\n          </SendText>\r\n        </Send>\r\n      </InputWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import gql from 'graphql-tag';\r\n\r\nexport const getChatting = gql`\r\n  query chatting {\r\n    chatting {\r\n      id\r\n      userid\r\n      writer\r\n      description\r\n      avatar\r\n    }\r\n  }\r\n`;\r\n\r\nexport const newChat = gql`\r\n  subscription newChat {\r\n    newChat {\r\n      id\r\n      userid\r\n      writer\r\n      description\r\n      avatar\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MYCHAT = gql`\r\n  mutation createMyChat($description: String!) {\r\n    createMyChat(description: $description)\r\n  }\r\n`;\r\n\r\n// let unsubscribe = null; //publish 했을때 변화\r\n\r\n// export default () => (\r\n//   <Query query={getChatting}>\r\n//     {({ loading, data, subscribeToMore }) => {\r\n//       if (loading) {\r\n//         return null;\r\n//       }\r\n//       if (!unsubscribe) {\r\n//         unsubscribe = subscribeToMore({\r\n//           document: newChat,\r\n//           updateQuery: (prev, { subscriptionData }) => {\r\n//             if (!subscriptionData.data) return prev;\r\n//             const { newChat } = subscriptionData.data;\r\n//             return {\r\n//               ...prev,\r\n//               chatting: [...prev.chatting, newChat],\r\n//             };\r\n//           },\r\n//         });\r\n//       }\r\n//       return (\r\n//         <div>\r\n//           {data.chatting.map(x => (\r\n//             <h3 key={x.id}>\r\n//               {x.writer}: {x.description}\r\n//             </h3>\r\n//           ))}\r\n//         </div>\r\n//       );\r\n//     }}\r\n//   </Query>\r\n// );\r\n","import React, { useState } from 'react';\r\nimport StoryPresenter from './StoryPresenter';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { CREATE_MYCHAT, getChatting, newChat } from './StoryQuries';\r\nimport { READ_MYDATA } from '../../sharedQueries';\r\nimport Loader from 'Components/Loader';\r\n\r\nlet unsubscribe = null;\r\n\r\nexport default () => {\r\n  const [description, setDescription] = useState('');\r\n  const [mutation] = useMutation(CREATE_MYCHAT, {\r\n    variables: {\r\n      description,\r\n    },\r\n  });\r\n  const { data: myData, loading: myDataLoading } = useQuery(READ_MYDATA);\r\n  const { data: chatData, loading: chatLoading, subscribeToMore } = useQuery(\r\n    getChatting\r\n  );\r\n  const onKeyPress = async event => {\r\n    if (event.key === 'Enter') {\r\n      try {\r\n        await mutation();\r\n        setDescription('');\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!unsubscribe) {\r\n    unsubscribe = subscribeToMore({\r\n      document: newChat,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        console.log('prev : ', prev);\r\n        console.log(subscriptionData);\r\n        if (!subscriptionData.data) return prev;\r\n        const { newChat } = subscriptionData.data;\r\n        return {\r\n          ...prev,\r\n          chatting: [...prev.chatting, newChat],\r\n        };\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {(chatLoading || myDataLoading) && <Loader />}\r\n      {!(chatLoading || myDataLoading) && chatData && (\r\n        <StoryPresenter\r\n          mutation={mutation}\r\n          description={description}\r\n          setDescription={setDescription}\r\n          onKeyPress={onKeyPress}\r\n          chatData={chatData}\r\n          subscribeToMore={subscribeToMore}\r\n          myData={myData}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import StoryContainer from './StoryContainer';\r\nexport default StoryContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tab from '../Components/Tab';\r\nimport Life from 'Components/Life';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh 7vh 7vh 7vh 7vh 7vh 58vh;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: grid;\r\n  background: white;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  text-align-last: center;\r\n  padding-top: 1vh;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  text-align-last: center;\r\n  padding-top: 1vh;\r\n  color: white;\r\n  background: ${props => props.theme.activeColor};\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n  return (\r\n    <Wrapper>\r\n      <Tab />\r\n      <Title>설정</Title>\r\n      <Row\r\n        onClick={() => {\r\n          client.writeData({ data: { isLoggedIn: false } });\r\n          localStorage.clear();\r\n          history.push('/');\r\n        }}>\r\n        로그아웃\r\n      </Row>\r\n      <Row\r\n        onClick={() => {\r\n          history.push('/theme');\r\n        }}>\r\n        테마\r\n      </Row>\r\n      <Row>계정</Row>\r\n      <Row>정보</Row>\r\n      <Life />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tab from '../../Components/Tab';\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh 7vh;\r\n  background: white;\r\n`;\r\nconst Title = styled.div`\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  text-align-last: center;\r\n  padding-top: 1vh;\r\n  color: white;\r\n  background: ${props => props.theme.activeColor};\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TimelineWrapper = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  background: white;\r\n  padding: 10vw;\r\n  padding-top: 7vw;\r\n`;\r\nconst Timeline = styled.div`\r\n  display: grid;\r\n  grid-column: 100%;\r\n  grid-auto-rows: 17vh;\r\n`;\r\nconst TimelineTail = styled.div`\r\n  position: absolute;\r\n  height: calc(100% - 2vw);\r\n  left: 2vw;\r\n  top: 3vw;\r\n  border-left: 2vw solid ${props => props.theme.lightGreyColor};\r\n`;\r\n\r\nconst TimlineCircle = styled.div`\r\n  position: absolute;\r\n  width: 6vw;\r\n  height: 6vw;\r\n  background-color: ${props => props.theme.activeColor};\r\n  border-radius: 100px;\r\n  top: 0.5vw;\r\n`;\r\n\r\nconst TimelineItem = styled.div`\r\n  position: relative;\r\n`;\r\nconst TimelineItemsWrapper = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-left: 7vw;\r\n  grid-template-areas:\r\n    'type good good'\r\n    'content content content'\r\n    'content content content'\r\n    'score score score'\r\n    'score score score';\r\n`;\r\nconst Type = styled.div`\r\n  font-family: 'KakaoB';\r\n  align-self: start;\r\n  justify-self: start;\r\n  font-size: 6vw;\r\n  grid-area: type;\r\n  padding-top: 0.5vw;\r\n`;\r\nconst Content = styled.div`\r\n  font-size: 5vw;\r\n  padding-top: 1vw;\r\n  grid-area: content;\r\n  overflow-y: hidden;\r\n  -webkit-line-clamp: 2;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst Good = styled.div`\r\n  display: grid;\r\n  align-self: start;\r\n  justify-self: end;\r\n  font-size: 4vw;\r\n  border: 3px solid ${props => props.theme.activeColor};\r\n  border-radius: 30px;\r\n  padding: 1vw;\r\n  grid-area: good;\r\n`;\r\nconst Score = styled.div`\r\n  display: grid;\r\n  grid-area: score;\r\n`;\r\nexport default myDiaries => {\r\n  const diariesArr = myDiaries.myDiaries;\r\n  return (\r\n    <Wrapper>\r\n      <Tab />\r\n      <Title>오늘의 기록</Title>\r\n      <TimelineWrapper>\r\n        <Timeline>\r\n          {diariesArr.map(diary => (\r\n            <TimelineItem key={diary.id}>\r\n              <TimelineTail />\r\n              <TimlineCircle />\r\n              <TimelineItemsWrapper>\r\n                <Type>{diary.question.type}</Type>\r\n                <Good>{diary.good ? '행동' : '생각'}</Good>\r\n                <Content>\r\n                  {/* prettier-ignore */}\r\n                  <pre>\r\n{\r\n`${diary.content}`\r\n}\r\n                  </pre>\r\n                </Content>\r\n                <Score>{`${diary.good ? '긍정적' : '부정적'}느낌 ${\r\n                  diary.score\r\n                }`}</Score>\r\n              </TimelineItemsWrapper>\r\n            </TimelineItem>\r\n          ))}\r\n        </Timeline>\r\n      </TimelineWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const READ_MYDIARY = gql`\r\n  query readMyDiary {\r\n    readMyDiary {\r\n      id\r\n      content\r\n      good\r\n      score\r\n      question {\r\n        type\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import MeContainer from './MeConainer';\r\nexport default MeContainer;\r\n","import React from 'react';\r\nimport MePresenter from './MePresenter';\r\nimport { READ_MYDIARY } from './MeQueries';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Loader from 'Components/Loader';\r\n\r\nexport default React.memo(() => {\r\n  const { data: myDiaryData, loading: myDiaryLoading } = useQuery(READ_MYDIARY);\r\n  return (\r\n    <>\r\n      {myDiaryLoading && <Loader />}\r\n      {!myDiaryLoading && myDiaryData && (\r\n        <MePresenter myDiaries={myDiaryData.readMyDiary} />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const FOLLOW = gql`\r\n  mutation follow($id: String!) {\r\n    follow(id: $id)\r\n  }\r\n`;\r\n\r\nexport const UNFOLLOW = gql`\r\n  mutation unfollow($id: String!) {\r\n    unfollow(id: $id)\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {AddUser} from '../Icons';\r\nconst AddUserWrapper = styled.div`\r\n  width: 100%;\r\n  height:100%;\r\n  border: 0;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  color: white;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  padding: 7px 0px;\r\n  font-size: 14px;\r\n`;\r\n\r\n\r\nexport default ({ isFollowing, onClick }) => (\r\n  <AddUserWrapper onClick={onClick}>\r\n    {isFollowing ? '' : <AddUser/>}\r\n  </AddUserWrapper>\r\n);\r\n","import FollowButtonContainer from './FollowButtonContainer';\r\nexport default FollowButtonContainer;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { FOLLOW, UNFOLLOW } from './FollowButtonQuries';\r\nimport FollowButtonPresenter from './FollowButtonPresenter';\r\n\r\nconst FollowButtonContainer = ({ isFollowing, id }) => {\r\n  const [isFollowingS, setIsFollowing] = useState(isFollowing);\r\n  const [followMutation] = useMutation(FOLLOW, { variables: { id } });\r\n  const [unfollowMutation] = useMutation(UNFOLLOW, { variables: { id } });\r\n\r\n  const onClick = () => {\r\n    if (isFollowingS === true) {\r\n      setIsFollowing(false);\r\n      unfollowMutation();\r\n    } else {\r\n      setIsFollowing(true);\r\n      followMutation();\r\n    }\r\n  };\r\n  return <FollowButtonPresenter onClick={onClick} isFollowing={isFollowingS} />;\r\n};\r\n\r\nFollowButtonContainer.propTypes = {\r\n  isFollowing: PropTypes.bool.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FollowButtonContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from './Avatar';\r\nimport FatText from './FatText';\r\nimport { Link } from 'react-router-dom';\r\nimport FollowButton from './FollowButton';\r\n\r\nconst Card = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 3fr 4fr;\r\n  align-items: center;\r\n  height: 12vh;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n`;\r\n\r\nconst LinkInCard = styled(Link)`\r\n  display: grid;\r\n  justify-self: start;\r\n  color: inherit;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst FollowWrapper = styled.div`\r\n  align-self: center;\r\n  justify-self: end;\r\n  padding-right: 2vw;\r\n`;\r\n\r\nconst UserCard = ({ id, userName, isFollowing, url, isSelf }) => (\r\n  <Card>\r\n    <Avatar avatar={url} />\r\n    <LinkInCard to={`/${userName}`}>\r\n      <FatText text={userName} />\r\n    </LinkInCard>\r\n    <FollowWrapper>\r\n      {!isSelf && <FollowButton id={id} isFollowing={isFollowing} />}\r\n    </FollowWrapper>\r\n  </Card>\r\n);\r\n\r\nUserCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  userName: PropTypes.string.isRequired,\r\n  isFollowing: PropTypes.bool.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  isSelf: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { HeartFull, CommentFull } from './Icons';\r\n\r\nconst Overlay = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0;\r\n  transition: opacity 0.3s linear;\r\n  svg {\r\n    fill: white;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  background-image: url(${props => props.bg});\r\n  background-size: cover;\r\n  cursor: pointer;\r\n  &:hover {\r\n    ${Overlay} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Number = styled.div`\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  &:first-child {\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nconst NumberText = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst SquarePost = ({ likeCount, commentCount, file }) => (\r\n  <Container bg={file.url}>\r\n    <Overlay>\r\n      <Number>\r\n        <HeartFull />\r\n        <NumberText>{likeCount}</NumberText>\r\n      </Number>\r\n      <Number>\r\n        <CommentFull />\r\n        <NumberText>{commentCount}</NumberText>\r\n      </Number>\r\n    </Overlay>\r\n  </Container>\r\n);\r\n\r\nSquarePost.propTypes = {\r\n  likeCount: PropTypes.number.isRequired,\r\n  commentCount: PropTypes.number.isRequired,\r\n  file: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SquarePost;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../Components/Loader';\r\nimport UserCard from '../../Components/UserCard';\r\nimport SquarePost from '../../Components/SquarePost';\r\nimport Input from '../../Components/Input';\r\nimport { BackArrow } from '../../Components/Icons';\r\nimport useInput from '../../Hooks/useInput';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh 100vh;\r\n  background: ${props => props.theme.bgColor};\r\n`;\r\n\r\nconst SearchInputWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 9fr;\r\n  height: 100%;\r\n  justify-items: center;\r\n  align-items: center;\r\n  padding-right: 0.5rem;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\n\r\nconst BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  justify-self: center;\r\n  align-self: center;\r\n  padding-right: 0.5rem;\r\n`;\r\n\r\nconst SearchInput = styled(Input)`\r\n  display: grid;\r\n  background-color: ${props => props.theme.lightGreyColor};\r\n  color: ${props => props.theme.dimgreyColor};\r\n  padding: 7px;\r\n  padding-left: 0.7rem;\r\n  font-size: 18px;\r\n  border-radius: 16px;\r\n  height: auto;\r\n  width: 95%;\r\n  &::placeholder {\r\n    text-align: center;\r\n    padding-bottom: 5px;\r\n    opacity: 0.8;\r\n    font-weight: 200;\r\n    color: ${props => props.theme.dimgreyColor};\r\n  }\r\n`;\r\n\r\nconst ContentsWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\nconst UserSection = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 3vh repeat(1fr);\r\n`;\r\n\r\nconst PostSection = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 3vh repeat(1fr);\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  border-radius: 15px;\r\n  background-color: white;\r\n  width: 95%;\r\n  height: 95%;\r\n`;\r\nconst StartSection = styled.div`\r\n  display: grid;\r\n  border-bottom: 1px solid ${props => props.theme.INDEGO};\r\n  height: 7vh;\r\n  align-items: center;\r\n  font-family: 'NanumSR';\r\n  font-weight: 900;\r\n  padding-left: 4vw;\r\n`;\r\n\r\nconst EmptySection = styled.div`\r\n  display: grid;\r\n  height: 7vh;\r\n  align-items: center;\r\n  font-family: 'NanumSR';\r\n  font-weight: 900;\r\n  padding-left: 4vw;\r\n`;\r\nconst SearchPresenter = ({ searchTerm, loading, data }) => {\r\n  const history = useHistory();\r\n  const search = useInput('');\r\n  const onSearchSubmit = e => {\r\n    e.preventDefault();\r\n    history.push(`/search?term=${search.value}`);\r\n  };\r\n  if (searchTerm === undefined) {\r\n    return (\r\n      <Wrapper>\r\n        <form onSubmit={onSearchSubmit}>\r\n          <SearchInputWrapper>\r\n            <BackArrowWrapper onClick={() => history.goBack()}>\r\n              <BackArrow />\r\n            </BackArrowWrapper>\r\n            <SearchInput\r\n              value={search.value}\r\n              onChange={search.onChange}\r\n              placeholder=\"검색하기\"\r\n            />\r\n          </SearchInputWrapper>\r\n        </form>\r\n      </Wrapper>\r\n    );\r\n  } else if (loading === true) {\r\n    return (\r\n      <Wrapper>\r\n        <Loader />\r\n      </Wrapper>\r\n    );\r\n  } else if (data && data.searchUser && data.searchPost) {\r\n    return (\r\n      <Wrapper>\r\n        <form onSubmit={onSearchSubmit}>\r\n          <SearchInputWrapper>\r\n            <BackArrowWrapper onClick={() => history.goBack()}>\r\n              <BackArrow />\r\n            </BackArrowWrapper>\r\n            <SearchInput\r\n              value={search.value}\r\n              onChange={search.onChange}\r\n              placeholder=\"검색하기\"\r\n            />\r\n          </SearchInputWrapper>\r\n        </form>\r\n        <ContentsWrapper>\r\n          <WhiteBox>\r\n            <StartSection>사람</StartSection>\r\n            <UserSection>\r\n              {data.searchUser.length === 0 ? (\r\n                <EmptySection>찾는 단어가 포함된 유저가 없습니다.</EmptySection>\r\n              ) : (\r\n                data.searchUser.map(user => (\r\n                  <UserCard\r\n                    key={user.id}\r\n                    userName={user.userName}\r\n                    isFollowing={user.isFollowing}\r\n                    url={user.avatar}\r\n                    isSelf={user.isSelf}\r\n                    id={user.id}\r\n                  />\r\n                ))\r\n              )}\r\n            </UserSection>\r\n          </WhiteBox>\r\n          <WhiteBox>\r\n            <StartSection>포스트</StartSection>\r\n            <PostSection>\r\n              {data.searchPost.length === 0 ? (\r\n                <EmptySection>\r\n                  포스트의 제목이나 설명으로 시작하는 글이 없습니다.\r\n                </EmptySection>\r\n              ) : (\r\n                data.searchPost.map(post => (\r\n                  <SquarePost\r\n                    key={post.id}\r\n                    likeCount={post.likeCount}\r\n                    commentCount={post.commentCount}\r\n                    file={post.files[0]}\r\n                  />\r\n                ))\r\n              )}\r\n            </PostSection>\r\n          </WhiteBox>\r\n        </ContentsWrapper>\r\n      </Wrapper>\r\n    );\r\n  } else {\r\n    return <Wrapper />;\r\n  }\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const SEARCH = gql`\r\n  query search($term: String!) {\r\n    searchPost(term: $term) {\r\n      id\r\n      files {\r\n        url\r\n      }\r\n      likeCount\r\n      commentCount\r\n    }\r\n    searchUser(term: $term) {\r\n      id\r\n      avatar\r\n      userName\r\n      isFollowing\r\n      isSelf\r\n    }\r\n  }\r\n`;\r\n","import SearchContainer from './SearchContainer';\r\nexport default SearchContainer;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchPresenter from './SrearchPresenter';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { SEARCH } from './SrearchQueries';\r\n\r\nexport default withRouter(({ location: { search } }) => {\r\n  const term = search.split('=')[1];\r\n  const { data, loading } = useQuery(SEARCH, {\r\n    skip: term === undefined,\r\n    variables: {\r\n      term,\r\n    },\r\n  });\r\n  console.log(data);\r\n  return <SearchPresenter searchTerm={term} loading={loading} data={data} />;\r\n});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Progress = styled.div`\r\n  display: grid;\r\n  grid-auto-rows: 5vh;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-gap: 0.1vw;\r\n  grid-auto-flow: column;\r\n`;\r\nconst Item = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  color: white;\r\n  background: #636469;\r\n  border: 1px solid white;\r\n`;\r\nconst Text = styled.div`\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\n\r\nexport default ({ background, diary, setDiary }) => {\r\n  let scoreArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n  return (\r\n    <Progress>\r\n      {scoreArray.map(element => (\r\n        <Item\r\n          key={element}\r\n          style={\r\n            diary.score === undefined\r\n              ? { background: '#636469' }\r\n              : element <= diary.score\r\n              ? { background: background }\r\n              : { background: '#636469' }\r\n          }\r\n          onClick={() => setDiary(diary => ({ ...diary, score: element }))}>\r\n          <Text>{element}</Text>\r\n        </Item>\r\n      ))}\r\n    </Progress>\r\n  );\r\n};\r\n\r\n// import React, { useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import { DiaryContext, DiaryAction } from 'Routes/Diary/DiaryContext';\r\n\r\n// const Progress = styled.div`\r\n//   display: grid;\r\n//   grid-auto-rows: 5vh;\r\n//   grid-template-columns: repeat(10, 1fr);\r\n//   grid-gap: 0.1vw;\r\n//   grid-auto-flow: column;\r\n// `;\r\n// const Item = styled.div`\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   display: grid;\r\n//   color: white;\r\n//   background: #636469;\r\n//   border: 1px solid white;\r\n// `;\r\n// const Text = styled.div`\r\n//   align-self: center;\r\n//   justify-self: center;\r\n// `;\r\n\r\n// export default ({ background }) => {\r\n//   const { state, dispatch } = useContext(DiaryContext);\r\n//   let scoreArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n//   return (\r\n//     <Progress>\r\n//       {scoreArray.map(element => (\r\n//         <Item\r\n//           key={element}\r\n//           style={\r\n//             state.diary.score === undefined\r\n//               ? { background: '#636469' }\r\n//               : element <= state.diary.score\r\n//               ? { background: background }\r\n//               : { background: '#636469' }\r\n//           }\r\n//           onClick={() =>\r\n//             dispatch({\r\n//               type: DiaryAction.SET_MANY,\r\n//               diary: { ...state.diary, score: element },\r\n//             })\r\n//           }>\r\n//           <Text>{element}</Text>\r\n//         </Item>\r\n//       ))}\r\n//     </Progress>\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TextareaAutosize from 'react-autosize-textarea/lib';\r\nimport OutLineButton from './OutLineButton';\r\nimport { BackArrow, Restart } from '../Components/Icons';\r\nimport Progress from './Progress';\r\nconst Survey = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 8vh 8vh 10vh 30vh 8vh 10vh 10vh;\r\n`;\r\n\r\nconst Question = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => props.theme.activeColor};\r\n  color: white;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => props.theme.dimgreyColor};\r\n  color: white;\r\n`;\r\n\r\nconst Answer = styled(TextareaAutosize)`\r\n  border: 1px solid #e9ecef;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  resize: none;\r\n  font-size: 1rem;\r\n  padding-top: 2vh;\r\n  &:focus {\r\n    outline: none;\r\n    ::-webkit-input-placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n  ::placeholder {\r\n    padding-top: 2rem;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst OutLineButtonWrapper = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  width: 40vw;\r\n  background: '#636469';\r\n`;\r\nconst Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n`;\r\nconst TinyText = styled.div`\r\n  display: grid;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 0.2rem;\r\n  font-weight: 500;\r\n`;\r\nconst SurveyHandlerWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 4fr 3fr;\r\n  height: 100%;\r\n  justify-items: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  background: ${props => props.theme.whiteColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\n\r\nconst RestartWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nconst Counter = styled.div`\r\n  display: grid;\r\n  background-color: ${props => props.theme.activeColor};\r\n  color: ${props => props.theme.whiteColor};\r\n  padding: 7px;\r\n  font-size: 18px;\r\n  border-radius: 16px;\r\n  height: auto;\r\n  width: 95%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Evaluation = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  justify-items: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => props.theme.dimgreyColor};\r\n  color: white;\r\n`;\r\n\r\nexport default ({\r\n  myQuestion,\r\n  setAction,\r\n  setSurveyCount,\r\n  surveyCount,\r\n  createDiary,\r\n  onKeyPress,\r\n  diary,\r\n  setDiary,\r\n}) => {\r\n  console.log('Survey');\r\n  const totalSurvey = myQuestion.length;\r\n  const currentSurveyCount = surveyCount;\r\n  const currentQuestion = myQuestion[surveyCount];\r\n  console.log('myQuestion : ', myQuestion);\r\n  console.log('currentQuestion : ', currentQuestion);\r\n  const onchangeDiaryContent = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setDiary(() => ({ ...diary, content: value }));\r\n    setDiary(diary => ({ ...diary, questionId: currentQuestion.id }));\r\n  };\r\n  return (\r\n    <Survey>\r\n      <SurveyHandlerWrapper>\r\n        <BackArrowWrapper\r\n          onClick={() => {\r\n            setDiary(diary => (diary.good = undefined));\r\n            setSurveyCount(surveyCount === 0 ? 0 : surveyCount - 1);\r\n            setAction(surveyCount === 0 ? 'Description' : 'Survey');\r\n          }}>\r\n          <BackArrow />\r\n          <Text>이전으로</Text>\r\n        </BackArrowWrapper>\r\n        <Counter>\r\n          {`치료적일기 ${currentSurveyCount + 1}/${totalSurvey}`}\r\n        </Counter>\r\n        <RestartWrapper\r\n          onClick={() => {\r\n            setSurveyCount(0);\r\n            setAction('Survey');\r\n          }}>\r\n          <Restart />\r\n          <Text>처음으로</Text>\r\n        </RestartWrapper>\r\n      </SurveyHandlerWrapper>\r\n      <Question>\r\n        <Text>{currentQuestion.question}</Text>\r\n      </Question>\r\n      <Description>\r\n        <Text>{currentQuestion.description}</Text>\r\n      </Description>\r\n\r\n      <Answer\r\n        onKeyPress={onKeyPress}\r\n        placeholder={'작성하기'}\r\n        value={diary.content}\r\n        onChange={onchangeDiaryContent}\r\n      />\r\n\r\n      {diary.good === undefined ? (\r\n        <>\r\n          <Question>\r\n            <Text>당신은 지금, 이 일기를 쓰면서 어떤 감정이 들었나요?</Text>\r\n          </Question>\r\n          <Evaluation>\r\n            <OutLineButton\r\n              text={'불편한 감정'}\r\n              onClick={() =>\r\n                setDiary(diary => ({ ...diary, good: false }))\r\n              }></OutLineButton>\r\n            <OutLineButton\r\n              text={'좋은 감정'}\r\n              onClick={() =>\r\n                setDiary(diary => ({ ...diary, good: true }))\r\n              }></OutLineButton>\r\n          </Evaluation>\r\n        </>\r\n      ) : diary.good === true ? (\r\n        <>\r\n          <Question>\r\n            <Text>얼마나 좋은 감정이 들었나요?</Text>\r\n            <TinyText>\r\n              (지금 이 순간 느끼는 만큼, 점수를 선택해주세요.)\r\n            </TinyText>\r\n          </Question>\r\n          <Progress background={'#00695c'} diary={diary} setDiary={setDiary} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Question>\r\n            <Text>얼마나 불편한 감정이 들었나요?</Text>\r\n            <TinyText>\r\n              (지금 이 순간 느끼는 만큼, 점수를 선택해주세요.)\r\n            </TinyText>\r\n          </Question>\r\n          <Progress background={'#FF5722'} diary={diary} setDiary={setDiary} />\r\n        </>\r\n      )}\r\n\r\n      <OutLineButtonWrapper>\r\n        <OutLineButton text={'계속하기'} onClick={createDiary} />\r\n      </OutLineButtonWrapper>\r\n    </Survey>\r\n  );\r\n};\r\n\r\n// import React, { useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import TextareaAutosize from 'react-autosize-textarea/lib';\r\n// import OutLineButton from './OutLineButton';\r\n// import { BackArrow, Restart } from '../Components/Icons';\r\n// import Progress from './Progress';\r\n// import { DiaryContext, DiaryAction } from 'Routes/Diary/DiaryContext';\r\n// const Survey = styled.div`\r\n//   display: grid;\r\n//   grid-template-rows: 8vh 8vh 10vh 30vh 8vh 10vh 10vh;\r\n// `;\r\n\r\n// const Question = styled.div`\r\n//   display: grid;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background: ${props => props.theme.activeColor};\r\n//   color: white;\r\n// `;\r\n\r\n// const Description = styled.div`\r\n//   display: grid;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background: ${props => props.theme.dimgreyColor};\r\n//   color: white;\r\n// `;\r\n\r\n// const Answer = styled(TextareaAutosize)`\r\n//   border: 1px solid #e9ecef;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   text-align: center;\r\n//   resize: none;\r\n//   font-size: 1rem;\r\n//   padding-top: 2vh;\r\n//   &:focus {\r\n//     outline: none;\r\n//     ::-webkit-input-placeholder {\r\n//       opacity: 0;\r\n//     }\r\n//   }\r\n//   ::placeholder {\r\n//     padding-top: 2rem;\r\n//     font-size: 1rem;\r\n//   }\r\n// `;\r\n\r\n// const OutLineButtonWrapper = styled.div`\r\n//   display: grid;\r\n//   align-self: center;\r\n//   justify-self: center;\r\n//   width: 40vw;\r\n//   background: '#636469';\r\n// `;\r\n// const Text = styled.div`\r\n//   display: grid;\r\n//   align-self: center;\r\n//   justify-self: center;\r\n//   font-size: 1rem;\r\n// `;\r\n// const TinyText = styled.div`\r\n//   display: grid;\r\n//   align-self: start;\r\n//   justify-self: center;\r\n//   font-size: 0.2rem;\r\n//   font-weight: 500;\r\n// `;\r\n// const SurveyHandlerWrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 3fr 4fr 3fr;\r\n//   height: 100%;\r\n//   justify-items: center;\r\n//   align-items: center;\r\n//   border-bottom: 1px solid ${props => props.theme.borderColor};\r\n//   background: ${props => props.theme.whiteColor};\r\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n// `;\r\n\r\n// const BackArrowWrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 1fr 2fr;\r\n//   justify-self: center;\r\n//   align-self: center;\r\n// `;\r\n\r\n// const RestartWrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 1fr 2fr;\r\n//   justify-self: center;\r\n//   align-self: center;\r\n// `;\r\n// const Counter = styled.div`\r\n//   display: grid;\r\n//   background-color: ${props => props.theme.activeColor};\r\n//   color: ${props => props.theme.whiteColor};\r\n//   padding: 7px;\r\n//   font-size: 18px;\r\n//   border-radius: 16px;\r\n//   height: auto;\r\n//   width: 95%;\r\n//   text-align: center;\r\n// `;\r\n\r\n// const Evaluation = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 1fr 1fr;\r\n//   justify-items: center;\r\n//   align-items: center;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background: ${props => props.theme.dimgreyColor};\r\n//   color: white;\r\n// `;\r\n\r\n// export default () =>\r\n//   //   {\r\n//   //   myQuestion,\r\n//   //   setAction,\r\n//   //   setSurveyCount,\r\n//   //   surveyCount,\r\n//   //   createDiary,\r\n//   //   onKeyPress,\r\n//   //   diary,\r\n//   //   setDiary,\r\n//   // }\r\n//   {\r\n//     console.log('Survey');\r\n//     const { state, dispatch } = useContext(DiaryContext);\r\n\r\n//     const totalSurvey = state.myQuestion.length;\r\n//     const currentSurveyCount = state.surveyCount;\r\n//     const currentQuestion = state.myQuestion[state.surveyCount];\r\n//     console.log('diary.content : ', state.diary.content);\r\n//     const onchangeDiaryContent = async e => {\r\n//       const {\r\n//         target: { value },\r\n//       } = e;\r\n//       console.log('value : ', value);\r\n//       await dispatch({\r\n//         type: DiaryAction.SET_MANY,\r\n//         diary: { ...state.diary, content: value },\r\n//       });\r\n//       dispatch({\r\n//         type: DiaryAction.SET_MANY,\r\n//         diary: { ...state.diary, questionId: currentQuestion.id },\r\n//       });\r\n//       // setDiary(() => ({ ...diary, content: value }));\r\n//       // setDiary(diary => ({ ...diary, questionId: currentQuestion.id }));\r\n//     };\r\n//     const onKeyPress = async event => {\r\n//       if (event.key === 'Enter') {\r\n//         try {\r\n//           state.handleDiary();\r\n//         } catch (e) {\r\n//           console.log(e);\r\n//         }\r\n//       }\r\n//     };\r\n//     return (\r\n//       <Survey>\r\n//         <SurveyHandlerWrapper>\r\n//           <BackArrowWrapper\r\n//             onClick={() => {\r\n//               dispatch({\r\n//                 type: DiaryAction.SET_MANY,\r\n//                 diary: { ...state.diary, good: undefined },\r\n//                 surveyCount:\r\n//                   state.surveyCount === 0 ? 0 : state.surveyCount - 1,\r\n//                 action: state.surveyCount === 0 ? 'Description' : 'Survey',\r\n//               });\r\n//             }}>\r\n//             <BackArrow />\r\n//             <Text>이전으로</Text>\r\n//           </BackArrowWrapper>\r\n//           <Counter>\r\n//             {`치료적일기 ${currentSurveyCount + 1}/${totalSurvey}`}\r\n//           </Counter>\r\n//           <RestartWrapper\r\n//             onClick={() => {\r\n//               dispatch({\r\n//                 type: DiaryAction.SET_ACTION,\r\n//                 surveyCount: 0,\r\n//                 action: 'Survey',\r\n//               });\r\n//               // setSurveyCount(0);\r\n//               // setAction('Survey');\r\n//             }}>\r\n//             <Restart />\r\n//             <Text>처음으로</Text>\r\n//           </RestartWrapper>\r\n//         </SurveyHandlerWrapper>\r\n//         <Question>\r\n//           <Text>{currentQuestion.question}</Text>\r\n//         </Question>\r\n//         <Description>\r\n//           <Text>{currentQuestion.description}</Text>\r\n//         </Description>\r\n\r\n//         <Answer\r\n//           onKeyPress={onKeyPress}\r\n//           placeholder={'작성하기'}\r\n//           value={state.diary.content}\r\n//           onChange={onchangeDiaryContent}\r\n//         />\r\n\r\n//         {state.diary.good === undefined ? (\r\n//           <>\r\n//             <Question>\r\n//               <Text>당신은 지금, 이 일기를 쓰면서 어떤 감정이 들었나요?</Text>\r\n//             </Question>\r\n//             <Evaluation>\r\n//               <OutLineButton\r\n//                 text={'불편한 감정'}\r\n//                 onClick={() =>\r\n//                   dispatch({\r\n//                     type: DiaryAction.SET_MANY,\r\n//                     diary: { ...state.diary, good: false },\r\n//                   })\r\n//                 }></OutLineButton>\r\n//               <OutLineButton\r\n//                 text={'좋은 감정'}\r\n//                 onClick={() =>\r\n//                   dispatch({\r\n//                     type: DiaryAction.SET_MANY,\r\n//                     diary: { ...state.diary, good: true },\r\n//                   })\r\n//                 }></OutLineButton>\r\n//             </Evaluation>\r\n//           </>\r\n//         ) : state.diary.good === true ? (\r\n//           <>\r\n//             <Question>\r\n//               <Text>얼마나 좋은 감정이 들었나요?</Text>\r\n//               <TinyText>\r\n//                 (지금 이 순간 느끼는 만큼, 점수를 선택해주세요.)\r\n//               </TinyText>\r\n//             </Question>\r\n//             <Progress background={'#00695c'} />\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             <Question>\r\n//               <Text>얼마나 불편한 감정이 들었나요?</Text>\r\n//               <TinyText>\r\n//                 (지금 이 순간 느끼는 만큼, 점수를 선택해주세요.)\r\n//               </TinyText>\r\n//             </Question>\r\n//             <Progress background={'#FF5722'} />\r\n//           </>\r\n//         )}\r\n\r\n//         <OutLineButtonWrapper>\r\n//           <OutLineButton text={'계속하기'} onClick={state.handleDiary} />\r\n//         </OutLineButtonWrapper>\r\n//       </Survey>\r\n//     );\r\n//   };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport OutLineButton from './OutLineButton';\r\nimport mainImage from '../assets/image/3.jpeg';\r\nimport Life from './Life';\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 8vh 25vh 25vh 12vh 23vh;\r\n  background: white;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  display: grid;\r\n  text-align: center;\r\n`;\r\n\r\nconst OutLineButtonWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background: #aeb4bb;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-family: 'KakaoB';\r\n  font-size: 25px;\r\n`;\r\n\r\nconst MainImageWraper = styled.div`\r\n  width: 80vw;\r\n  height: 100%;\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst MainImage = styled.img`\r\n  background: #dee2e6;\r\n  -o-object-fit: cover;\r\n  object-fit: cover;\r\n  display: block;\r\n  width: auto;\r\n  height: 100%;\r\n`;\r\n\r\nexport default ({ setAction }) => {\r\n  console.log('SurveyDescription');\r\n  return (\r\n    <Wrapper>\r\n      <Title>치료적 일기</Title>\r\n      <MainImageWraper>\r\n        <MainImage src={mainImage} />\r\n      </MainImageWraper>\r\n      <TextWrapper>\r\n        {/* prettier-ignore */}\r\n        <pre>\r\n{`\r\n인간의 괴로움은 보편적이고\r\n\r\n마음의 평화를 만들어내는 법을 \r\n아는 사람은 드뭅니다. \r\n\r\n왜 그런지는 수수께끼이며 이 앱은 \r\n그 수수께끼에 대한것입니다.\r\n\r\n`}\r\n      </pre>\r\n      </TextWrapper>\r\n      <OutLineButtonWrapper>\r\n        <OutLineButton\r\n          style={{ width: '10vw' }}\r\n          text=\"시작하기\"\r\n          onClick={() => setAction('SelectQuestion')}\r\n        />\r\n      </OutLineButtonWrapper>\r\n      <Life />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\n// import React, { useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import OutLineButton from './OutLineButton';\r\n// import mainImage from '../assets/image/3.jpeg';\r\n// import Life from './Life';\r\n// import { DiaryContext, DiaryAction } from 'Routes/Diary/DiaryContext';\r\n// const Wrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-rows: 8vh 25vh 25vh 12vh 23vh;\r\n//   background: white;\r\n//   align-items: center;\r\n//   justify-items: center;\r\n// `;\r\n\r\n// const TextWrapper = styled.div`\r\n//   display: grid;\r\n//   text-align: center;\r\n// `;\r\n\r\n// const OutLineButtonWrapper = styled.div`\r\n//   display: grid;\r\n//   align-items: center;\r\n//   justify-items: center;\r\n//   background: #aeb4bb;\r\n//   width: 100%;\r\n//   height: 100%;\r\n// `;\r\n\r\n// const Title = styled.div`\r\n//   font-family: 'KakaoB';\r\n//   font-size: 25px;\r\n// `;\r\n\r\n// const MainImageWraper = styled.div`\r\n//   width: 80vw;\r\n//   height: 100%;\r\n//   display: grid;\r\n//   justify-items: center;\r\n//   align-items: center;\r\n//   max-width: 500px;\r\n// `;\r\n\r\n// const MainImage = styled.img`\r\n//   background: #dee2e6;\r\n//   -o-object-fit: cover;\r\n//   object-fit: cover;\r\n//   display: block;\r\n//   width: auto;\r\n//   height: 100%;\r\n// `;\r\n\r\n// export default () => {\r\n//   console.log('SurveyDescription');\r\n//   const { dispatch } = useContext(DiaryContext);\r\n\r\n//   return (\r\n//     <Wrapper>\r\n//       <Title>치료적 일기</Title>\r\n//       <MainImageWraper>\r\n//         <MainImage src={mainImage} />\r\n//       </MainImageWraper>\r\n//       <TextWrapper>\r\n//         {/* prettier-ignore */}\r\n//         <pre>\r\n// {`\r\n// 인간의 괴로움은 보편적이고\r\n\r\n// 마음의 평화를 만들어내는 법을\r\n// 아는 사람은 드뭅니다.\r\n\r\n// 왜 그런지는 수수께끼이며 이 앱은\r\n// 그 수수께끼에 대한것입니다.\r\n\r\n// `}\r\n//       </pre>\r\n//       </TextWrapper>\r\n//       <OutLineButtonWrapper>\r\n//         <OutLineButton\r\n//           style={{ width: '10vw' }}\r\n//           text=\"시작하기\"\r\n//           onClick={() =>\r\n//             dispatch({ type: DiaryAction.SET_ACTION, action: 'SelectQuestion' })\r\n//           }\r\n//         />\r\n//       </OutLineButtonWrapper>\r\n//       <Life />\r\n//     </Wrapper>\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport default ({ children, className }) => (\r\n  <Text className={className}>{children}</Text>\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport OutLineButton from './OutLineButton';\r\nimport { toast } from 'react-toastify';\r\nimport Text from '../Components/Text';\r\n\r\nconst SelectQuestionWrapper = styled.div`\r\n  display: grid;\r\n  background: ${props => props.theme.whiteColor};\r\n  height: 93vh;\r\n`;\r\n\r\nconst ContentsWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  grid-template-rows: 30vh 30vh 20vh 10vh;\r\n  background: ${props => props.theme.whiteColor};\r\n`;\r\n\r\nconst SelectSection = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  grid-template-columns: repeat(auto-fit, minmax(10vw, 1fr));\r\n`;\r\nconst ElementBox = styled.div`\r\n  display: grid;\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  height: 7vh;\r\n  margin: 0.5vh;\r\n`;\r\nconst ElementBoxText = styled(Text)`\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  border-radius: 15px;\r\n  background-color: white;\r\n  width: 95%;\r\n  height: 95%;\r\n`;\r\nconst StartSection = styled.div`\r\n  display: grid;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  height: 6vh;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  font-size: 1.1rem;\r\n  padding-left: 4vw;\r\n`;\r\nconst StartSectionDescription = styled.div`\r\n  display: grid;\r\n  height: 9vh;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  font-family: 'KakaoL';\r\n  font-weight: 600;\r\n  padding-left: 4vw;\r\n  font-size: 0.9rem;\r\n  line-height: 1rem;\r\n  > pre {\r\n    display: grid;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nconst EndSection = styled.div`\r\n  display: grid;\r\n  border-top: 1px solid ${props => props.theme.borderColor};\r\n  height: 6vh;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding-bottom: 1vh;\r\n  font-family: 'KakaoL';\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst OutLineButtonWrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #aeb4bb;\r\n`;\r\nexport default ({ allQuestion, updateQuestion, setAction, myQuestion }) => {\r\n  console.log('SelectQuestions');\r\n  return (\r\n    <SelectQuestionWrapper>\r\n      <ContentsWrapper>\r\n        <WhiteBox>\r\n          <StartSection>행동</StartSection>\r\n          <StartSectionDescription>\r\n            <pre>\r\n              {`어떻게 행동하고 있는지를 객관적으로 확인하는것을 통해 \r\n자신의 현재상황을 확인하는데 도움을 줄 수 있어요^-^//\r\n`}\r\n            </pre>\r\n          </StartSectionDescription>\r\n          <SelectSection>\r\n            {allQuestion\r\n              .filter(data => data.behavior)\r\n              .map(behavior => {\r\n                return (\r\n                  <ElementBox\r\n                    style={\r\n                      myQuestion.filter(element => element.id === behavior.id)\r\n                        .length\r\n                        ? { background: '#636469', color: 'white' }\r\n                        : { background: 'white', color: '#4b4c4f' }\r\n                    }\r\n                    key={behavior.id}\r\n                    onClick={event => updateQuestion(behavior.type, event)}>\r\n                    <ElementBoxText>{behavior.type}</ElementBoxText>\r\n                  </ElementBox>\r\n                );\r\n              })}\r\n          </SelectSection>\r\n          <EndSection>더보기</EndSection>\r\n        </WhiteBox>\r\n        <WhiteBox>\r\n          <StartSection>생각이나 감정 그리고 느낌</StartSection>\r\n          <StartSectionDescription>\r\n            <pre>\r\n              {`자신의 반복되는 심리적 패턴을 확인하는것을 통해 \r\n정서적 건강에 도움을 줄 수 있어요^-^//\r\n`}\r\n            </pre>\r\n          </StartSectionDescription>\r\n          <SelectSection>\r\n            {allQuestion\r\n              .filter(data => !data.behavior)\r\n              .map(emotion => (\r\n                <ElementBox\r\n                  style={\r\n                    myQuestion.filter(element => element.id === emotion.id)\r\n                      .length\r\n                      ? { background: '#636469', color: 'white' }\r\n                      : { background: 'white', color: '#4b4c4f' }\r\n                  }\r\n                  key={emotion.id}\r\n                  onClick={event => updateQuestion(emotion.type, event)}>\r\n                  <ElementBoxText>{emotion.type}</ElementBoxText>\r\n                </ElementBox>\r\n              ))}\r\n          </SelectSection>\r\n          <EndSection>더보기</EndSection>\r\n        </WhiteBox>\r\n        <WhiteBox>\r\n          <StartSection>주의할점</StartSection>\r\n          <StartSectionDescription style={{ border: 0 }}>\r\n            <pre>\r\n              {`모두 진행하는것도 좋지만 \r\n자신의 상황에 맞도록\r\n여유롭게 선택하는것이 중요해요\r\n`}\r\n            </pre>\r\n          </StartSectionDescription>\r\n        </WhiteBox>\r\n        <OutLineButtonWrapper>\r\n          <OutLineButton\r\n            text={'계속하기'}\r\n            onClick={() =>\r\n              setAction(() => {\r\n                if (myQuestion.length !== 0) {\r\n                  return 'Survey';\r\n                } else {\r\n                  toast.info('항목을 하나 이상 선택 해주세요.');\r\n                  return 'SelectQuestion';\r\n                }\r\n              })\r\n            }\r\n          />\r\n        </OutLineButtonWrapper>\r\n      </ContentsWrapper>\r\n    </SelectQuestionWrapper>\r\n  );\r\n};\r\n\r\n// import React from 'react';\r\n// import styled from 'styled-components';\r\n// import OutLineButton from './OutLineButton';\r\n// import { toast } from 'react-toastify';\r\n// import Text from '../Components/Text';\r\n// import { useContext } from 'react';\r\n// import { DiaryAction, DiaryContext } from 'Routes/Diary/DiaryContext';\r\n\r\n// const SelectQuestionWrapper = styled.div`\r\n//   display: grid;\r\n//   background: ${props => props.theme.whiteColor};\r\n//   height: 93vh;\r\n// `;\r\n\r\n// const ContentsWrapper = styled.div`\r\n//   display: grid;\r\n//   align-items: center;\r\n//   justify-items: center;\r\n//   grid-template-rows: 30vh 30vh 20vh 10vh;\r\n//   background: ${props => props.theme.whiteColor};\r\n// `;\r\n\r\n// const SelectSection = styled.div`\r\n//   display: grid;\r\n//   width: 100%;\r\n//   grid-template-columns: repeat(auto-fit, minmax(10vw, 1fr));\r\n// `;\r\n// const ElementBox = styled.div`\r\n//   display: grid;\r\n//   border: 1px solid ${props => props.theme.borderColor};\r\n//   height: 7vh;\r\n//   margin: 0.5vh;\r\n// `;\r\n// const ElementBoxText = styled(Text)`\r\n//   font-size: 0.8rem;\r\n// `;\r\n\r\n// const WhiteBox = styled.div`\r\n//   border: 1px solid ${props => props.theme.borderColor};\r\n//   border-radius: 15px;\r\n//   background-color: white;\r\n//   width: 95%;\r\n//   height: 95%;\r\n// `;\r\n// const StartSection = styled.div`\r\n//   display: grid;\r\n//   border-bottom: 1px solid ${props => props.theme.borderColor};\r\n//   height: 6vh;\r\n//   align-items: center;\r\n//   font-family: 'KakaoB';\r\n//   font-size: 1.1rem;\r\n//   padding-left: 4vw;\r\n// `;\r\n// const StartSectionDescription = styled.div`\r\n//   display: grid;\r\n//   height: 9vh;\r\n//   border-bottom: 1px solid ${props => props.theme.borderColor};\r\n//   font-family: 'KakaoL';\r\n//   font-weight: 600;\r\n//   padding-left: 4vw;\r\n//   font-size: 0.9rem;\r\n//   line-height: 1rem;\r\n//   > pre {\r\n//     display: grid;\r\n//     align-self: center;\r\n//   }\r\n// `;\r\n\r\n// const EndSection = styled.div`\r\n//   display: grid;\r\n//   border-top: 1px solid ${props => props.theme.borderColor};\r\n//   height: 6vh;\r\n//   align-items: center;\r\n//   text-align: center;\r\n//   padding-bottom: 1vh;\r\n//   font-family: 'KakaoL';\r\n//   font-size: 1.1rem;\r\n// `;\r\n\r\n// const OutLineButtonWrapper = styled.div`\r\n//   display: grid;\r\n//   align-items: center;\r\n//   justify-items: center;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background: #aeb4bb;\r\n// `;\r\n// export default () => {\r\n//   console.log('SelectQuestions');\r\n//   const { state, dispatch } = useContext(DiaryContext);\r\n//   console.log('state : ', state);\r\n//   return (\r\n//     <SelectQuestionWrapper>\r\n//       <ContentsWrapper>\r\n//         <WhiteBox>\r\n//           <StartSection>행동</StartSection>\r\n//           <StartSectionDescription>\r\n//             <pre>\r\n//               {`어떻게 행동하고 있는지를 객관적으로 확인하는것을 통해\r\n// 자신의 현재상황을 확인하는데 도움을 줄 수 있어요^-^//\r\n// `}\r\n//             </pre>\r\n//           </StartSectionDescription>\r\n//           <SelectSection>\r\n//             {state.allQuestion\r\n//               .filter(data => data.behavior)\r\n//               .map(behavior => {\r\n//                 return (\r\n//                   <ElementBox\r\n//                     style={\r\n//                       state.myQuestion.filter(\r\n//                         element => element.id === behavior.id\r\n//                       ).length\r\n//                         ? { background: '#636469', color: 'white' }\r\n//                         : { background: 'white', color: '#4b4c4f' }\r\n//                     }\r\n//                     key={behavior.id}\r\n//                     onClick={async event => {\r\n//                       event.preventDefault();\r\n//                       await state.updateMyQuestion({\r\n//                         variables: { question: behavior.type },\r\n//                       });\r\n//                       await state.refetchMyQuestion();\r\n//                     }}>\r\n//                     <ElementBoxText>{behavior.type}</ElementBoxText>\r\n//                   </ElementBox>\r\n//                 );\r\n//               })}\r\n//           </SelectSection>\r\n//           <EndSection>더보기</EndSection>\r\n//         </WhiteBox>\r\n//         <WhiteBox>\r\n//           <StartSection>생각이나 감정 그리고 느낌</StartSection>\r\n//           <StartSectionDescription>\r\n//             <pre>\r\n//               {`자신의 반복되는 심리적 패턴을 확인하는것을 통해\r\n// 정서적 건강에 도움을 줄 수 있어요^-^//\r\n// `}\r\n//             </pre>\r\n//           </StartSectionDescription>\r\n//           <SelectSection>\r\n//             {state.allQuestion\r\n//               .filter(data => !data.behavior)\r\n//               .map(emotion => (\r\n//                 <ElementBox\r\n//                   style={\r\n//                     state.myQuestion.filter(\r\n//                       element => element.id === emotion.id\r\n//                     ).length\r\n//                       ? { background: '#636469', color: 'white' }\r\n//                       : { background: 'white', color: '#4b4c4f' }\r\n//                   }\r\n//                   key={emotion.id}\r\n//                   onClick={event => state.handleQuestion(emotion.type, event)}>\r\n//                   <ElementBoxText>{emotion.type}</ElementBoxText>\r\n//                 </ElementBox>\r\n//               ))}\r\n//           </SelectSection>\r\n//           <EndSection>더보기</EndSection>\r\n//         </WhiteBox>\r\n//         <WhiteBox>\r\n//           <StartSection>주의할점</StartSection>\r\n//           <StartSectionDescription style={{ border: 0 }}>\r\n//             <pre>\r\n//               {`모두 진행하는것도 좋지만\r\n// 자신의 상황에 맞도록\r\n// 여유롭게 선택하는것이 중요해요\r\n// `}\r\n//             </pre>\r\n//           </StartSectionDescription>\r\n//         </WhiteBox>\r\n//         <OutLineButtonWrapper>\r\n//           <OutLineButton\r\n//             text={'계속하기'}\r\n//             onClick={() =>\r\n//               dispatch({\r\n//                 type: DiaryAction.SET_ACTION,\r\n//                 action:\r\n//                   state.myQuestion.length !== 0\r\n//                     ? 'Survey'\r\n//                     : () => {\r\n//                         toast.info('항목을 하나 이상 선택 해주세요.');\r\n//                         return 'SelectQuestion';\r\n//                       },\r\n//                 // () => {\r\n//                 //   if (state.myQuestion.length !== 0) {\r\n//                 //     return 'Survey';\r\n//                 //   } else {\r\n//                 //     toast.info('항목을 하나 이상 선택 해주세요.');\r\n//                 //     return 'SelectQuestion';\r\n//                 //   }\r\n//                 // },\r\n//               })\r\n//             }\r\n//           />\r\n//         </OutLineButtonWrapper>\r\n//       </ContentsWrapper>\r\n//     </SelectQuestionWrapper>\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Tab from '../../Components/Tab';\r\nimport Survey from '../../Components/Survey';\r\nimport SurveyDescription from '../../Components/SurveyDescription';\r\nimport SelectQuestion from '../../Components/SelectQuestions';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 7vh;\r\n`;\r\n\r\nexport default ({\r\n  myQuestion,\r\n  allQuestion,\r\n  action,\r\n  setAction,\r\n  updateMyQuestion,\r\n  setSurveyCount,\r\n  updateQuestion,\r\n  myQuestionRefetch,\r\n  surveyCount,\r\n  createDiary,\r\n  diary,\r\n  setDiary,\r\n  history,\r\n}) => {\r\n  console.log('DiaryPresenter');\r\n  return (\r\n    <Wrapper>\r\n      <Tab />\r\n      {action === 'Description' && <SurveyDescription setAction={setAction} />}\r\n      {action === 'SelectQuestion' && (\r\n        <SelectQuestion\r\n          allQuestion={allQuestion}\r\n          myQuestion={myQuestion}\r\n          updateMyQuestion={updateMyQuestion}\r\n          updateQuestion={updateQuestion}\r\n          setAction={setAction}\r\n          myQuestionRefetch={myQuestionRefetch}\r\n        />\r\n      )}\r\n      {action === 'Survey' &&\r\n        (surveyCount === false ? (\r\n          history.push('/me')\r\n        ) : (\r\n          <>\r\n            <Survey\r\n              myQuestion={myQuestion}\r\n              surveyCount={surveyCount}\r\n              setSurveyCount={setSurveyCount}\r\n              createDiary={createDiary}\r\n              setAction={setAction}\r\n              diary={diary}\r\n              setDiary={setDiary}\r\n            />\r\n          </>\r\n        ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\n// import React, { useEffect, useContext } from 'react';\r\n// import styled from 'styled-components';\r\n// import Tab from '../../Components/Tab';\r\n// import Survey from '../../Components/Survey';\r\n// import SurveyDescription from '../../Components/SurveyDescription';\r\n// import SelectQuestion from '../../Components/SelectQuestions';\r\n// import { DiaryContext, DiaryAction } from './DiaryContext';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\n// const Wrapper = styled.div`\r\n//   display: grid;\r\n//   grid-template-rows: 7vh;\r\n// `;\r\n\r\n// export default ({\r\n//   myQuestion,\r\n//   allQuestion,\r\n//   updateMyQuestion,\r\n//   refetchMyQuestion,\r\n//   createMyDiary,\r\n//   handleDiary,\r\n//   handleQuestion,\r\n// }) => {\r\n//   let history = useHistory();\r\n//   const { state, dispatch } = useContext(DiaryContext);\r\n//   useEffect(\r\n//     () =>\r\n//       dispatch({\r\n//         type: DiaryAction.PRE_LOAD,\r\n//         allQuestion,\r\n//         myQuestion,\r\n//         refetchMyQuestion,\r\n//         createMyDiary,\r\n//         updateMyQuestion,\r\n//         handleDiary,\r\n//         handleQuestion,\r\n//       }),\r\n//     [\r\n//       allQuestion,\r\n//       createMyDiary,\r\n//       dispatch,\r\n//       handleDiary,\r\n//       handleQuestion,\r\n//       myQuestion,\r\n//       refetchMyQuestion,\r\n//       updateMyQuestion,\r\n//     ]\r\n//   );\r\n//   console.log('DiaryPresenter');\r\n//   return (\r\n//     <Wrapper>\r\n//       <Tab />\r\n//       {state.action === 'Description' && <SurveyDescription />}\r\n//       {state.action === 'SelectQuestion' && <SelectQuestion />}\r\n//       {state.action === 'Survey' &&\r\n//         (state.surveyCount === false ? (\r\n//           history.push('/me')\r\n//         ) : (\r\n//           <>\r\n//             <Survey\r\n//             // myQuestion={myQuestion}\r\n//             // surveyCount={surveyCount}\r\n//             // setSurveyCount={setSurveyCount}\r\n//             // createDiary={createDiary}\r\n//             // setAction={setAction}\r\n//             // diary={diary}\r\n//             // setDiary={setDiary}\r\n//             />\r\n//           </>\r\n//         ))}\r\n//     </Wrapper>\r\n//   );\r\n// };\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const GET_ALLDIARYQUESTION = gql`\r\n  query getAllQuestion {\r\n    getAllQuestion {\r\n      id\r\n      type\r\n      description\r\n      question\r\n      behavior\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_QUESTIONSOFME = gql`\r\n  query getQuestionsOfMe {\r\n    getQuestionsOfMe {\r\n      id\r\n      type\r\n      description\r\n      question\r\n      behavior\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_MYQUESTION = gql`\r\n  mutation updateMyQuestion($question: String!) {\r\n    updateMyQuestion(question: $question)\r\n  }\r\n`;\r\n\r\nexport const CREATE_MYDIARY = gql`\r\n  mutation createMyDiary(\r\n    $content: String\r\n    $good: Boolean\r\n    $score: Int\r\n    $questionId: String\r\n  ) {\r\n    createMyDiary(\r\n      content: $content\r\n      good: $good\r\n      score: $score\r\n      questionId: $questionId\r\n    )\r\n  }\r\n`;\r\n","import DiaryContainer from './DiaryContainer';\r\nexport default DiaryContainer;\r\n","import React, { useState } from 'react';\r\nimport DiaryPresenter from './DiaryPresenter';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  GET_ALLDIARYQUESTION,\r\n  UPDATE_MYQUESTION,\r\n  GET_QUESTIONSOFME,\r\n  CREATE_MYDIARY,\r\n} from './DiaryQuries';\r\nimport Loader from '../../Components/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nexport default () => {\r\n  console.log('DiaryContainer');\r\n  //state\r\n  const [action, setAction] = useState('SelectQuestion');\r\n  const [diary, setDiary] = useState({\r\n    good: undefined,\r\n    content: '',\r\n  });\r\n  const [surveyCount, setSurveyCount] = useState(0);\r\n  let history = useHistory();\r\n  //query\r\n\r\n  const {\r\n    data: myQuestionData,\r\n    loading: myQuestionLoading,\r\n    refetch: myQuestionRefetch,\r\n  } = useQuery(GET_QUESTIONSOFME);\r\n  const { data: allQuestionData, loading: allQuestionLoading } = useQuery(\r\n    GET_ALLDIARYQUESTION\r\n  );\r\n\r\n  //mutation\r\n  const [createMyDiary] = useMutation(CREATE_MYDIARY);\r\n  const [updateMyQuestion] = useMutation(UPDATE_MYQUESTION);\r\n\r\n  //function\r\n  const createDiary = async () => {\r\n    await createMyDiary({\r\n      variables: {\r\n        content: diary.content,\r\n        good: diary.good,\r\n        score: diary.score,\r\n        questionId: diary.questionId,\r\n      },\r\n    }).catch(e => console.log(e));\r\n    const surveyLength = myQuestionData.getQuestionsOfMe.length;\r\n    setSurveyCount(surveyLength - 1 === surveyCount ? false : surveyCount + 1);\r\n    setDiary(diary => ({\r\n      ...diary,\r\n      good: undefined,\r\n      content: '',\r\n      score: undefined,\r\n    }));\r\n    return setAction('Survey');\r\n  };\r\n  const updateQuestion = async (element, event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await updateMyQuestion({\r\n        variables: { question: element },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    await myQuestionRefetch();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {(allQuestionLoading || myQuestionLoading) && <Loader />}\r\n      {!(allQuestionLoading || myQuestionLoading) &&\r\n        allQuestionData &&\r\n        myQuestionData && (\r\n          <DiaryPresenter\r\n            //state\r\n            action={action}\r\n            setAction={setAction}\r\n            diary={diary}\r\n            setDiary={setDiary}\r\n            surveyCount={surveyCount}\r\n            setSurveyCount={setSurveyCount}\r\n            history={history}\r\n            //function\r\n            createDiary={createDiary}\r\n            updateMyQuestion={updateMyQuestion}\r\n            //query\r\n            allQuestion={allQuestionData.getAllQuestion}\r\n            myQuestion={myQuestionData.getQuestionsOfMe}\r\n            //mutation\r\n            updateQuestion={updateQuestion}\r\n            myQuestionRefetch={myQuestionRefetch}\r\n          />\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\n// import React, { useReducer, useMemo, useCallback } from 'react';\r\n// import DiaryPresenter from './DiaryPresenter';\r\n// import { useQuery, useMutation } from '@apollo/react-hooks';\r\n// import {\r\n//   GET_ALLDIARYQUESTION,\r\n//   UPDATE_MYQUESTION,\r\n//   GET_QUESTIONSOFME,\r\n//   CREATE_MYDIARY,\r\n// } from './DiaryQuries';\r\n// import Loader from '../../Components/Loader';\r\n// import { reducer, DiaryContext, DiaryAction } from './DiaryContext';\r\n\r\n// const diaryInitialState = {\r\n//   action: 'Description',\r\n//   surveyCount: 0,\r\n//   diary: {\r\n//     good: undefined,\r\n//   },\r\n// };\r\n\r\n// export default () => {\r\n//   console.log('DiaryContainer');\r\n//   const [state, dispatch] = useReducer(reducer, diaryInitialState);\r\n//   //query\r\n//   const { data: allQuestionData, loading: allQuestionLoading } = useCallback(\r\n//     useQuery(GET_ALLDIARYQUESTION)\r\n//   );\r\n//   const {\r\n//     data: myQuestionData,\r\n//     loading: myQuestionLoading,\r\n//     refetch: refetchMyQuestion,\r\n//   } = useQuery(GET_QUESTIONSOFME);\r\n\r\n//   //mutation\r\n//   const [createMyDiary, { loading: createMyDiaryLoading }] = useCallback(\r\n//     useMutation(CREATE_MYDIARY)\r\n//   );\r\n//   const [updateMyQuestion, { loading: updateMyQuestionLoading }] = useCallback(\r\n//     useMutation(UPDATE_MYQUESTION)\r\n//   );\r\n\r\n//   //function\r\n//   const handleDiary = useCallback(() => {\r\n//     console.log('handleDiary');\r\n//     dispatch({ type: DiaryAction.CREATE_MYDIARY });\r\n//     dispatch({ type: DiaryAction.COUNT_SURVEY });\r\n//     dispatch({ type: DiaryAction.INIT_DIARY });\r\n//     dispatch({ type: DiaryAction.SETACTION, action: 'Survey' });\r\n//   }, []);\r\n\r\n//   const handleQuestion = useCallback(\r\n//     async (element, event) => {\r\n//       console.log('event : ', event);\r\n//       await event.preventDefault();\r\n//       console.log('handleQuestion');\r\n//       console.log(element);\r\n//       dispatch({ type: DiaryAction.UPDATE_MYQUESTION, question: element });\r\n//        await refetchMyQuestion();\r\n\r\n//     },\r\n//     // eslint-disable-next-line\r\n//     []\r\n//   );\r\n\r\n//   const value = useMemo(() => ({ state, dispatch }), [state]);\r\n//   if (\r\n//     allQuestionLoading ||\r\n//     myQuestionLoading ||\r\n//     createMyDiaryLoading ||\r\n//     updateMyQuestionLoading\r\n//   )\r\n//     return <Loader />;\r\n\r\n//   // handleDiary,\r\n//   // handleQuestion,\r\n//   // allQuestion: allQuestionData.getAllQuestion,\r\n//   // myQuestion: myQuestionData.getQuestionsOfMe,\r\n//   // createMyDiary,\r\n//   // updateMyQuestion,\r\n//   // refetchMyQuestion,\r\n//   return (\r\n//     <DiaryContext.Provider value={value}>\r\n//       <DiaryPresenter\r\n//         //function\r\n//         handleDiary={handleDiary}\r\n//         handleQuestion={handleQuestion}\r\n//         //query\r\n//         allQuestion={allQuestionData.getAllQuestion}\r\n//         myQuestion={myQuestionData.getQuestionsOfMe}\r\n//         //mutation\r\n//         createMyDiary={createMyDiary}\r\n//         updateMyQuestion={updateMyQuestion}\r\n//         refetchMyQuestion={refetchMyQuestion}\r\n//       />\r\n//     </DiaryContext.Provider>\r\n//   );\r\n// };\r\n","export default [\r\n  { name: 'RED', color: '#F44336' },\r\n  { name: 'PINK', color: '#E91E63' },\r\n  { name: 'PURPLE', color: '#9C27B0' },\r\n  { name: 'DEEPPURPLE', color: '#673AB7' },\r\n  { name: 'WHALEBLUE', color: '#1A232C' },\r\n  { name: 'INDEGO', color: '#3F51B5' },\r\n  { name: 'FACEBLUE', color: '#3B5998' },\r\n  { name: 'BLUE', color: '#2196F3' },\r\n  { name: 'LIGHTBLUE', color: '#03A9F4' },\r\n  { name: 'TEAL', color: '#009688' },\r\n  { name: 'GREEN', color: '#4CAF50' },\r\n  { name: 'LIGHTGREEN', color: '#8BC34A' },\r\n  { name: 'LIME', color: '#CDDC39' },\r\n  { name: 'YELLOW', color: '#FFEB3B' },\r\n  { name: 'AMBER', color: '#FFC107' },\r\n  { name: 'ORANGE', color: '#FF9800' },\r\n  { name: 'DEEPORANGE', color: '#FF5722' },\r\n  { name: 'BROWN', color: '#795548' },\r\n  { name: 'GREY', color: '#9E9E9E' },\r\n  { name: 'DEEPBLACK', color: '#1C1C1C' },\r\n];\r\n","import styled from 'styled-components';\r\nimport Input from '../../Components/Input';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  background: white;\r\n  grid-template-rows: 8vh 84vh 8vh;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\nexport const TitleText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\nexport const ChatHandlerWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 4fr 3fr;\r\n  height: 7vh;\r\n  justify-items: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${props => props.theme.borderColor};\r\n  background-color: ${props => props.theme.activeColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nexport const BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nexport const Title = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  color: white;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nexport const RestartWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\n\r\nexport const ScrollAble = styled.div`\r\n  display: block;\r\n  overflow-y: scroll;\r\n  transform: rotate(180deg);\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ChatWrapper = styled.div`\r\n  display: grid;\r\n  transform: rotate(180deg);\r\n  grid-gap: 1vh;\r\n  background: white;\r\n  padding: 2vw;\r\n  margin-bottom: 1vh;\r\n  align-content: end;\r\n  align-self: end;\r\n`;\r\n\r\nexport const MyChatText = styled.div`\r\n  display: grid;\r\n  padding: 2vw;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: black;\r\n`;\r\n\r\nexport const NotMyChatText = styled.div`\r\n  display: grid;\r\n  padding: 2vw;\r\n  align-self: start;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\n\r\nexport const MyBox = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: end;\r\n  background: ${props => props.theme.myChatGrey};\r\n  border-radius: 13px;\r\n`;\r\n\r\nexport const NotMyBoxWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 1vh;\r\n  grid-auto-rows: 15vw;\r\n  grid-template-columns: 15vw minmax(0, 60vw);\r\n  height: 100%;\r\n`;\r\n\r\nexport const NotMyBox = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: start;\r\n  background: ${props => props.theme.notMyChatGrey};\r\n  border-radius: 13px;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  height: 85%;\r\n  width: 85%;\r\n  border-radius: 20px;\r\n  background: ${props => props.theme.dimgreyColor};\r\n`;\r\n\r\nexport const AvatarText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\n\r\nexport const DateWapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 3fr 3fr;\r\n  margin-bottom: 10vw;\r\n`;\r\nexport const DateText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 3vw;\r\n  color: dimgrey;\r\n`;\r\nexport const DateTail = styled.div`\r\n  border-bottom: 0.5vw solid #dee2e6;\r\n  margin-bottom: 0.4vw;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: grid;\r\n  height: 8vh;\r\n  align-self: end;\r\n  grid-template-columns: 1fr 1fr 6fr 1fr;\r\n`;\r\nexport const Emoji = styled.div`\r\n  display: grid;\r\n  width: 8vh;\r\n  height: 8vh;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background: ${props => props.theme.activeColor};\r\n`;\r\n\r\nexport const SvgWrapper = styled.div`\r\n  display: grid;\r\n`;\r\nexport const Empty = styled.div`\r\n  display: grid;\r\n  background: white;\r\n`;\r\nexport const StyledInput = styled(Input)`\r\n  display: grid;\r\n  height: 100%;\r\n  font-size: 1.5rem;\r\n  padding: 0;\r\n  outline: none;\r\n  border: none;\r\n`;\r\nexport const Send = styled.div`\r\n  display: grid;\r\n  width: 8vh;\r\n  height: 8vh;\r\n  background: ${props => props.theme.activeColor};\r\n`;\r\n\r\nexport const SendText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1rem;\r\n  color: white;\r\n`;\r\n","import { createContext } from 'react';\r\n\r\nexport const ThemeContext = createContext({\r\n  action: 'theme',\r\n});\r\n\r\nexport const ThemeAction = {\r\n  PRE_LOAD: 'PRE_LOAD',\r\n  SELECT_COLOR: 'SELECT_COLOR',\r\n  GO_BACK: 'GO_BACK',\r\n  SET_COLOR: 'SET_COLOR',\r\n};\r\n\r\nconst setColor = async state => {\r\n  await state.createMyColor();\r\n  return await { ...state };\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ThemeAction.PRE_LOAD:\r\n      return {\r\n        ...state,\r\n        readMyData: action.readMyData,\r\n        createMyColor: action.createMyColor,\r\n      };\r\n    case ThemeAction.SELECT_COLOR:\r\n      return {\r\n        ...state,\r\n        color: action.color,\r\n        action: 'example',\r\n      };\r\n    case ThemeAction.GO_BACK:\r\n      return {\r\n        ...state,\r\n        action: 'theme',\r\n      };\r\n    case ThemeAction.SET_COLOR:\r\n      return setColor(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport {\r\n  ScrollAble,\r\n  MyChatText,\r\n  NotMyChatText,\r\n  MyBox,\r\n  NotMyBoxWrapper,\r\n  NotMyBox,\r\n  Avatar,\r\n  AvatarText,\r\n  DateWapper,\r\n  DateText,\r\n  DateTail,\r\n} from '../Routes/Story/StoryCSS';\r\nimport { BackArrow } from './Icons';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Icon } from 'antd';\r\nimport { ThemeContext, ThemeAction } from 'Routes/Theme/ThemeContext';\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 8vh 5vh 8vh 5vh 40vh 5vh;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  color: white;\r\n`;\r\nconst DecriptionBox = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: white;\r\n  background: #1c1c1c;\r\n`;\r\n\r\nconst ChatWrapper = styled.div`\r\n  display: grid;\r\n  transform: rotate(180deg);\r\n  grid-gap: 1vh;\r\n  background: white;\r\n  padding: 2vw;\r\n  align-content: end;\r\n  align-self: end;\r\n`;\r\nconst ThemeHandlerWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 4fr 3fr;\r\n  justify-items: center;\r\n  align-items: center;\r\n  background-color: ${props => props.theme.activeColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst BackArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nconst Title = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  font-family: 'KakaoB';\r\n  color: white;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst ArrowWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\nconst TitleText = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n`;\r\nconst SvgWrapper = styled.div`\r\n  display: grid;\r\n  transform: rotate(180deg);\r\n`;\r\nconst TabWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  background: ${props => props.theme.whiteColor};\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst TimelineWrapper = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  background: white;\r\n  padding: 10vw;\r\n  padding-top: 7vw;\r\n`;\r\nconst Timeline = styled.div`\r\n  display: grid;\r\n  grid-column: 100%;\r\n  grid-auto-rows: 17vh;\r\n`;\r\nconst TimelineTail = styled.div`\r\n  position: absolute;\r\n  height: calc(100% - 2vw);\r\n  left: 2vw;\r\n  top: 3vw;\r\n  border-left: 2vw solid ${props => props.theme.lightGreyColor};\r\n`;\r\n\r\nconst TimlineCircle = styled.div`\r\n  position: absolute;\r\n  width: 6vw;\r\n  height: 6vw;\r\n  background-color: ${props => props.theme.activeColor};\r\n  border-radius: 100px;\r\n  top: 0.5vw;\r\n`;\r\n\r\nconst TimelineItem = styled.div`\r\n  position: relative;\r\n`;\r\nconst TimelineItemsWrapper = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-left: 7vw;\r\n  grid-template-areas:\r\n    'type good good'\r\n    'content content content'\r\n    'content content content'\r\n    'score score score'\r\n    'score score score';\r\n`;\r\nconst Type = styled.div`\r\n  font-family: 'KakaoB';\r\n  align-self: start;\r\n  justify-self: start;\r\n  font-size: 6vw;\r\n  grid-area: type;\r\n  padding-top: 0.5vw;\r\n`;\r\nconst Content = styled.div`\r\n  font-size: 5vw;\r\n  padding-top: 1vw;\r\n  grid-area: content;\r\n  overflow-y: hidden;\r\n  -webkit-line-clamp: 2;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst Good = styled.div`\r\n  display: grid;\r\n  align-self: start;\r\n  justify-self: end;\r\n  grid-area: good;\r\n  font-size: 4vw;\r\n  border: 3px solid ${props => props.theme.activeColor};\r\n  border-radius: 30px;\r\n  padding: 1vw;\r\n  bottom: 2vw;\r\n`;\r\nconst Score = styled.div`\r\n  display: grid;\r\n  grid-area: score;\r\n`;\r\n\r\nexport default () => {\r\n  const { state, dispatch } = useContext(ThemeContext);\r\n  const customColor = state.color;\r\n  const Tab = styled(NavLink)`\r\n    z-index: 10;\r\n    display: grid;\r\n    > i {\r\n      display: grid;\r\n    }\r\n    i > svg {\r\n      width: 50%;\r\n      height: 50%;\r\n      align-self: center;\r\n      justify-self: center;\r\n      color: ${props => props.theme.dimgreyColor};\r\n    }\r\n\r\n    &.active {\r\n      & {\r\n        border-bottom: 0.5vh solid ${customColor};\r\n      }\r\n      > i > svg {\r\n        color: ${customColor};\r\n      }\r\n    }\r\n  `;\r\n  console.log('ThemeExample');\r\n  const MyName = state.readMyData.readMyData.userName;\r\n  return (\r\n    <Wrapper>\r\n      <ThemeHandlerWrapper style={{ background: customColor }}>\r\n        <BackArrowWrapper\r\n          onClick={() => dispatch({ type: ThemeAction.GO_BACK })}>\r\n          <BackArrow />\r\n          <Text>다시고르기</Text>\r\n        </BackArrowWrapper>\r\n        <Title>\r\n          <TitleText>확인하기</TitleText>\r\n        </Title>\r\n        <ArrowWrapper\r\n          onClick={async () => {\r\n            await dispatch({ type: ThemeAction.SET_COLOR });\r\n            await document.location.reload();\r\n          }}>\r\n          <Text>이걸로하기</Text>\r\n          <SvgWrapper>\r\n            <BackArrow />\r\n          </SvgWrapper>\r\n        </ArrowWrapper>\r\n      </ThemeHandlerWrapper>\r\n      <DecriptionBox>\r\n        <Text>탭의 색깔을 확인해보세요</Text>\r\n      </DecriptionBox>\r\n      <TabWrapper>\r\n        <Tab to={'/theme'} activeClassName=\"active\" replace>\r\n          <Icon type=\"team\" />\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <Icon type=\"read\" />\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <Icon type=\"sound\" />\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <Icon type=\"message\" />\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <Icon type=\"user\" />\r\n        </Tab>\r\n        <Tab to={'/theme'} replace>\r\n          <Icon type=\"menu\" />\r\n        </Tab>\r\n      </TabWrapper>\r\n      <DecriptionBox>\r\n        <Text>작성될 일기를 확인해보세요</Text>\r\n      </DecriptionBox>\r\n      <TimelineWrapper>\r\n        <Timeline>\r\n          <TimelineItem>\r\n            <TimelineTail />\r\n            <TimlineCircle style={{ background: customColor }} />\r\n            <TimelineItemsWrapper>\r\n              <Type>오전</Type>\r\n              <Good style={{ border: `3px solid ${customColor}` }}>행동</Good>\r\n              <Content>\r\n                {/* prettier-ignore */}\r\n                <pre>\r\n{\r\n`오전에 출근해서 개발을 했다.`\r\n}\r\n                  </pre>\r\n              </Content>\r\n              <Score>긍정적 느낌 6</Score>\r\n            </TimelineItemsWrapper>\r\n          </TimelineItem>\r\n        </Timeline>\r\n        <Timeline>\r\n          <TimelineItem>\r\n            <TimelineTail />\r\n            <TimlineCircle style={{ background: customColor }} />\r\n            <TimelineItemsWrapper>\r\n              <Type>잠들기 전</Type>\r\n              <Good style={{ border: `3px solid ${customColor}` }}>\r\n                감정이나 느낌\r\n              </Good>\r\n              <Content>\r\n                {/* prettier-ignore */}\r\n                <pre>\r\n{\r\n`아무 감정이 안느껴진다.`\r\n}\r\n                  </pre>\r\n              </Content>\r\n              <Score>부정적 느낌 4</Score>\r\n            </TimelineItemsWrapper>\r\n          </TimelineItem>\r\n        </Timeline>\r\n      </TimelineWrapper>\r\n      <DecriptionBox>\r\n        <Text>상대방에게 보일 닉네임의 색깔을 확인해보세요</Text>\r\n      </DecriptionBox>\r\n      <ScrollAble>\r\n        <ChatWrapper>\r\n          <DateWapper>\r\n            <DateTail />\r\n            <DateText>{moment(new Date()).format('YYYY년 MM월 DD일')}</DateText>\r\n            <DateTail />\r\n          </DateWapper>\r\n          <NotMyBoxWrapper>\r\n            <Avatar style={{ background: customColor }}>\r\n              <AvatarText>{MyName}</AvatarText>\r\n            </Avatar>\r\n            <NotMyBox>\r\n              <NotMyChatText>안녕하세요</NotMyChatText>\r\n            </NotMyBox>\r\n          </NotMyBoxWrapper>\r\n          <MyBox>\r\n            <MyChatText>안녕하세요</MyChatText>\r\n          </MyBox>\r\n        </ChatWrapper>\r\n      </ScrollAble>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 8vh 5vh;\r\n`;\r\n\r\nexport const ThemeWrapper = styled.div`\r\n  display: grid;\r\n  background: white;\r\n`;\r\n\r\nexport const ThemeItem = styled.div`\r\n  display: grid;\r\n  color: white;\r\n  padding: 1vw;\r\n  font-size: 1rem;\r\n`;\r\nexport const Title = styled.div`\r\n  display: grid;\r\n  font-family: 'KakaoB';\r\n  font-size: 1.5rem;\r\n  align-items: center;\r\n  justify-items: center;\r\n  color: white;\r\n  background: #1c1c1c;\r\n`;\r\n\r\nexport const TinyText = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: black;\r\n  background: white;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  display: grid;\r\n  align-self: center;\r\n  justify-self: center;\r\n`;\r\n\r\nexport const CheckWrapper = styled.div`\r\n  display: grid;\r\n  align-self: end;\r\n  justify-self: end;\r\n  padding: 1vw;\r\n\r\n  :focus {\r\n    transition: all 0.2s ease;\r\n    transform: rotate(1turn);\r\n  }\r\n`;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport CustomTheme from 'Styles/CustomTheme';\r\nimport { Check } from 'Components/Icons';\r\nimport ThemeExample from 'Components/ThemeExample';\r\nimport { ThemeContext, ThemeAction } from './ThemeContext';\r\nimport {\r\n  Wrapper,\r\n  ThemeWrapper,\r\n  ThemeItem,\r\n  Title,\r\n  TinyText,\r\n  Text,\r\n  CheckWrapper,\r\n} from './ThemeCSS';\r\n\r\nexport default ({ readMyData, createMyColor }) => {\r\n  console.log('initContext : ', ThemeContext);\r\n  const { state, dispatch } = useContext(ThemeContext);\r\n  useEffect(() => {\r\n    dispatch({ type: ThemeAction.PRE_LOAD, readMyData, createMyColor });\r\n  }, [dispatch, readMyData, createMyColor]);\r\n\r\n  console.log(state);\r\n  return (\r\n    <>\r\n      {state.action === 'theme' && (\r\n        <Wrapper>\r\n          <Title>\r\n            <Text>좋아하는 색깔을 골라주세요</Text>\r\n          </Title>\r\n          <TinyText>\r\n            <Text>이 색은 채팅할때 닉네임색, 테마에 적용될거에요!</Text>\r\n          </TinyText>\r\n          <ThemeWrapper>\r\n            {CustomTheme.map(theme => (\r\n              <ThemeItem\r\n                key={theme.name}\r\n                style={{ background: theme.color }}\r\n                onClick={() => {\r\n                  dispatch({\r\n                    type: ThemeAction.SELECT_COLOR,\r\n                    color: theme.color,\r\n                  });\r\n                }}>\r\n                {theme.name}\r\n                <CheckWrapper>\r\n                  <Check />\r\n                </CheckWrapper>\r\n              </ThemeItem>\r\n            ))}\r\n          </ThemeWrapper>\r\n        </Wrapper>\r\n      )}\r\n      {state.action === 'example' && <ThemeExample />}\r\n    </>\r\n  );\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const CREATE_MYCOLOR = gql`\r\n  mutation ceateMyColor($avatar: String!) {\r\n    createMyColor(avatar: $avatar)\r\n  }\r\n`;\r\n","import React, { useReducer, useMemo } from 'react';\r\nimport ThemePresenter from './ThemePresenter';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { CREATE_MYCOLOR } from './ThemeQueries';\r\nimport { READ_MYDATA } from '../../sharedQueries';\r\nimport Loader from 'Components/Loader';\r\nimport { reducer, ThemeContext } from './ThemeContext';\r\n\r\nconst themeInitialState = {\r\n  action: 'theme',\r\n  color: '',\r\n};\r\n\r\nexport default () => {\r\n  const [state, dispatch] = useReducer(reducer, themeInitialState);\r\n  const { data: readMyData, loading: myDataLoading } = useQuery(READ_MYDATA, {\r\n    variables: { avatar: state.color },\r\n  });\r\n  const [createMyColor, { loading: createMyColorLoading }] = useMutation(\r\n    CREATE_MYCOLOR,\r\n    {\r\n      variables: { avatar: state.color },\r\n    }\r\n  );\r\n  const value = useMemo(() => ({ state, dispatch }), [state]);\r\n\r\n  if (myDataLoading || createMyColorLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      <ThemePresenter readMyData={readMyData} createMyColor={createMyColor} />\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import ThemeContainer from './ThemeContainer';\r\nexport default ThemeContainer;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Auth from '../Routes/Auth';\nimport Feed from '../Routes/Feed';\nimport Alarm from '../Routes/Alarm';\nimport Story from '../Routes/Story';\nimport Etc from '../Routes/Etc';\nimport Me from '../Routes/Me';\nimport Search from '../Routes/Search';\nimport Diary from '../Routes/Diary';\nimport Theme from '../Routes/Theme';\nimport App from './App';\n\nconst LoggedInRoutes = () => {\n  console.log('loggedin');\n  return (\n    <Router>\n      <Route path={'/feed'} component={Feed} />\n      <Route path={'/search'} component={Search} />\n      <Route path={'/diary'} component={Diary} />\n      <Route path={'/alarm'} component={Alarm} />\n      <Route path={'/story'} component={Story} />\n      <Route path={'/me'} component={Me} />\n      <Route path={'/etc'} component={Etc} />\n      <Route path={'/auth'} component={Auth} />\n      <Route path={'/theme'} component={Theme} />\n      <Route path={'/app'} component={App} />\n      <Redirect from={'*'} to={'/diary'} />\n    </Router>\n  );\n};\n\nconst LoggedOutRoutes = () => {\n  console.log('loggedOut');\n  return (\n    <Router>\n      <Route path={'/auth'} component={Auth} />\n      <Route path={'/theme'} component={Theme} />\n      <Redirect from={'*'} to={'/auth'} />\n    </Router>\n  );\n};\n\nconst AppRouter = ({ isLoggedIn }) => {\n  console.log('router');\n  return (\n    <Router>\n      <Switch>{isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />}</Switch>\n    </Router>\n  );\n};\n\nAppRouter.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GlobalStyles from '../Styles/GlobalStyles';\nimport Theme from '../Styles/Theme';\nimport Router from './Router';\nimport Loader from './Loader';\nimport { READ_MYDATA } from '../sharedQueries';\n\nconst IS_LOGGEDIN = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nconst DefaultStyle = styled.div`\n  display: grid;\n  max-width: 935px;\n  font-family: 'KakaoL';\n  font-weight: 600;\n`;\nexport default () => {\n  console.log('app');\n  const { loading: myDataLoading, data: myData } = useQuery(READ_MYDATA);\n  const { loading: loginCheckLoading, data } = useQuery(IS_LOGGEDIN);\n\n  return (\n    <>\n      {loginCheckLoading && myDataLoading && <Loader />}\n      {!(loginCheckLoading && myDataLoading) && data && (\n        <ThemeProvider\n          theme={\n            myData && myData.readMyData && myData.readMyData.avatar\n              ? myData.readMyData.avatar.slice(0, 1) === '#' && data.isLoggedIn\n                ? { ...Theme, activeColor: myData.readMyData.avatar }\n                : Theme\n              : Theme\n          }>\n          <GlobalStyles />\n          <DefaultStyle>\n            <Router isLoggedIn={data.isLoggedIn} />\n          </DefaultStyle>\n          <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\n        </ThemeProvider>\n      )}\n    </>\n  );\n};\n","export const resolvers = {\n  Mutation: {\n    logUserIn: (_, { token }, { cache }) => {\n      localStorage.setItem('token', token);\n      cache.writeData({\n        data: {\n          isLoggedIn: true,\n        },\n      });\n      return null;\n    },\n    logUserOut: (_, __, { cache }) => {\n      localStorage.removeItem('token');\n      window.location = '/';\n      return null;\n    },\n  },\n};\n\n// export const logUserIn = {\n//   Mutation: {\n//     logUserIn: (_, { token }, { cache }) => {\n//       console.log('logUserIn');\n//       localStorage.setItem('token', token);\n//       cache.writeData({\n//         data: {\n//           isLoggedIn: true,\n//         },\n//       });\n//       return null;\n//     },\n//   },\n// };\n// export const logUserOut = {\n//   Mutation: {\n//     logUserOut: (_, __, { cache }) => {\n//       console.log('logUserOut');\n//       localStorage.removeItem('token');\n//       window.location = '/';\n//       return null;\n//     },\n//   },\n// };\n","import {\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n  split,\n} from '@apollo/client';\nimport { setContext } from 'apollo-link-context';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { resolvers } from './LocalState';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\n\nconst config = {\n  pd: {\n    uri: 'https://boongyee.com',\n    ws: 'wss://boongyee.com/socket',\n  },\n  dev: {\n    uri: 'http://localhost:4000',\n    ws: 'ws://localhost:4000/socket',\n  },\n};\n\nconst httpLink = new createHttpLink({\n  uri: config.dev.uri,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n  };\n});\n\nconst sbclient = new SubscriptionClient(config.dev.ws, {\n  reconnect: true,\n});\nconst wsLink = new WebSocketLink(sbclient);\n\nlet cache = new InMemoryCache();\nconst loggedInCheck = cache.writeData({\n  data: {\n    isLoggedIn: Boolean(localStorage.getItem('token')) || false,\n  },\n});\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nconst client = new ApolloClient({\n  cache,\n  link,\n  resolvers: resolvers,\n  writeData: loggedInCheck,\n});\n\nexport default client;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport client from './Apollo/Client';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport './assets/font/font.css';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/3.99b74d8c.jpeg\";"],"sourceRoot":""}